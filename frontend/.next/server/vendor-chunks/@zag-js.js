"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js";
exports.ids = ["vendor-chunks/@zag-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/accordion/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/accordion.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"accordion\").parts(\"root\", \"item\", \"itemTrigger\", \"itemContent\", \"itemIndicator\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `accordion:${ctx.id}`;\nvar getItemId = (ctx, value) => ctx.ids?.item?.(value) ?? `accordion:${ctx.id}:item:${value}`;\nvar getItemContentId = (ctx, value) => ctx.ids?.itemContent?.(value) ?? `accordion:${ctx.id}:content:${value}`;\nvar getItemTriggerId = (ctx, value) => ctx.ids?.itemTrigger?.(value) ?? `accordion:${ctx.id}:trigger:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getTriggerEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `[aria-controls][data-ownedby='${ownerId}']:not([disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getFirstTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(getTriggerEls(ctx));\nvar getLastTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(getTriggerEls(ctx));\nvar getNextTriggerEl = (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(getTriggerEls(ctx), getItemTriggerId(ctx, id));\nvar getPrevTriggerEl = (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(getTriggerEls(ctx), getItemTriggerId(ctx, id));\n\n// src/accordion.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, prop, scope, computed } = service;\n  const focusedValue = context.get(\"focusedValue\");\n  const value = context.get(\"value\");\n  const multiple = prop(\"multiple\");\n  function setValue(value2) {\n    let nextValue = value2;\n    if (!multiple && nextValue.length > 1) {\n      nextValue = [nextValue[0]];\n    }\n    send({ type: \"VALUE.SET\", value: nextValue });\n  }\n  function getItemState(props2) {\n    return {\n      expanded: value.includes(props2.value),\n      focused: focusedValue === props2.value,\n      disabled: Boolean(props2.disabled ?? prop(\"disabled\"))\n    };\n  }\n  return {\n    focusedValue,\n    value,\n    setValue,\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, props2.value),\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemContentProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemContent.attrs,\n        dir: prop(\"dir\"),\n        role: \"region\",\n        id: getItemContentId(scope, props2.value),\n        \"aria-labelledby\": getItemTriggerId(scope, props2.value),\n        hidden: !itemState.expanded,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemTriggerProps(props2) {\n      const { value: value2 } = props2;\n      const itemState = getItemState(props2);\n      return normalize.button({\n        ...parts.itemTrigger.attrs,\n        type: \"button\",\n        dir: prop(\"dir\"),\n        id: getItemTriggerId(scope, value2),\n        \"aria-controls\": getItemContentId(scope, value2),\n        \"aria-expanded\": itemState.expanded,\n        disabled: itemState.disabled,\n        \"data-orientation\": prop(\"orientation\"),\n        \"aria-disabled\": itemState.disabled,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-ownedby\": getRootId(scope),\n        onFocus() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.FOCUS\", value: value2 });\n        },\n        onBlur() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        onClick(event) {\n          if (itemState.disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TRIGGER.CLICK\", value: value2 });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          const keyMap = {\n            ArrowDown() {\n              if (computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowUp() {\n              if (computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            ArrowRight() {\n              if (!computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowLeft() {\n              if (!computed(\"isHorizontal\")) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            Home() {\n              send({ type: \"GOTO.FIRST\", value: value2 });\n            },\n            End() {\n              send({ type: \"GOTO.LAST\", value: value2 });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    }\n  };\n}\nvar { and, not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      collapsible: false,\n      multiple: false,\n      orientation: \"vertical\",\n      defaultValue: [],\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      focusedValue: bindable(() => ({\n        defaultValue: null,\n        sync: true,\n        onChange(value) {\n          prop(\"onFocusChange\")?.({ value });\n        }\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setFocusedValue\"]\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"GOTO.NEXT\": {\n          actions: [\"focusNextTrigger\"]\n        },\n        \"GOTO.PREV\": {\n          actions: [\"focusPrevTrigger\"]\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: and(\"isExpanded\", \"canToggle\"),\n            actions: [\"collapse\"]\n          },\n          {\n            guard: not(\"isExpanded\"),\n            actions: [\"expand\"]\n          }\n        ],\n        \"GOTO.FIRST\": {\n          actions: [\"focusFirstTrigger\"]\n        },\n        \"GOTO.LAST\": {\n          actions: [\"focusLastTrigger\"]\n        },\n        \"TRIGGER.BLUR\": {\n          target: \"idle\",\n          actions: [\"clearFocusedValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      canToggle: ({ prop }) => !!prop(\"collapsible\") || !!prop(\"multiple\"),\n      isExpanded: ({ context, event }) => context.get(\"value\").includes(event.value)\n    },\n    actions: {\n      collapse({ context, prop, event }) {\n        const next = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(context.get(\"value\"), event.value) : [];\n        context.set(\"value\", next);\n      },\n      expand({ context, prop, event }) {\n        const next = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(context.get(\"value\"), event.value) : [event.value];\n        context.set(\"value\", next);\n      },\n      focusFirstTrigger({ scope }) {\n        getFirstTriggerEl(scope)?.focus();\n      },\n      focusLastTrigger({ scope }) {\n        getLastTriggerEl(scope)?.focus();\n      },\n      focusNextTrigger({ context, scope }) {\n        const focusedValue = context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getNextTriggerEl(scope, focusedValue);\n        triggerEl?.focus();\n      },\n      focusPrevTrigger({ context, scope }) {\n        const focusedValue = context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getPrevTriggerEl(scope, focusedValue);\n        triggerEl?.focus();\n      },\n      setFocusedValue({ context, event }) {\n        context.set(\"focusedValue\", event.value);\n      },\n      clearFocusedValue({ context }) {\n        context.set(\"focusedValue\", null);\n      },\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      coarseValue({ context, prop }) {\n        if (!prop(\"multiple\") && context.get(\"value\").length > 1) {\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The value of accordion should be a single value when multiple is false.`);\n          context.set(\"value\", [context.get(\"value\")[0]]);\n        }\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"collapsible\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"multiple\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"value\", \"disabled\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/anatomy/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnatomy: () => (/* binding */ createAnatomy)\n/* harmony export */ });\n// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  omit: (...values) => createAnatomy(name, parts.filter((part) => !values.includes(part))),\n  rename: (newName) => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce(\n    (prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [\n          `&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`,\n          `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`\n        ].join(\", \"),\n        attrs: { \"data-scope\": toKebabCase(name), \"data-part\": toKebabCase(part) }\n      }\n    }),\n    {}\n  )\n});\nvar toKebabCase = (value) => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = (v) => v.length === 0;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGtCQUFrQixnQkFBZ0Isa0JBQWtCO0FBQy9FLDRCQUE0QixrQkFBa0IsZ0JBQWdCLGtCQUFrQjtBQUNoRjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzPzdmOTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NyZWF0ZS1hbmF0b215LnRzXG52YXIgY3JlYXRlQW5hdG9teSA9IChuYW1lLCBwYXJ0cyA9IFtdKSA9PiAoe1xuICBwYXJ0czogKC4uLnZhbHVlcykgPT4ge1xuICAgIGlmIChpc0VtcHR5KHBhcnRzKSkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUFuYXRvbXkobmFtZSwgdmFsdWVzKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY3JlYXRlQW5hdG9teSgpLnBhcnRzKC4uLikgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIG9uY2UuIERpZCB5b3UgbWVhbiB0byB1c2UgLmV4dGVuZFdpdGgoLi4uKSA/XCIpO1xuICB9LFxuICBleHRlbmRXaXRoOiAoLi4udmFsdWVzKSA9PiBjcmVhdGVBbmF0b215KG5hbWUsIFsuLi5wYXJ0cywgLi4udmFsdWVzXSksXG4gIG9taXQ6ICguLi52YWx1ZXMpID0+IGNyZWF0ZUFuYXRvbXkobmFtZSwgcGFydHMuZmlsdGVyKChwYXJ0KSA9PiAhdmFsdWVzLmluY2x1ZGVzKHBhcnQpKSksXG4gIHJlbmFtZTogKG5ld05hbWUpID0+IGNyZWF0ZUFuYXRvbXkobmV3TmFtZSwgcGFydHMpLFxuICBrZXlzOiAoKSA9PiBwYXJ0cyxcbiAgYnVpbGQ6ICgpID0+IFsuLi5uZXcgU2V0KHBhcnRzKV0ucmVkdWNlKFxuICAgIChwcmV2LCBwYXJ0KSA9PiBPYmplY3QuYXNzaWduKHByZXYsIHtcbiAgICAgIFtwYXJ0XToge1xuICAgICAgICBzZWxlY3RvcjogW1xuICAgICAgICAgIGAmW2RhdGEtc2NvcGU9XCIke3RvS2ViYWJDYXNlKG5hbWUpfVwiXVtkYXRhLXBhcnQ9XCIke3RvS2ViYWJDYXNlKHBhcnQpfVwiXWAsXG4gICAgICAgICAgYCYgW2RhdGEtc2NvcGU9XCIke3RvS2ViYWJDYXNlKG5hbWUpfVwiXVtkYXRhLXBhcnQ9XCIke3RvS2ViYWJDYXNlKHBhcnQpfVwiXWBcbiAgICAgICAgXS5qb2luKFwiLCBcIiksXG4gICAgICAgIGF0dHJzOiB7IFwiZGF0YS1zY29wZVwiOiB0b0tlYmFiQ2FzZShuYW1lKSwgXCJkYXRhLXBhcnRcIjogdG9LZWJhYkNhc2UocGFydCkgfVxuICAgICAgfVxuICAgIH0pLFxuICAgIHt9XG4gIClcbn0pO1xudmFyIHRvS2ViYWJDYXNlID0gKHZhbHVlKSA9PiB2YWx1ZS5yZXBsYWNlKC8oW0EtWl0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIikucmVwbGFjZSgvW1xcc19dKy9nLCBcIi1cIikudG9Mb3dlckNhc2UoKTtcbnZhciBpc0VtcHR5ID0gKHYpID0+IHYubGVuZ3RoID09PSAwO1xuXG5leHBvcnQgeyBjcmVhdGVBbmF0b215IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/aria-hidden/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ariaHidden: () => (/* binding */ ariaHidden)\n/* harmony export */ });\n// src/walk-tree-outside.ts\nvar counterMap = /* @__PURE__ */ new WeakMap();\nvar uncontrolledNodes = /* @__PURE__ */ new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = (node) => node && (node.host || unwrapHost(node.parentNode));\nvar correctTargets = (parent, targets) => targets.map((target) => {\n  if (parent.contains(target)) return target;\n  const correctedTarget = unwrapHost(target);\n  if (correctedTarget && parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  console.error(\"[zag-js > ariaHidden] target\", target, \"in not contained inside\", parent, \". Doing nothing\");\n  return null;\n}).filter((x) => Boolean(x));\nvar ignoreableNodes = /* @__PURE__ */ new Set([\"script\", \"output\", \"status\", \"next-route-announcer\"]);\nvar isIgnoredNode = (node) => {\n  if (ignoreableNodes.has(node.localName)) return true;\n  if (node.role === \"status\") return true;\n  if (node.hasAttribute(\"aria-live\")) return true;\n  return node.matches(\"[data-live-announcer]\");\n};\nvar walkTreeOutside = (originalTarget, props) => {\n  const { parentNode, markerName, controlAttribute} = props;\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());\n  const markerCounter = markerMap[markerName];\n  const hiddenNodes = [];\n  const elementsToKeep = /* @__PURE__ */ new Set();\n  const elementsToStop = new Set(targets);\n  const keep = (el) => {\n    if (!el || elementsToKeep.has(el)) return;\n    elementsToKeep.add(el);\n    keep(el.parentNode);\n  };\n  targets.forEach(keep);\n  const deep = (parent) => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, (node) => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        try {\n          if (isIgnoredNode(node)) return;\n          const attr = node.getAttribute(controlAttribute);\n          const alreadyHidden = attr === \"true\" ;\n          const counterValue = (counterMap.get(node) || 0) + 1;\n          const markerValue = (markerCounter.get(node) || 0) + 1;\n          counterMap.set(node, counterValue);\n          markerCounter.set(node, markerValue);\n          hiddenNodes.push(node);\n          if (counterValue === 1 && alreadyHidden) {\n            uncontrolledNodes.set(node, true);\n          }\n          if (markerValue === 1) {\n            node.setAttribute(markerName, \"\");\n          }\n          if (!alreadyHidden) {\n            node.setAttribute(controlAttribute, \"true\" );\n          }\n        } catch (e) {\n          console.error(\"[zag-js > ariaHidden] cannot operate on \", node, e);\n        }\n      }\n    });\n  };\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount++;\n  return () => {\n    hiddenNodes.forEach((node) => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledNodes.has(node)) {\n          node.removeAttribute(controlAttribute);\n        }\n        uncontrolledNodes.delete(node);\n      }\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = /* @__PURE__ */ new WeakMap();\n      counterMap = /* @__PURE__ */ new WeakMap();\n      uncontrolledNodes = /* @__PURE__ */ new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n// src/aria-hidden.ts\nvar getParentNode = (originalTarget) => {\n  const target = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n  return target.ownerDocument.body;\n};\nvar hideOthers = (originalTarget, parentNode = getParentNode(originalTarget), markerName = \"data-aria-hidden\") => {\n  if (!parentNode) return;\n  return walkTreeOutside(originalTarget, {\n    parentNode,\n    markerName,\n    controlAttribute: \"aria-hidden\"});\n};\n\n// src/index.ts\nvar raf = (fn) => {\n  const frameId = requestAnimationFrame(() => fn());\n  return () => cancelAnimationFrame(frameId);\n};\nfunction ariaHidden(targetsOrFn, options = {}) {\n  const { defer = true } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const targets = typeof targetsOrFn === \"function\" ? targetsOrFn() : targetsOrFn;\n      const elements = targets.filter(Boolean);\n      if (elements.length === 0) return;\n      cleanups.push(hideOthers(elements));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwQ0FBMEM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvYXJpYS1oaWRkZW4vZGlzdC9pbmRleC5tanM/NDNmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvd2Fsay10cmVlLW91dHNpZGUudHNcbnZhciBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG52YXIgdW5jb250cm9sbGVkTm9kZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbnZhciBtYXJrZXJNYXAgPSB7fTtcbnZhciBsb2NrQ291bnQgPSAwO1xudmFyIHVud3JhcEhvc3QgPSAobm9kZSkgPT4gbm9kZSAmJiAobm9kZS5ob3N0IHx8IHVud3JhcEhvc3Qobm9kZS5wYXJlbnROb2RlKSk7XG52YXIgY29ycmVjdFRhcmdldHMgPSAocGFyZW50LCB0YXJnZXRzKSA9PiB0YXJnZXRzLm1hcCgodGFyZ2V0KSA9PiB7XG4gIGlmIChwYXJlbnQuY29udGFpbnModGFyZ2V0KSkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3QgY29ycmVjdGVkVGFyZ2V0ID0gdW53cmFwSG9zdCh0YXJnZXQpO1xuICBpZiAoY29ycmVjdGVkVGFyZ2V0ICYmIHBhcmVudC5jb250YWlucyhjb3JyZWN0ZWRUYXJnZXQpKSB7XG4gICAgcmV0dXJuIGNvcnJlY3RlZFRhcmdldDtcbiAgfVxuICBjb25zb2xlLmVycm9yKFwiW3phZy1qcyA+IGFyaWFIaWRkZW5dIHRhcmdldFwiLCB0YXJnZXQsIFwiaW4gbm90IGNvbnRhaW5lZCBpbnNpZGVcIiwgcGFyZW50LCBcIi4gRG9pbmcgbm90aGluZ1wiKTtcbiAgcmV0dXJuIG51bGw7XG59KS5maWx0ZXIoKHgpID0+IEJvb2xlYW4oeCkpO1xudmFyIGlnbm9yZWFibGVOb2RlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcInNjcmlwdFwiLCBcIm91dHB1dFwiLCBcInN0YXR1c1wiLCBcIm5leHQtcm91dGUtYW5ub3VuY2VyXCJdKTtcbnZhciBpc0lnbm9yZWROb2RlID0gKG5vZGUpID0+IHtcbiAgaWYgKGlnbm9yZWFibGVOb2Rlcy5oYXMobm9kZS5sb2NhbE5hbWUpKSByZXR1cm4gdHJ1ZTtcbiAgaWYgKG5vZGUucm9sZSA9PT0gXCJzdGF0dXNcIikgcmV0dXJuIHRydWU7XG4gIGlmIChub2RlLmhhc0F0dHJpYnV0ZShcImFyaWEtbGl2ZVwiKSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiBub2RlLm1hdGNoZXMoXCJbZGF0YS1saXZlLWFubm91bmNlcl1cIik7XG59O1xudmFyIHdhbGtUcmVlT3V0c2lkZSA9IChvcmlnaW5hbFRhcmdldCwgcHJvcHMpID0+IHtcbiAgY29uc3QgeyBwYXJlbnROb2RlLCBtYXJrZXJOYW1lLCBjb250cm9sQXR0cmlidXRlfSA9IHByb3BzO1xuICBjb25zdCB0YXJnZXRzID0gY29ycmVjdFRhcmdldHMocGFyZW50Tm9kZSwgQXJyYXkuaXNBcnJheShvcmlnaW5hbFRhcmdldCkgPyBvcmlnaW5hbFRhcmdldCA6IFtvcmlnaW5hbFRhcmdldF0pO1xuICBtYXJrZXJNYXBbbWFya2VyTmFtZV0gfHwgKG1hcmtlck1hcFttYXJrZXJOYW1lXSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpKTtcbiAgY29uc3QgbWFya2VyQ291bnRlciA9IG1hcmtlck1hcFttYXJrZXJOYW1lXTtcbiAgY29uc3QgaGlkZGVuTm9kZXMgPSBbXTtcbiAgY29uc3QgZWxlbWVudHNUb0tlZXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBlbGVtZW50c1RvU3RvcCA9IG5ldyBTZXQodGFyZ2V0cyk7XG4gIGNvbnN0IGtlZXAgPSAoZWwpID0+IHtcbiAgICBpZiAoIWVsIHx8IGVsZW1lbnRzVG9LZWVwLmhhcyhlbCkpIHJldHVybjtcbiAgICBlbGVtZW50c1RvS2VlcC5hZGQoZWwpO1xuICAgIGtlZXAoZWwucGFyZW50Tm9kZSk7XG4gIH07XG4gIHRhcmdldHMuZm9yRWFjaChrZWVwKTtcbiAgY29uc3QgZGVlcCA9IChwYXJlbnQpID0+IHtcbiAgICBpZiAoIXBhcmVudCB8fCBlbGVtZW50c1RvU3RvcC5oYXMocGFyZW50KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHBhcmVudC5jaGlsZHJlbiwgKG5vZGUpID0+IHtcbiAgICAgIGlmIChlbGVtZW50c1RvS2VlcC5oYXMobm9kZSkpIHtcbiAgICAgICAgZGVlcChub2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKGlzSWdub3JlZE5vZGUobm9kZSkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBhdHRyID0gbm9kZS5nZXRBdHRyaWJ1dGUoY29udHJvbEF0dHJpYnV0ZSk7XG4gICAgICAgICAgY29uc3QgYWxyZWFkeUhpZGRlbiA9IGF0dHIgPT09IFwidHJ1ZVwiIDtcbiAgICAgICAgICBjb25zdCBjb3VudGVyVmFsdWUgPSAoY291bnRlck1hcC5nZXQobm9kZSkgfHwgMCkgKyAxO1xuICAgICAgICAgIGNvbnN0IG1hcmtlclZhbHVlID0gKG1hcmtlckNvdW50ZXIuZ2V0KG5vZGUpIHx8IDApICsgMTtcbiAgICAgICAgICBjb3VudGVyTWFwLnNldChub2RlLCBjb3VudGVyVmFsdWUpO1xuICAgICAgICAgIG1hcmtlckNvdW50ZXIuc2V0KG5vZGUsIG1hcmtlclZhbHVlKTtcbiAgICAgICAgICBoaWRkZW5Ob2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICAgIGlmIChjb3VudGVyVmFsdWUgPT09IDEgJiYgYWxyZWFkeUhpZGRlbikge1xuICAgICAgICAgICAgdW5jb250cm9sbGVkTm9kZXMuc2V0KG5vZGUsIHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobWFya2VyVmFsdWUgPT09IDEpIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKG1hcmtlck5hbWUsIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIWFscmVhZHlIaWRkZW4pIHtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKGNvbnRyb2xBdHRyaWJ1dGUsIFwidHJ1ZVwiICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIlt6YWctanMgPiBhcmlhSGlkZGVuXSBjYW5ub3Qgb3BlcmF0ZSBvbiBcIiwgbm9kZSwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbiAgZGVlcChwYXJlbnROb2RlKTtcbiAgZWxlbWVudHNUb0tlZXAuY2xlYXIoKTtcbiAgbG9ja0NvdW50Kys7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgaGlkZGVuTm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xuICAgICAgY29uc3QgY291bnRlclZhbHVlID0gY291bnRlck1hcC5nZXQobm9kZSkgLSAxO1xuICAgICAgY29uc3QgbWFya2VyVmFsdWUgPSBtYXJrZXJDb3VudGVyLmdldChub2RlKSAtIDE7XG4gICAgICBjb3VudGVyTWFwLnNldChub2RlLCBjb3VudGVyVmFsdWUpO1xuICAgICAgbWFya2VyQ291bnRlci5zZXQobm9kZSwgbWFya2VyVmFsdWUpO1xuICAgICAgaWYgKCFjb3VudGVyVmFsdWUpIHtcbiAgICAgICAgaWYgKCF1bmNvbnRyb2xsZWROb2Rlcy5oYXMobm9kZSkpIHtcbiAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShjb250cm9sQXR0cmlidXRlKTtcbiAgICAgICAgfVxuICAgICAgICB1bmNvbnRyb2xsZWROb2Rlcy5kZWxldGUobm9kZSk7XG4gICAgICB9XG4gICAgICBpZiAoIW1hcmtlclZhbHVlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKG1hcmtlck5hbWUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGxvY2tDb3VudC0tO1xuICAgIGlmICghbG9ja0NvdW50KSB7XG4gICAgICBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG4gICAgICBjb3VudGVyTWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG4gICAgICB1bmNvbnRyb2xsZWROb2RlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuICAgICAgbWFya2VyTWFwID0ge307XG4gICAgfVxuICB9O1xufTtcblxuLy8gc3JjL2FyaWEtaGlkZGVuLnRzXG52YXIgZ2V0UGFyZW50Tm9kZSA9IChvcmlnaW5hbFRhcmdldCkgPT4ge1xuICBjb25zdCB0YXJnZXQgPSBBcnJheS5pc0FycmF5KG9yaWdpbmFsVGFyZ2V0KSA/IG9yaWdpbmFsVGFyZ2V0WzBdIDogb3JpZ2luYWxUYXJnZXQ7XG4gIHJldHVybiB0YXJnZXQub3duZXJEb2N1bWVudC5ib2R5O1xufTtcbnZhciBoaWRlT3RoZXJzID0gKG9yaWdpbmFsVGFyZ2V0LCBwYXJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShvcmlnaW5hbFRhcmdldCksIG1hcmtlck5hbWUgPSBcImRhdGEtYXJpYS1oaWRkZW5cIikgPT4ge1xuICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgcmV0dXJuIHdhbGtUcmVlT3V0c2lkZShvcmlnaW5hbFRhcmdldCwge1xuICAgIHBhcmVudE5vZGUsXG4gICAgbWFya2VyTmFtZSxcbiAgICBjb250cm9sQXR0cmlidXRlOiBcImFyaWEtaGlkZGVuXCJ9KTtcbn07XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIHJhZiA9IChmbikgPT4ge1xuICBjb25zdCBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IGZuKCkpO1xuICByZXR1cm4gKCkgPT4gY2FuY2VsQW5pbWF0aW9uRnJhbWUoZnJhbWVJZCk7XG59O1xuZnVuY3Rpb24gYXJpYUhpZGRlbih0YXJnZXRzT3JGbiwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgZGVmZXIgPSB0cnVlIH0gPSBvcHRpb25zO1xuICBjb25zdCBmdW5jID0gZGVmZXIgPyByYWYgOiAodikgPT4gdigpO1xuICBjb25zdCBjbGVhbnVwcyA9IFtdO1xuICBjbGVhbnVwcy5wdXNoKFxuICAgIGZ1bmMoKCkgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0cyA9IHR5cGVvZiB0YXJnZXRzT3JGbiA9PT0gXCJmdW5jdGlvblwiID8gdGFyZ2V0c09yRm4oKSA6IHRhcmdldHNPckZuO1xuICAgICAgY29uc3QgZWxlbWVudHMgPSB0YXJnZXRzLmZpbHRlcihCb29sZWFuKTtcbiAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIGNsZWFudXBzLnB1c2goaGlkZU90aGVycyhlbGVtZW50cykpO1xuICAgIH0pXG4gICk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IGFyaWFIaWRkZW4gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/auto-resize/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/auto-resize/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoResizeInput: () => (/* binding */ autoResizeInput),\n/* harmony export */   autoresizeTextarea: () => (/* binding */ autoresizeTextarea)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/autoresize-input.ts\nfunction getVisualStyles(node) {\n  if (!node) return;\n  const style = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(node);\n  return \"box-sizing:\" + style.boxSizing + \";border-left:\" + style.borderLeftWidth + \" solid red;border-right:\" + style.borderRightWidth + \" solid red;font-family:\" + style.fontFamily + \";font-feature-settings:\" + style.fontFeatureSettings + \";font-kerning:\" + style.fontKerning + \";font-size:\" + style.fontSize + \";font-stretch:\" + style.fontStretch + \";font-style:\" + style.fontStyle + \";font-variant:\" + style.fontVariant + \";font-variant-caps:\" + style.fontVariantCaps + \";font-variant-ligatures:\" + style.fontVariantLigatures + \";font-variant-numeric:\" + style.fontVariantNumeric + \";font-weight:\" + style.fontWeight + \";letter-spacing:\" + style.letterSpacing + \";margin-left:\" + style.marginLeft + \";margin-right:\" + style.marginRight + \";padding-left:\" + style.paddingLeft + \";padding-right:\" + style.paddingRight + \";text-indent:\" + style.textIndent + \";text-transform:\" + style.textTransform;\n}\n\n// src/autoresize-input.ts\nfunction createGhostElement(doc) {\n  var el = doc.createElement(\"div\");\n  el.id = \"ghost\";\n  el.style.cssText = \"display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;\";\n  doc.body.appendChild(el);\n  return el;\n}\nfunction autoResizeInput(input) {\n  if (!input) return;\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(input);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(input);\n  const ghost = createGhostElement(doc);\n  const cssText = getVisualStyles(input);\n  if (cssText) ghost.style.cssText += cssText;\n  function resize() {\n    win.requestAnimationFrame(() => {\n      ghost.innerHTML = input.value;\n      const rect = win.getComputedStyle(ghost);\n      input?.style.setProperty(\"width\", rect.width);\n    });\n  }\n  resize();\n  input?.addEventListener(\"input\", resize);\n  input?.addEventListener(\"change\", resize);\n  return () => {\n    doc.body.removeChild(ghost);\n    input?.removeEventListener(\"input\", resize);\n    input?.removeEventListener(\"change\", resize);\n  };\n}\nvar autoresizeTextarea = (el) => {\n  if (!el) return;\n  const style = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(el);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(el);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(el);\n  const resize = () => {\n    requestAnimationFrame(() => {\n      el.style.height = \"auto\";\n      let newHeight;\n      if (style.boxSizing === \"content-box\") {\n        newHeight = el.scrollHeight - (parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n      } else {\n        newHeight = el.scrollHeight + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n      }\n      if (style.maxHeight !== \"none\" && newHeight > parseFloat(style.maxHeight)) {\n        if (style.overflowY === \"hidden\") {\n          el.style.overflowY = \"scroll\";\n        }\n        newHeight = parseFloat(style.maxHeight);\n      } else if (style.overflowY !== \"hidden\") {\n        el.style.overflowY = \"hidden\";\n      }\n      el.style.height = `${newHeight}px`;\n    });\n  };\n  el.addEventListener(\"input\", resize);\n  el.form?.addEventListener(\"reset\", resize);\n  const elementPrototype = Object.getPrototypeOf(el);\n  const descriptor = Object.getOwnPropertyDescriptor(elementPrototype, \"value\");\n  Object.defineProperty(el, \"value\", {\n    ...descriptor,\n    set() {\n      descriptor?.set?.apply(this, arguments);\n      resize();\n    }\n  });\n  const resizeObserver = new win.ResizeObserver(() => {\n    requestAnimationFrame(() => resize());\n  });\n  resizeObserver.observe(el);\n  const attrObserver = new win.MutationObserver(() => resize());\n  attrObserver.observe(el, { attributes: true, attributeFilter: [\"rows\", \"placeholder\"] });\n  doc.fonts?.addEventListener(\"loadingdone\", resize);\n  return () => {\n    el.removeEventListener(\"input\", resize);\n    el.form?.removeEventListener(\"reset\", resize);\n    doc.fonts?.removeEventListener(\"loadingdone\", resize);\n    resizeObserver.disconnect();\n    attrObserver.disconnect();\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hdXRvLXJlc2l6ZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkU7O0FBRTdFO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtRUFBZ0I7QUFDaEMsNkNBQTZDLG9EQUFvRCxzREFBc0QscUNBQXFDLHdEQUF3RCx1Q0FBdUMsaUNBQWlDLHVDQUF1QyxtQ0FBbUMsdUNBQXVDLGdEQUFnRCwwREFBMEQsc0RBQXNELHFDQUFxQywyQ0FBMkMscUNBQXFDLHVDQUF1Qyx1Q0FBdUMseUNBQXlDLHFDQUFxQztBQUM5MUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsU0FBUyxnQkFBZ0Isa0JBQWtCLE1BQU0sa0JBQWtCLG1CQUFtQjtBQUNqSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4REFBVztBQUN6QixjQUFjLDREQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1FQUFnQjtBQUNoQyxjQUFjLDREQUFTO0FBQ3ZCLGNBQWMsOERBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSwyQkFBMkIsVUFBVTtBQUNyQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSw2QkFBNkIsNERBQTREO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AemFnLWpzL2F1dG8tcmVzaXplL2Rpc3QvaW5kZXgubWpzPzIyYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RG9jdW1lbnQsIGdldFdpbmRvdywgZ2V0Q29tcHV0ZWRTdHlsZSB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcblxuLy8gc3JjL2F1dG9yZXNpemUtaW5wdXQudHNcbmZ1bmN0aW9uIGdldFZpc3VhbFN0eWxlcyhub2RlKSB7XG4gIGlmICghbm9kZSkgcmV0dXJuO1xuICBjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUobm9kZSk7XG4gIHJldHVybiBcImJveC1zaXppbmc6XCIgKyBzdHlsZS5ib3hTaXppbmcgKyBcIjtib3JkZXItbGVmdDpcIiArIHN0eWxlLmJvcmRlckxlZnRXaWR0aCArIFwiIHNvbGlkIHJlZDtib3JkZXItcmlnaHQ6XCIgKyBzdHlsZS5ib3JkZXJSaWdodFdpZHRoICsgXCIgc29saWQgcmVkO2ZvbnQtZmFtaWx5OlwiICsgc3R5bGUuZm9udEZhbWlseSArIFwiO2ZvbnQtZmVhdHVyZS1zZXR0aW5nczpcIiArIHN0eWxlLmZvbnRGZWF0dXJlU2V0dGluZ3MgKyBcIjtmb250LWtlcm5pbmc6XCIgKyBzdHlsZS5mb250S2VybmluZyArIFwiO2ZvbnQtc2l6ZTpcIiArIHN0eWxlLmZvbnRTaXplICsgXCI7Zm9udC1zdHJldGNoOlwiICsgc3R5bGUuZm9udFN0cmV0Y2ggKyBcIjtmb250LXN0eWxlOlwiICsgc3R5bGUuZm9udFN0eWxlICsgXCI7Zm9udC12YXJpYW50OlwiICsgc3R5bGUuZm9udFZhcmlhbnQgKyBcIjtmb250LXZhcmlhbnQtY2FwczpcIiArIHN0eWxlLmZvbnRWYXJpYW50Q2FwcyArIFwiO2ZvbnQtdmFyaWFudC1saWdhdHVyZXM6XCIgKyBzdHlsZS5mb250VmFyaWFudExpZ2F0dXJlcyArIFwiO2ZvbnQtdmFyaWFudC1udW1lcmljOlwiICsgc3R5bGUuZm9udFZhcmlhbnROdW1lcmljICsgXCI7Zm9udC13ZWlnaHQ6XCIgKyBzdHlsZS5mb250V2VpZ2h0ICsgXCI7bGV0dGVyLXNwYWNpbmc6XCIgKyBzdHlsZS5sZXR0ZXJTcGFjaW5nICsgXCI7bWFyZ2luLWxlZnQ6XCIgKyBzdHlsZS5tYXJnaW5MZWZ0ICsgXCI7bWFyZ2luLXJpZ2h0OlwiICsgc3R5bGUubWFyZ2luUmlnaHQgKyBcIjtwYWRkaW5nLWxlZnQ6XCIgKyBzdHlsZS5wYWRkaW5nTGVmdCArIFwiO3BhZGRpbmctcmlnaHQ6XCIgKyBzdHlsZS5wYWRkaW5nUmlnaHQgKyBcIjt0ZXh0LWluZGVudDpcIiArIHN0eWxlLnRleHRJbmRlbnQgKyBcIjt0ZXh0LXRyYW5zZm9ybTpcIiArIHN0eWxlLnRleHRUcmFuc2Zvcm07XG59XG5cbi8vIHNyYy9hdXRvcmVzaXplLWlucHV0LnRzXG5mdW5jdGlvbiBjcmVhdGVHaG9zdEVsZW1lbnQoZG9jKSB7XG4gIHZhciBlbCA9IGRvYy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBlbC5pZCA9IFwiZ2hvc3RcIjtcbiAgZWwuc3R5bGUuY3NzVGV4dCA9IFwiZGlzcGxheTppbmxpbmUtYmxvY2s7aGVpZ2h0OjA7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3Zpc2liaWxpdHk6aGlkZGVuO3doaXRlLXNwYWNlOm5vd3JhcDtcIjtcbiAgZG9jLmJvZHkuYXBwZW5kQ2hpbGQoZWwpO1xuICByZXR1cm4gZWw7XG59XG5mdW5jdGlvbiBhdXRvUmVzaXplSW5wdXQoaW5wdXQpIHtcbiAgaWYgKCFpbnB1dCkgcmV0dXJuO1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChpbnB1dCk7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhpbnB1dCk7XG4gIGNvbnN0IGdob3N0ID0gY3JlYXRlR2hvc3RFbGVtZW50KGRvYyk7XG4gIGNvbnN0IGNzc1RleHQgPSBnZXRWaXN1YWxTdHlsZXMoaW5wdXQpO1xuICBpZiAoY3NzVGV4dCkgZ2hvc3Quc3R5bGUuY3NzVGV4dCArPSBjc3NUZXh0O1xuICBmdW5jdGlvbiByZXNpemUoKSB7XG4gICAgd2luLnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICBnaG9zdC5pbm5lckhUTUwgPSBpbnB1dC52YWx1ZTtcbiAgICAgIGNvbnN0IHJlY3QgPSB3aW4uZ2V0Q29tcHV0ZWRTdHlsZShnaG9zdCk7XG4gICAgICBpbnB1dD8uc3R5bGUuc2V0UHJvcGVydHkoXCJ3aWR0aFwiLCByZWN0LndpZHRoKTtcbiAgICB9KTtcbiAgfVxuICByZXNpemUoKTtcbiAgaW5wdXQ/LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCByZXNpemUpO1xuICBpbnB1dD8uYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCByZXNpemUpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGRvYy5ib2R5LnJlbW92ZUNoaWxkKGdob3N0KTtcbiAgICBpbnB1dD8ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIHJlc2l6ZSk7XG4gICAgaW5wdXQ/LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgcmVzaXplKTtcbiAgfTtcbn1cbnZhciBhdXRvcmVzaXplVGV4dGFyZWEgPSAoZWwpID0+IHtcbiAgaWYgKCFlbCkgcmV0dXJuO1xuICBjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWwpO1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWwpO1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChlbCk7XG4gIGNvbnN0IHJlc2l6ZSA9ICgpID0+IHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgZWwuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICBsZXQgbmV3SGVpZ2h0O1xuICAgICAgaWYgKHN0eWxlLmJveFNpemluZyA9PT0gXCJjb250ZW50LWJveFwiKSB7XG4gICAgICAgIG5ld0hlaWdodCA9IGVsLnNjcm9sbEhlaWdodCAtIChwYXJzZUZsb2F0KHN0eWxlLnBhZGRpbmdUb3ApICsgcGFyc2VGbG9hdChzdHlsZS5wYWRkaW5nQm90dG9tKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXdIZWlnaHQgPSBlbC5zY3JvbGxIZWlnaHQgKyBwYXJzZUZsb2F0KHN0eWxlLmJvcmRlclRvcFdpZHRoKSArIHBhcnNlRmxvYXQoc3R5bGUuYm9yZGVyQm90dG9tV2lkdGgpO1xuICAgICAgfVxuICAgICAgaWYgKHN0eWxlLm1heEhlaWdodCAhPT0gXCJub25lXCIgJiYgbmV3SGVpZ2h0ID4gcGFyc2VGbG9hdChzdHlsZS5tYXhIZWlnaHQpKSB7XG4gICAgICAgIGlmIChzdHlsZS5vdmVyZmxvd1kgPT09IFwiaGlkZGVuXCIpIHtcbiAgICAgICAgICBlbC5zdHlsZS5vdmVyZmxvd1kgPSBcInNjcm9sbFwiO1xuICAgICAgICB9XG4gICAgICAgIG5ld0hlaWdodCA9IHBhcnNlRmxvYXQoc3R5bGUubWF4SGVpZ2h0KTtcbiAgICAgIH0gZWxzZSBpZiAoc3R5bGUub3ZlcmZsb3dZICE9PSBcImhpZGRlblwiKSB7XG4gICAgICAgIGVsLnN0eWxlLm92ZXJmbG93WSA9IFwiaGlkZGVuXCI7XG4gICAgICB9XG4gICAgICBlbC5zdHlsZS5oZWlnaHQgPSBgJHtuZXdIZWlnaHR9cHhgO1xuICAgIH0pO1xuICB9O1xuICBlbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgcmVzaXplKTtcbiAgZWwuZm9ybT8uYWRkRXZlbnRMaXN0ZW5lcihcInJlc2V0XCIsIHJlc2l6ZSk7XG4gIGNvbnN0IGVsZW1lbnRQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoZWwpO1xuICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlbGVtZW50UHJvdG90eXBlLCBcInZhbHVlXCIpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWwsIFwidmFsdWVcIiwge1xuICAgIC4uLmRlc2NyaXB0b3IsXG4gICAgc2V0KCkge1xuICAgICAgZGVzY3JpcHRvcj8uc2V0Py5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgcmVzaXplKCk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgd2luLlJlc2l6ZU9ic2VydmVyKCgpID0+IHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gcmVzaXplKCkpO1xuICB9KTtcbiAgcmVzaXplT2JzZXJ2ZXIub2JzZXJ2ZShlbCk7XG4gIGNvbnN0IGF0dHJPYnNlcnZlciA9IG5ldyB3aW4uTXV0YXRpb25PYnNlcnZlcigoKSA9PiByZXNpemUoKSk7XG4gIGF0dHJPYnNlcnZlci5vYnNlcnZlKGVsLCB7IGF0dHJpYnV0ZXM6IHRydWUsIGF0dHJpYnV0ZUZpbHRlcjogW1wicm93c1wiLCBcInBsYWNlaG9sZGVyXCJdIH0pO1xuICBkb2MuZm9udHM/LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkaW5nZG9uZVwiLCByZXNpemUpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCByZXNpemUpO1xuICAgIGVsLmZvcm0/LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNldFwiLCByZXNpemUpO1xuICAgIGRvYy5mb250cz8ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRpbmdkb25lXCIsIHJlc2l6ZSk7XG4gICAgcmVzaXplT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIGF0dHJPYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gIH07XG59O1xuXG5leHBvcnQgeyBhdXRvUmVzaXplSW5wdXQsIGF1dG9yZXNpemVUZXh0YXJlYSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/auto-resize/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/avatar/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/avatar.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\n\n// src/avatar.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`;\nvar getImageId = (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`;\nvar getFallbackId = (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getImageEl = (ctx) => ctx.getById(getImageId(ctx));\n\n// src/avatar.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope } = service;\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      const img = getImageEl(scope);\n      img?.setAttribute(\"src\", src);\n    },\n    setLoaded() {\n      send({ type: \"img.loaded\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"img.error\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: prop(\"dir\"),\n        id: getImageId(scope),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"img.loaded\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"img.error\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: prop(\"dir\"),\n        id: getFallbackId(scope),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  initialState() {\n    return \"loading\";\n  },\n  effects: [\"trackImageRemoval\", \"trackSrcChange\"],\n  on: {\n    \"src.change\": {\n      target: \"loading\"\n    },\n    \"img.unmount\": {\n      target: \"error\"\n    }\n  },\n  states: {\n    loading: {\n      entry: [\"checkImageStatus\"],\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        },\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    },\n    error: {\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        }\n      }\n    },\n    loaded: {\n      on: {\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      invokeOnLoad({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"loaded\" });\n      },\n      invokeOnError({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"error\" });\n      },\n      checkImageStatus({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        if (!imageEl?.complete) return;\n        const type = hasLoaded(imageEl) ? \"img.loaded\" : \"img.error\";\n        send({ type, src: \"ssr\" });\n      }\n    },\n    effects: {\n      trackImageRemoval({ send, scope }) {\n        const rootEl = getRootEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeChildren)(rootEl, {\n          callback(records) {\n            const removedNodes = Array.from(records[0].removedNodes);\n            const removed = removedNodes.find(\n              (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n            );\n            if (removed) {\n              send({ type: \"img.unmount\" });\n            }\n          }\n        });\n      },\n      trackSrcChange({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeAttributes)(imageEl, {\n          attributes: [\"src\", \"srcset\"],\n          callback() {\n            send({ type: \"src.change\" });\n          }\n        });\n      }\n    }\n  }\n});\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/checkbox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/checkbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/checkbox.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/checkbox.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, prop, computed, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const invalid = prop(\"invalid\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const checked = computed(\"checked\");\n  const indeterminate = computed(\"indeterminate\");\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"active\")),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"hovered\")),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": indeterminate ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n  };\n  return {\n    checked,\n    disabled,\n    indeterminate,\n    focused,\n    checkedState: checked,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        hidden: !indeterminate && !checked\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": invalid,\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      value: \"on\",\n      ...props2,\n      defaultChecked: !!props2.defaultChecked\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(checked) {\n          prop(\"onCheckedChange\")?.({ checked });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false })),\n      focusVisible: bindable(() => ({ defaultValue: false })),\n      active: bindable(() => ({ defaultValue: false })),\n      focused: bindable(() => ({ defaultValue: false })),\n      hovered: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  watch({ track, context, prop, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  computed: {\n    indeterminate: ({ context }) => isIndeterminate(context.get(\"checked\")),\n    checked: ({ context }) => isChecked(context.get(\"checked\")),\n    disabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ context, computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      },\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"checked\", context.initial(\"checked\"));\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, computed, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, computed(\"checked\"));\n        inputEl.indeterminate = isIndeterminate(context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\") && context.get(\"focused\")) {\n          context.set(\"focused\", false);\n          context.set(\"focusVisible\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context, computed }) {\n        const checked = isIndeterminate(computed(\"checked\")) ? true : !computed(\"checked\");\n        context.set(\"checked\", checked);\n      },\n      dispatchChangeEvent({ computed, scope }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: computed(\"checked\") });\n        });\n      }\n    }\n  }\n});\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction isChecked(checked) {\n  return isIndeterminate(checked) ? false : !!checked;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"defaultChecked\",\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/clipboard/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/clipboard/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   contextProps: () => (/* binding */ contextProps),\n/* harmony export */   indicatorProps: () => (/* binding */ indicatorProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitIndicatorProps: () => (/* binding */ splitIndicatorProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/clipboard.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"clipboard\").parts(\"root\", \"control\", \"trigger\", \"indicator\", \"input\", \"label\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `clip:${ctx.id}`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `clip:${ctx.id}:input`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `clip:${ctx.id}:label`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar writeToClipboard = (ctx, value) => copyText(ctx.getDoc(), value);\nfunction createNode(doc, text) {\n  const node = doc.createElement(\"pre\");\n  Object.assign(node.style, {\n    width: \"1px\",\n    height: \"1px\",\n    position: \"fixed\",\n    top: \"5px\"\n  });\n  node.textContent = text;\n  return node;\n}\nfunction copyNode(node) {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(node);\n  const selection = win.getSelection();\n  if (selection == null) {\n    return Promise.reject(new Error());\n  }\n  selection.removeAllRanges();\n  const doc = node.ownerDocument;\n  const range = doc.createRange();\n  range.selectNodeContents(node);\n  selection.addRange(range);\n  doc.execCommand(\"copy\");\n  selection.removeAllRanges();\n  return Promise.resolve();\n}\nfunction copyText(doc, text) {\n  const win = doc.defaultView || window;\n  if (win.navigator.clipboard?.writeText !== void 0) {\n    return win.navigator.clipboard.writeText(text);\n  }\n  if (!doc.body) {\n    return Promise.reject(new Error());\n  }\n  const node = createNode(doc, text);\n  doc.body.appendChild(node);\n  copyNode(node);\n  doc.body.removeChild(node);\n  return Promise.resolve();\n}\n\n// src/clipboard.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, scope } = service;\n  const copied = state.matches(\"copied\");\n  return {\n    copied,\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    copy() {\n      send({ type: \"COPY\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-copied\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(copied),\n        id: getRootId(scope)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        htmlFor: getInputId(scope),\n        \"data-copied\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(copied),\n        id: getLabelId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-copied\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(copied)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        defaultValue: context.get(\"value\"),\n        \"data-copied\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(copied),\n        readOnly: true,\n        \"data-readonly\": \"true\",\n        id: getInputId(scope),\n        onFocus(event) {\n          event.currentTarget.select();\n        },\n        onCopy() {\n          send({ type: \"INPUT.COPY\" });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        \"aria-label\": copied ? \"Copied to clipboard\" : \"Copy to clipboard\",\n        \"data-copied\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(copied),\n        onClick() {\n          send({ type: \"COPY\" });\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        hidden: props2.copied !== copied\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      timeout: 3e3,\n      defaultValue: \"\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  watch({ track, context, action }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    COPY: {\n      target: \"copied\",\n      actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"INPUT.COPY\": {\n          target: \"copied\",\n          actions: [\"invokeOnCopy\"]\n        }\n      }\n    },\n    copied: {\n      effects: [\"waitForTimeout\"],\n      on: {\n        \"COPY.DONE\": {\n          target: \"idle\"\n        },\n        COPY: {\n          target: \"copied\",\n          actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n        },\n        \"INPUT.COPY\": {\n          actions: [\"invokeOnCopy\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      waitForTimeout({ prop, send }) {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.setRafTimeout)(() => {\n          send({ type: \"COPY.DONE\" });\n        }, prop(\"timeout\"));\n      }\n    },\n    actions: {\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      copyToClipboard({ context, scope }) {\n        writeToClipboard(scope, context.get(\"value\"));\n      },\n      invokeOnCopy({ prop }) {\n        prop(\"onStatusChange\")?.({ copied: true });\n      },\n      syncInputElement({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, context.get(\"value\"));\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"value\",\n  \"defaultValue\",\n  \"timeout\",\n  \"onStatusChange\",\n  \"onValueChange\"\n]);\nvar contextProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(props);\nvar indicatorProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"copied\"]);\nvar splitIndicatorProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(indicatorProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/clipboard/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/collapsible/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/collapsible.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"collapsible\").parts(\"root\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/collapsible.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `collapsible:${ctx.id}`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `collapsible:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `collapsible:${ctx.id}:trigger`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\n\n// src/collapsible.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, scope, prop } = service;\n  const visible = state.matches(\"open\") || state.matches(\"closing\");\n  const open = state.matches(\"open\");\n  const { width, height } = context.get(\"size\");\n  const disabled = !!prop(\"disabled\");\n  const skip = !context.get(\"initial\") && open;\n  const dir = \"ltr\";\n  return {\n    disabled,\n    visible,\n    open,\n    measureSize() {\n      send({ type: \"size.measure\" });\n    },\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"open\" : \"close\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        dir,\n        id: getRootId(scope)\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        \"data-collapsible\": \"\",\n        \"data-state\": skip ? void 0 : open ? \"open\" : \"closed\",\n        id: getContentId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        hidden: !visible,\n        style: {\n          \"--height\": height != null ? `${height}px` : void 0,\n          \"--width\": width != null ? `${width}px` : void 0\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        id: getTriggerId(scope),\n        dir,\n        type: \"button\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": visible || false,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: open ? \"close\" : \"open\" });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      size: bindable(() => ({\n        defaultValue: { height: 0, width: 0 },\n        sync: true\n      })),\n      initial: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  refs() {\n    return {\n      cleanup: void 0,\n      stylesRef: void 0\n    };\n  },\n  watch({ track, prop, action }) {\n    track([() => prop(\"open\")], () => {\n      action([\"setInitial\", \"computeSize\", \"toggleVisibility\"]);\n    });\n  },\n  exit: [\"clearInitial\", \"cleanupNode\"],\n  states: {\n    closed: {\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    closing: {\n      effects: [\"trackExitAnimation\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitial\", \"invokeOnOpen\"]\n          }\n        ],\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnExitComplete\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnExitComplete\"]\n          }\n        ],\n        \"animation.end\": {\n          target: \"closed\",\n          actions: [\"invokeOnExitComplete\", \"clearInitial\"]\n        }\n      }\n    },\n    open: {\n      effects: [\"trackEnterAnimation\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closing\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closing\",\n            actions: [\"setInitial\", \"computeSize\", \"invokeOnClose\"]\n          }\n        ],\n        \"size.measure\": {\n          actions: [\"measureSize\"]\n        },\n        \"animation.end\": {\n          actions: [\"clearInitial\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackEnterAnimation: ({ send, scope }) => {\n        let cleanup;\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n          const hasNoAnimation = !animationName || animationName === \"none\";\n          if (hasNoAnimation) {\n            send({ type: \"animation.end\" });\n            return;\n          }\n          const onEnd = (event) => {\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n            if (target === contentEl) {\n              send({ type: \"animation.end\" });\n            }\n          };\n          contentEl.addEventListener(\"animationend\", onEnd);\n          cleanup = () => {\n            contentEl.removeEventListener(\"animationend\", onEnd);\n          };\n        });\n        return () => {\n          rafCleanup();\n          cleanup?.();\n        };\n      },\n      trackExitAnimation: ({ send, scope }) => {\n        let cleanup;\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n          const hasNoAnimation = !animationName || animationName === \"none\";\n          if (hasNoAnimation) {\n            send({ type: \"animation.end\" });\n            return;\n          }\n          const onEnd = (event) => {\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n            if (target === contentEl) {\n              send({ type: \"animation.end\" });\n            }\n          };\n          contentEl.addEventListener(\"animationend\", onEnd);\n          const restoreStyles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setStyle)(contentEl, {\n            animationFillMode: \"forwards\"\n          });\n          cleanup = () => {\n            contentEl.removeEventListener(\"animationend\", onEnd);\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => restoreStyles());\n          };\n        });\n        return () => {\n          rafCleanup();\n          cleanup?.();\n        };\n      }\n    },\n    actions: {\n      setInitial: ({ context, flush }) => {\n        flush(() => {\n          context.set(\"initial\", true);\n        });\n      },\n      clearInitial: ({ context }) => {\n        context.set(\"initial\", false);\n      },\n      cleanupNode: ({ refs }) => {\n        refs.set(\"stylesRef\", null);\n      },\n      measureSize: ({ context, scope }) => {\n        const contentEl = getContentEl(scope);\n        if (!contentEl) return;\n        const { height, width } = contentEl.getBoundingClientRect();\n        context.set(\"size\", { height, width });\n      },\n      computeSize: ({ refs, scope, context }) => {\n        refs.get(\"cleanup\")?.();\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const hidden = contentEl.hidden;\n          contentEl.style.animationName = \"none\";\n          contentEl.style.animationDuration = \"0s\";\n          contentEl.hidden = false;\n          const rect = contentEl.getBoundingClientRect();\n          context.set(\"size\", { height: rect.height, width: rect.width });\n          if (context.get(\"initial\")) {\n            contentEl.style.animationName = \"\";\n            contentEl.style.animationDuration = \"\";\n          }\n          contentEl.hidden = hidden;\n        });\n        refs.set(\"cleanup\", rafCleanup);\n      },\n      invokeOnOpen: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnExitComplete: ({ prop }) => {\n        prop(\"onExitComplete\")?.();\n      },\n      toggleVisibility: ({ prop, send }) => {\n        send({ type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\" });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onExitComplete\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collection/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/collection/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridCollection: () => (/* binding */ GridCollection),\n/* harmony export */   ListCollection: () => (/* binding */ ListCollection),\n/* harmony export */   Selection: () => (/* binding */ Selection),\n/* harmony export */   TreeCollection: () => (/* binding */ TreeCollection),\n/* harmony export */   filePathToTree: () => (/* binding */ filePathToTree),\n/* harmony export */   flattenedToTree: () => (/* binding */ flattenedToTree),\n/* harmony export */   isGridCollection: () => (/* binding */ isGridCollection),\n/* harmony export */   isListCollection: () => (/* binding */ isListCollection)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar fallback = {\n  itemToValue(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"value\")) return item.value;\n    return \"\";\n  },\n  itemToString(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"label\")) return item.label;\n    return fallback.itemToValue(item);\n  },\n  isItemDisabled(item) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"disabled\")) return !!item.disabled;\n    return false;\n  }\n};\nvar ListCollection = class _ListCollection {\n  constructor(options) {\n    this.options = options;\n    /**\n     * The items in the collection\n     */\n    __publicField(this, \"items\");\n    __publicField(this, \"indexMap\", null);\n    /**\n     * Copy the collection\n     */\n    __publicField(this, \"copy\", (items) => {\n      return new _ListCollection({ ...this.options, items: items ?? [...this.items] });\n    });\n    /**\n     * Check if the collection is equal to another collection\n     */\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.items, other.items);\n    });\n    /**\n     * Function to update the collection items\n     */\n    __publicField(this, \"setItems\", (items) => {\n      return this.copy(items);\n    });\n    /**\n     * Returns all the values in the collection\n     */\n    __publicField(this, \"getValues\", (items = this.items) => {\n      const values = [];\n      for (const item of items) {\n        const value = this.getItemValue(item);\n        if (value != null) values.push(value);\n      }\n      return values;\n    });\n    /**\n     * Get the item based on its value\n     */\n    __publicField(this, \"find\", (value) => {\n      if (value == null) return null;\n      const index = this.indexOf(value);\n      return index !== -1 ? this.at(index) : null;\n    });\n    /**\n     * Get the items based on its values\n     */\n    __publicField(this, \"findMany\", (values) => {\n      const result = [];\n      for (const value of values) {\n        const item = this.find(value);\n        if (item != null) result.push(item);\n      }\n      return result;\n    });\n    /**\n     * Get the item based on its index\n     */\n    __publicField(this, \"at\", (index) => {\n      if (!this.options.groupBy && !this.options.groupSort) {\n        return this.items[index] ?? null;\n      }\n      let idx = 0;\n      const groups = this.group();\n      for (const [, items] of groups) {\n        for (const item of items) {\n          if (idx === index) return item;\n          idx++;\n        }\n      }\n      return null;\n    });\n    __publicField(this, \"sortFn\", (valueA, valueB) => {\n      const indexA = this.indexOf(valueA);\n      const indexB = this.indexOf(valueB);\n      return (indexA ?? 0) - (indexB ?? 0);\n    });\n    /**\n     * Sort the values based on their index\n     */\n    __publicField(this, \"sort\", (values) => {\n      return [...values].sort(this.sortFn.bind(this));\n    });\n    /**\n     * Convert an item to a value\n     */\n    __publicField(this, \"getItemValue\", (item) => {\n      if (item == null) return null;\n      return this.options.itemToValue?.(item) ?? fallback.itemToValue(item);\n    });\n    /**\n     * Whether an item is disabled\n     */\n    __publicField(this, \"getItemDisabled\", (item) => {\n      if (item == null) return false;\n      return this.options.isItemDisabled?.(item) ?? fallback.isItemDisabled(item);\n    });\n    /**\n     * Convert an item to a string\n     */\n    __publicField(this, \"stringifyItem\", (item) => {\n      if (item == null) return null;\n      return this.options.itemToString?.(item) ?? fallback.itemToString(item);\n    });\n    /**\n     * Convert a value to a string\n     */\n    __publicField(this, \"stringify\", (value) => {\n      if (value == null) return null;\n      return this.stringifyItem(this.find(value));\n    });\n    /**\n     * Convert an array of items to a string\n     */\n    __publicField(this, \"stringifyItems\", (items, separator = \", \") => {\n      const strs = [];\n      for (const item of items) {\n        const str = this.stringifyItem(item);\n        if (str != null) strs.push(str);\n      }\n      return strs.join(separator);\n    });\n    /**\n     * Convert an array of items to a string\n     */\n    __publicField(this, \"stringifyMany\", (value, separator) => {\n      return this.stringifyItems(this.findMany(value), separator);\n    });\n    /**\n     * Whether the collection has a value\n     */\n    __publicField(this, \"has\", (value) => {\n      return this.indexOf(value) !== -1;\n    });\n    /**\n     * Whether the collection has an item\n     */\n    __publicField(this, \"hasItem\", (item) => {\n      if (item == null) return false;\n      return this.has(this.getItemValue(item));\n    });\n    /**\n     * Group items by the groupBy function provided in options\n     * Returns an array of [groupKey, items] tuples\n     */\n    __publicField(this, \"group\", () => {\n      const { groupBy, groupSort } = this.options;\n      if (!groupBy) return [[\"\", [...this.items]]];\n      const groups = /* @__PURE__ */ new Map();\n      this.items.forEach((item, index) => {\n        const groupKey = groupBy(item, index);\n        if (!groups.has(groupKey)) {\n          groups.set(groupKey, []);\n        }\n        groups.get(groupKey).push(item);\n      });\n      let entries = Array.from(groups.entries());\n      if (groupSort) {\n        entries.sort(([a], [b]) => {\n          if (typeof groupSort === \"function\") return groupSort(a, b);\n          if (Array.isArray(groupSort)) {\n            const indexA = groupSort.indexOf(a);\n            const indexB = groupSort.indexOf(b);\n            if (indexA === -1) return 1;\n            if (indexB === -1) return -1;\n            return indexA - indexB;\n          }\n          if (groupSort === \"asc\") return a.localeCompare(b);\n          if (groupSort === \"desc\") return b.localeCompare(a);\n          return 0;\n        });\n      }\n      return entries;\n    });\n    /**\n     * Returns the next value in the collection\n     */\n    __publicField(this, \"getNextValue\", (value, step = 1, clamp = false) => {\n      let index = this.indexOf(value);\n      if (index === -1) return null;\n      index = clamp ? Math.min(index + step, this.size - 1) : index + step;\n      while (index <= this.size && this.getItemDisabled(this.at(index))) index++;\n      return this.getItemValue(this.at(index));\n    });\n    /**\n     * Returns the previous value in the collection\n     */\n    __publicField(this, \"getPreviousValue\", (value, step = 1, clamp = false) => {\n      let index = this.indexOf(value);\n      if (index === -1) return null;\n      index = clamp ? Math.max(index - step, 0) : index - step;\n      while (index >= 0 && this.getItemDisabled(this.at(index))) index--;\n      return this.getItemValue(this.at(index));\n    });\n    /**\n     * Get the index of an item based on its key\n     */\n    __publicField(this, \"indexOf\", (value) => {\n      if (value == null) return -1;\n      if (!this.options.groupBy && !this.options.groupSort) {\n        return this.items.findIndex((item) => this.getItemValue(item) === value);\n      }\n      if (!this.indexMap) {\n        this.indexMap = /* @__PURE__ */ new Map();\n        let idx = 0;\n        const groups = this.group();\n        for (const [, items] of groups) {\n          for (const item of items) {\n            const itemValue = this.getItemValue(item);\n            if (itemValue != null) {\n              this.indexMap.set(itemValue, idx);\n            }\n            idx++;\n          }\n        }\n      }\n      return this.indexMap.get(value) ?? -1;\n    });\n    __publicField(this, \"getByText\", (text, current) => {\n      const currentIndex = current != null ? this.indexOf(current) : -1;\n      const isSingleKey = text.length === 1;\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[(currentIndex + i + 1) % this.items.length];\n        if (isSingleKey && this.getItemValue(item) === current) continue;\n        if (this.getItemDisabled(item)) continue;\n        if (match(this.stringifyItem(item), text)) return item;\n      }\n      return void 0;\n    });\n    /**\n     * Search for a value based on a query\n     */\n    __publicField(this, \"search\", (queryString, options) => {\n      const { state, currentValue, timeout = 350 } = options;\n      const search = state.keysSoFar + queryString;\n      const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n      const query = isRepeated ? search[0] : search;\n      const item = this.getByText(query, currentValue);\n      const value = this.getItemValue(item);\n      function cleanup() {\n        clearTimeout(state.timer);\n        state.timer = -1;\n      }\n      function update(value2) {\n        state.keysSoFar = value2;\n        cleanup();\n        if (value2 !== \"\") {\n          state.timer = +setTimeout(() => {\n            update(\"\");\n            cleanup();\n          }, timeout);\n        }\n      }\n      update(search);\n      return value;\n    });\n    /**\n     * Update an item in the collection\n     */\n    __publicField(this, \"update\", (value, item) => {\n      let index = this.indexOf(value);\n      if (index === -1) return this;\n      return this.copy([...this.items.slice(0, index), item, ...this.items.slice(index + 1)]);\n    });\n    /**\n     * Update an item in the collection if it exists, otherwise append it\n     */\n    __publicField(this, \"upsert\", (value, item, mode = \"append\") => {\n      let index = this.indexOf(value);\n      if (index === -1) {\n        const fn = mode === \"append\" ? this.append : this.prepend;\n        return fn(item);\n      }\n      return this.copy([...this.items.slice(0, index), item, ...this.items.slice(index + 1)]);\n    });\n    /**\n     * Insert items at a specific index\n     */\n    __publicField(this, \"insert\", (index, ...items) => {\n      return this.copy(insert(this.items, index, ...items));\n    });\n    /**\n     * Insert items before a specific value\n     */\n    __publicField(this, \"insertBefore\", (value, ...items) => {\n      let toIndex = this.indexOf(value);\n      if (toIndex === -1) {\n        if (this.items.length === 0) toIndex = 0;\n        else return this;\n      }\n      return this.copy(insert(this.items, toIndex, ...items));\n    });\n    /**\n     * Insert items after a specific value\n     */\n    __publicField(this, \"insertAfter\", (value, ...items) => {\n      let toIndex = this.indexOf(value);\n      if (toIndex === -1) {\n        if (this.items.length === 0) toIndex = 0;\n        else return this;\n      }\n      return this.copy(insert(this.items, toIndex + 1, ...items));\n    });\n    /**\n     * Prepend items to the collection\n     */\n    __publicField(this, \"prepend\", (...items) => {\n      return this.copy(insert(this.items, 0, ...items));\n    });\n    /**\n     * Append items to the collection\n     */\n    __publicField(this, \"append\", (...items) => {\n      return this.copy(insert(this.items, this.items.length, ...items));\n    });\n    /**\n     * Filter the collection\n     */\n    __publicField(this, \"filter\", (fn) => {\n      const filteredItems = this.items.filter((item, index) => fn(this.stringifyItem(item), index, item));\n      return this.copy(filteredItems);\n    });\n    /**\n     * Remove items from the collection\n     */\n    __publicField(this, \"remove\", (...itemsOrValues) => {\n      const values = itemsOrValues.map(\n        (itemOrValue) => typeof itemOrValue === \"string\" ? itemOrValue : this.getItemValue(itemOrValue)\n      );\n      return this.copy(\n        this.items.filter((item) => {\n          const value = this.getItemValue(item);\n          if (value == null) return false;\n          return !values.includes(value);\n        })\n      );\n    });\n    /**\n     * Move an item to a specific index\n     */\n    __publicField(this, \"move\", (value, toIndex) => {\n      const fromIndex = this.indexOf(value);\n      if (fromIndex === -1) return this;\n      return this.copy(move(this.items, [fromIndex], toIndex));\n    });\n    /**\n     * Move items before a specific value\n     */\n    __publicField(this, \"moveBefore\", (value, ...values) => {\n      let toIndex = this.items.findIndex((item) => this.getItemValue(item) === value);\n      if (toIndex === -1) return this;\n      let indices = values.map((value2) => this.items.findIndex((item) => this.getItemValue(item) === value2)).sort((a, b) => a - b);\n      return this.copy(move(this.items, indices, toIndex));\n    });\n    /**\n     * Move items after a specific value\n     */\n    __publicField(this, \"moveAfter\", (value, ...values) => {\n      let toIndex = this.items.findIndex((item) => this.getItemValue(item) === value);\n      if (toIndex === -1) return this;\n      let indices = values.map((value2) => this.items.findIndex((item) => this.getItemValue(item) === value2)).sort((a, b) => a - b);\n      return this.copy(move(this.items, indices, toIndex + 1));\n    });\n    /**\n     * Reorder items\n     */\n    __publicField(this, \"reorder\", (fromIndex, toIndex) => {\n      return this.copy(move(this.items, [fromIndex], toIndex));\n    });\n    /**\n     * Compare two values\n     */\n    __publicField(this, \"compareValue\", (a, b) => {\n      const indexA = this.indexOf(a);\n      const indexB = this.indexOf(b);\n      if (indexA < indexB) return -1;\n      if (indexA > indexB) return 1;\n      return 0;\n    });\n    /**\n     * Get the range of values between two values\n     */\n    __publicField(this, \"range\", (from, to) => {\n      let keys = [];\n      let key = from;\n      while (key != null) {\n        let item = this.find(key);\n        if (item) keys.push(key);\n        if (key === to) return keys;\n        key = this.getNextValue(key);\n      }\n      return [];\n    });\n    /**\n     * Get the range of values between two values\n     */\n    __publicField(this, \"getValueRange\", (from, to) => {\n      if (from && to) {\n        if (this.compareValue(from, to) <= 0) {\n          return this.range(from, to);\n        }\n        return this.range(to, from);\n      }\n      return [];\n    });\n    /**\n     * Convert the collection to a string\n     */\n    __publicField(this, \"toString\", () => {\n      let result = \"\";\n      for (const item of this.items) {\n        const value = this.getItemValue(item);\n        const label = this.stringifyItem(item);\n        const disabled = this.getItemDisabled(item);\n        const itemString = [value, label, disabled].filter(Boolean).join(\":\");\n        result += itemString + \",\";\n      }\n      return result;\n    });\n    /**\n     * Convert the collection to a JSON object\n     */\n    __publicField(this, \"toJSON\", () => {\n      return {\n        size: this.size,\n        first: this.firstValue,\n        last: this.lastValue\n      };\n    });\n    this.items = [...options.items];\n  }\n  /**\n   * Returns the number of items in the collection\n   */\n  get size() {\n    return this.items.length;\n  }\n  /**\n   * Returns the first value in the collection\n   */\n  get firstValue() {\n    let index = 0;\n    while (this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the last value in the collection\n   */\n  get lastValue() {\n    let index = this.size - 1;\n    while (this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  *[Symbol.iterator]() {\n    yield* this.items;\n  }\n};\nvar match = (label, query) => {\n  return !!label?.toLowerCase().startsWith(query.toLowerCase());\n};\nfunction isListCollection(v) {\n  return v instanceof ListCollection;\n}\nfunction insert(items, index, ...values) {\n  return [...items.slice(0, index), ...values, ...items.slice(index)];\n}\nfunction move(items, indices, toIndex) {\n  indices = [...indices].sort((a, b) => a - b);\n  const itemsToMove = indices.map((i) => items[i]);\n  for (let i = indices.length - 1; i >= 0; i--) {\n    items = [...items.slice(0, indices[i]), ...items.slice(indices[i] + 1)];\n  }\n  toIndex = Math.max(0, toIndex - indices.filter((i) => i < toIndex).length);\n  return [...items.slice(0, toIndex), ...itemsToMove, ...items.slice(toIndex)];\n}\n\n// src/grid-collection.ts\nvar GridCollection = class extends ListCollection {\n  constructor(options) {\n    const { columnCount } = options;\n    super(options);\n    __publicField(this, \"columnCount\");\n    __publicField(this, \"rows\", null);\n    /**\n     * Returns the row data in the grid\n     */\n    __publicField(this, \"getRows\", () => {\n      if (!this.rows) {\n        this.rows = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.chunk)([...this.items], this.columnCount);\n      }\n      return this.rows;\n    });\n    /**\n     * Returns the number of rows in the grid\n     */\n    __publicField(this, \"getRowCount\", () => {\n      return Math.ceil(this.items.length / this.columnCount);\n    });\n    /**\n     * Returns the index of the specified row and column in the grid\n     */\n    __publicField(this, \"getCellIndex\", (row, column) => {\n      return row * this.columnCount + column;\n    });\n    /**\n     * Returns the item at the specified row and column in the grid\n     */\n    __publicField(this, \"getCell\", (row, column) => {\n      return this.at(this.getCellIndex(row, column));\n    });\n    /**\n     * Returns the row and column index for a given value\n     */\n    __publicField(this, \"getValueCell\", (value) => {\n      const index = this.indexOf(value);\n      if (index === -1) return null;\n      const row = Math.floor(index / this.columnCount);\n      const column = index % this.columnCount;\n      return { row, column };\n    });\n    /**\n     * Returns the value of the last enabled column in a row\n     */\n    __publicField(this, \"getLastEnabledColumnIndex\", (row) => {\n      for (let col = this.columnCount - 1; col >= 0; col--) {\n        const cell = this.getCell(row, col);\n        if (cell && !this.getItemDisabled(cell)) {\n          return col;\n        }\n      }\n      return null;\n    });\n    /**\n     * Returns the index of the first enabled column in a row\n     */\n    __publicField(this, \"getFirstEnabledColumnIndex\", (row) => {\n      for (let col = 0; col < this.columnCount; col++) {\n        const cell = this.getCell(row, col);\n        if (cell && !this.getItemDisabled(cell)) {\n          return col;\n        }\n      }\n      return null;\n    });\n    /**\n     * Returns the value of the previous row in the grid, based on the current value\n     */\n    __publicField(this, \"getPreviousRowValue\", (value, loop = false) => {\n      const currentCell = this.getValueCell(value);\n      if (currentCell === null) return null;\n      const rows = this.getRows();\n      const rowCount = rows.length;\n      let prevRowIndex = currentCell.row;\n      let prevColumnIndex = currentCell.column;\n      for (let i = 1; i <= rowCount; i++) {\n        prevRowIndex = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.prevIndex)(rows, prevRowIndex, { loop });\n        const prevRow = rows[prevRowIndex];\n        if (!prevRow) continue;\n        const prevCell = prevRow[prevColumnIndex];\n        if (!prevCell) {\n          const lastColumnIndex = this.getLastEnabledColumnIndex(prevRowIndex);\n          if (lastColumnIndex != null) {\n            prevColumnIndex = lastColumnIndex;\n          }\n        }\n        const cell = this.getCell(prevRowIndex, prevColumnIndex);\n        if (!this.getItemDisabled(cell)) {\n          return this.getItemValue(cell);\n        }\n      }\n      return this.firstValue;\n    });\n    /**\n     * Returns the value of the next row in the grid, based on the current value\n     */\n    __publicField(this, \"getNextRowValue\", (value, loop = false) => {\n      const currentCell = this.getValueCell(value);\n      if (currentCell === null) return null;\n      const rows = this.getRows();\n      const rowCount = rows.length;\n      let nextRowIndex = currentCell.row;\n      let nextColumnIndex = currentCell.column;\n      for (let i = 1; i <= rowCount; i++) {\n        nextRowIndex = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.nextIndex)(rows, nextRowIndex, { loop });\n        const nextRow = rows[nextRowIndex];\n        if (!nextRow) continue;\n        const nextCell = nextRow[nextColumnIndex];\n        if (!nextCell) {\n          const lastColumnIndex = this.getLastEnabledColumnIndex(nextRowIndex);\n          if (lastColumnIndex != null) {\n            nextColumnIndex = lastColumnIndex;\n          }\n        }\n        const cell = this.getCell(nextRowIndex, nextColumnIndex);\n        if (!this.getItemDisabled(cell)) {\n          return this.getItemValue(cell);\n        }\n      }\n      return this.lastValue;\n    });\n    this.columnCount = columnCount;\n  }\n};\nfunction isGridCollection(v) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(v, \"columnCount\") && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(v, \"getRows\");\n}\nvar Selection = class _Selection extends Set {\n  constructor(values = []) {\n    super(values);\n    __publicField(this, \"selectionMode\", \"single\");\n    __publicField(this, \"deselectable\", true);\n    __publicField(this, \"copy\", () => {\n      const clone = new _Selection([...this]);\n      return this.sync(clone);\n    });\n    __publicField(this, \"sync\", (other) => {\n      other.selectionMode = this.selectionMode;\n      other.deselectable = this.deselectable;\n      return other;\n    });\n    __publicField(this, \"isEmpty\", () => {\n      return this.size === 0;\n    });\n    __publicField(this, \"isSelected\", (value) => {\n      if (this.selectionMode === \"none\" || value == null) {\n        return false;\n      }\n      return this.has(value);\n    });\n    __publicField(this, \"canSelect\", (collection, value) => {\n      return this.selectionMode !== \"none\" || !collection.getItemDisabled(collection.find(value));\n    });\n    __publicField(this, \"firstSelectedValue\", (collection) => {\n      let firstValue = null;\n      for (let value of this) {\n        if (!firstValue || collection.compareValue(value, firstValue) < 0) {\n          firstValue = value;\n        }\n      }\n      return firstValue;\n    });\n    __publicField(this, \"lastSelectedValue\", (collection) => {\n      let lastValue = null;\n      for (let value of this) {\n        if (!lastValue || collection.compareValue(value, lastValue) > 0) {\n          lastValue = value;\n        }\n      }\n      return lastValue;\n    });\n    __publicField(this, \"extendSelection\", (collection, anchorValue, targetValue) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\") {\n        return this.replaceSelection(collection, targetValue);\n      }\n      const selection = this.copy();\n      const lastSelected = Array.from(this).pop();\n      for (let key of collection.getValueRange(anchorValue, lastSelected ?? targetValue)) {\n        selection.delete(key);\n      }\n      for (let key of collection.getValueRange(targetValue, anchorValue)) {\n        if (this.canSelect(collection, key)) {\n          selection.add(key);\n        }\n      }\n      return selection;\n    });\n    __publicField(this, \"toggleSelection\", (collection, value) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\" && !this.isSelected(value)) {\n        return this.replaceSelection(collection, value);\n      }\n      const selection = this.copy();\n      if (selection.has(value)) {\n        selection.delete(value);\n      } else if (selection.canSelect(collection, value)) {\n        selection.add(value);\n      }\n      return selection;\n    });\n    __publicField(this, \"replaceSelection\", (collection, value) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (value == null) {\n        return this;\n      }\n      if (!this.canSelect(collection, value)) {\n        return this;\n      }\n      const selection = new _Selection([value]);\n      return this.sync(selection);\n    });\n    __publicField(this, \"setSelection\", (values) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      let selection = new _Selection();\n      for (let value of values) {\n        if (value != null) {\n          selection.add(value);\n          if (this.selectionMode === \"single\") {\n            break;\n          }\n        }\n      }\n      return this.sync(selection);\n    });\n    __publicField(this, \"clearSelection\", () => {\n      const selection = this.copy();\n      if (selection.deselectable && selection.size > 0) {\n        selection.clear();\n      }\n      return selection;\n    });\n    __publicField(this, \"select\", (collection, value, forceToggle) => {\n      if (this.selectionMode === \"none\") {\n        return this;\n      }\n      if (this.selectionMode === \"single\") {\n        if (this.isSelected(value) && this.deselectable) {\n          return this.toggleSelection(collection, value);\n        } else {\n          return this.replaceSelection(collection, value);\n        }\n      } else if (this.selectionMode === \"multiple\" || forceToggle) {\n        return this.toggleSelection(collection, value);\n      } else {\n        return this.replaceSelection(collection, value);\n      }\n    });\n    __publicField(this, \"deselect\", (value) => {\n      const selection = this.copy();\n      selection.delete(value);\n      return selection;\n    });\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(Array.from(this), Array.from(other));\n    });\n  }\n};\n\n// src/tree-visit.ts\nfunction access(node, indexPath, options) {\n  for (let i = 0; i < indexPath.length; i++) node = options.getChildren(node, indexPath.slice(i + 1))[indexPath[i]];\n  return node;\n}\nfunction ancestorIndexPaths(indexPaths) {\n  const sortedPaths = sortIndexPaths(indexPaths);\n  const result = [];\n  const seen = /* @__PURE__ */ new Set();\n  for (const indexPath of sortedPaths) {\n    const key = indexPath.join();\n    if (!seen.has(key)) {\n      seen.add(key);\n      result.push(indexPath);\n    }\n  }\n  return result;\n}\nfunction compareIndexPaths(a, b) {\n  for (let i = 0; i < Math.min(a.length, b.length); i++) {\n    if (a[i] < b[i]) return -1;\n    if (a[i] > b[i]) return 1;\n  }\n  return a.length - b.length;\n}\nfunction sortIndexPaths(indexPaths) {\n  return indexPaths.sort(compareIndexPaths);\n}\nfunction find(node, options) {\n  let found;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = child;\n        return \"stop\";\n      }\n    }\n  });\n  return found;\n}\nfunction findAll(node, options) {\n  const found = [];\n  visit(node, {\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) found.push(child);\n    },\n    getChildren: options.getChildren\n  });\n  return found;\n}\nfunction findIndexPath(node, options) {\n  let found;\n  visit(node, {\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = [...indexPath];\n        return \"stop\";\n      }\n    },\n    getChildren: options.getChildren\n  });\n  return found;\n}\nfunction reduce(node, options) {\n  let result = options.initialResult;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      result = options.nextResult(result, child, indexPath);\n    }\n  });\n  return result;\n}\nfunction flatMap(node, options) {\n  return reduce(node, {\n    ...options,\n    initialResult: [],\n    nextResult: (result, child, indexPath) => {\n      result.push(...options.transform(child, indexPath));\n      return result;\n    }\n  });\n}\nfunction filter(node, options) {\n  const { predicate, create, getChildren } = options;\n  const filterRecursive = (node2, indexPath) => {\n    const children = getChildren(node2, indexPath);\n    const filteredChildren = [];\n    children.forEach((child, index) => {\n      const childIndexPath = [...indexPath, index];\n      const filteredChild = filterRecursive(child, childIndexPath);\n      if (filteredChild) filteredChildren.push(filteredChild);\n    });\n    const isRoot = indexPath.length === 0;\n    const nodeMatches = predicate(node2, indexPath);\n    const hasFilteredChildren = filteredChildren.length > 0;\n    if (isRoot || nodeMatches || hasFilteredChildren) {\n      return create(node2, filteredChildren, indexPath);\n    }\n    return null;\n  };\n  return filterRecursive(node, []) || create(node, [], []);\n}\nfunction flatten(rootNode, options) {\n  const nodes = [];\n  let idx = 0;\n  const idxMap = /* @__PURE__ */ new Map();\n  const parentMap = /* @__PURE__ */ new Map();\n  visit(rootNode, {\n    getChildren: options.getChildren,\n    onEnter: (node, indexPath) => {\n      if (!idxMap.has(node)) {\n        idxMap.set(node, idx++);\n      }\n      const children = options.getChildren(node, indexPath);\n      children.forEach((child) => {\n        if (!parentMap.has(child)) {\n          parentMap.set(child, node);\n        }\n        if (!idxMap.has(child)) {\n          idxMap.set(child, idx++);\n        }\n      });\n      const _children = children.length > 0 ? children.map((child) => idxMap.get(child)) : void 0;\n      const parent = parentMap.get(node);\n      const _parent = parent ? idxMap.get(parent) : void 0;\n      const _index = idxMap.get(node);\n      nodes.push({ ...node, _children, _parent, _index });\n    }\n  });\n  return nodes;\n}\nfunction insertOperation(index, nodes) {\n  return { type: \"insert\", index, nodes };\n}\nfunction removeOperation(indexes) {\n  return { type: \"remove\", indexes };\n}\nfunction replaceOperation() {\n  return { type: \"replace\" };\n}\nfunction splitIndexPath(indexPath) {\n  return [indexPath.slice(0, -1), indexPath[indexPath.length - 1]];\n}\nfunction getInsertionOperations(indexPath, nodes, operations = /* @__PURE__ */ new Map()) {\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    switch (operations.get(parentKey)?.type) {\n      case \"remove\":\n        continue;\n    }\n    operations.set(parentKey, replaceOperation());\n  }\n  const operation = operations.get(parentIndexPath.join());\n  switch (operation?.type) {\n    case \"remove\":\n      operations.set(parentIndexPath.join(), {\n        type: \"removeThenInsert\",\n        removeIndexes: operation.indexes,\n        insertIndex: index,\n        insertNodes: nodes\n      });\n      break;\n    default:\n      operations.set(parentIndexPath.join(), insertOperation(index, nodes));\n  }\n  return operations;\n}\nfunction getRemovalOperations(indexPaths) {\n  const operations = /* @__PURE__ */ new Map();\n  const indexesToRemove = /* @__PURE__ */ new Map();\n  for (const indexPath of indexPaths) {\n    const parentKey = indexPath.slice(0, -1).join();\n    const value = indexesToRemove.get(parentKey) ?? [];\n    value.push(indexPath[indexPath.length - 1]);\n    indexesToRemove.set(\n      parentKey,\n      value.sort((a, b) => a - b)\n    );\n  }\n  for (const indexPath of indexPaths) {\n    for (let i = indexPath.length - 2; i >= 0; i--) {\n      const parentKey = indexPath.slice(0, i).join();\n      if (!operations.has(parentKey)) {\n        operations.set(parentKey, replaceOperation());\n      }\n    }\n  }\n  for (const [parentKey, indexes] of indexesToRemove) {\n    operations.set(parentKey, removeOperation(indexes));\n  }\n  return operations;\n}\nfunction getReplaceOperations(indexPath, node) {\n  const operations = /* @__PURE__ */ new Map();\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    operations.set(parentKey, replaceOperation());\n  }\n  operations.set(parentIndexPath.join(), {\n    type: \"removeThenInsert\",\n    removeIndexes: [index],\n    insertIndex: index,\n    insertNodes: [node]\n  });\n  return operations;\n}\nfunction mutate(node, operations, options) {\n  return map(node, {\n    ...options,\n    getChildren: (node2, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"replace\":\n        case \"remove\":\n        case \"removeThenInsert\":\n        case \"insert\":\n          return options.getChildren(node2, indexPath);\n        default:\n          return [];\n      }\n    },\n    transform: (node2, children, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"remove\":\n          return options.create(\n            node2,\n            children.filter((_, index) => !operation.indexes.includes(index)),\n            indexPath\n          );\n        case \"removeThenInsert\":\n          const updatedChildren = children.filter((_, index) => !operation.removeIndexes.includes(index));\n          const adjustedIndex = operation.removeIndexes.reduce(\n            (index, removedIndex) => removedIndex < index ? index - 1 : index,\n            operation.insertIndex\n          );\n          return options.create(node2, splice(updatedChildren, adjustedIndex, 0, ...operation.insertNodes), indexPath);\n        case \"insert\":\n          return options.create(node2, splice(children, operation.index, 0, ...operation.nodes), indexPath);\n        case \"replace\":\n          return options.create(node2, children, indexPath);\n        default:\n          return node2;\n      }\n    }\n  });\n}\nfunction splice(array, start, deleteCount, ...items) {\n  return [...array.slice(0, start), ...items, ...array.slice(start + deleteCount)];\n}\nfunction map(node, options) {\n  const childrenMap = {};\n  visit(node, {\n    ...options,\n    onLeave: (child, indexPath) => {\n      const keyIndexPath = [0, ...indexPath];\n      const key = keyIndexPath.join();\n      const transformed = options.transform(child, childrenMap[key] ?? [], indexPath);\n      const parentKey = keyIndexPath.slice(0, -1).join();\n      const parentChildren = childrenMap[parentKey] ?? [];\n      parentChildren.push(transformed);\n      childrenMap[parentKey] = parentChildren;\n    }\n  });\n  return childrenMap[\"\"][0];\n}\nfunction insert2(node, options) {\n  const { nodes, at } = options;\n  if (at.length === 0) throw new Error(`Can't insert nodes at the root`);\n  const state = getInsertionOperations(at, nodes);\n  return mutate(node, state, options);\n}\nfunction replace(node, options) {\n  if (options.at.length === 0) return options.node;\n  const operations = getReplaceOperations(options.at, options.node);\n  return mutate(node, operations, options);\n}\nfunction remove(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't remove the root node`);\n  }\n  const operations = getRemovalOperations(options.indexPaths);\n  return mutate(node, operations, options);\n}\nfunction move2(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't move the root node`);\n  }\n  if (options.to.length === 0) throw new Error(`Can't move nodes to the root`);\n  const _ancestorIndexPaths = ancestorIndexPaths(options.indexPaths);\n  const nodesToInsert = _ancestorIndexPaths.map((indexPath) => access(node, indexPath, options));\n  const operations = getInsertionOperations(options.to, nodesToInsert, getRemovalOperations(_ancestorIndexPaths));\n  return mutate(node, operations, options);\n}\nfunction visit(node, options) {\n  const { onEnter, onLeave, getChildren } = options;\n  let indexPath = [];\n  let stack = [{ node }];\n  const getIndexPath = options.reuseIndexPath ? () => indexPath : () => indexPath.slice();\n  while (stack.length > 0) {\n    let wrapper = stack[stack.length - 1];\n    if (wrapper.state === void 0) {\n      const enterResult = onEnter?.(wrapper.node, getIndexPath());\n      if (enterResult === \"stop\") return;\n      wrapper.state = enterResult === \"skip\" ? -1 : 0;\n    }\n    const children = wrapper.children || getChildren(wrapper.node, getIndexPath());\n    wrapper.children || (wrapper.children = children);\n    if (wrapper.state !== -1) {\n      if (wrapper.state < children.length) {\n        let currentIndex = wrapper.state;\n        indexPath.push(currentIndex);\n        stack.push({ node: children[currentIndex] });\n        wrapper.state = currentIndex + 1;\n        continue;\n      }\n      const leaveResult = onLeave?.(wrapper.node, getIndexPath());\n      if (leaveResult === \"stop\") return;\n    }\n    indexPath.pop();\n    stack.pop();\n  }\n}\n\n// src/tree-collection.ts\nvar TreeCollection = class _TreeCollection {\n  constructor(options) {\n    this.options = options;\n    __publicField(this, \"rootNode\");\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.rootNode, other.rootNode);\n    });\n    __publicField(this, \"getNodeChildren\", (node) => {\n      return this.options.nodeToChildren?.(node) ?? fallbackMethods.nodeToChildren(node) ?? [];\n    });\n    __publicField(this, \"resolveIndexPath\", (valueOrIndexPath) => {\n      return typeof valueOrIndexPath === \"string\" ? this.getIndexPath(valueOrIndexPath) : valueOrIndexPath;\n    });\n    __publicField(this, \"resolveNode\", (valueOrIndexPath) => {\n      const indexPath = this.resolveIndexPath(valueOrIndexPath);\n      return indexPath ? this.at(indexPath) : void 0;\n    });\n    __publicField(this, \"getNodeChildrenCount\", (node) => {\n      return this.options.nodeToChildrenCount?.(node) ?? fallbackMethods.nodeToChildrenCount(node);\n    });\n    __publicField(this, \"getNodeValue\", (node) => {\n      return this.options.nodeToValue?.(node) ?? fallbackMethods.nodeToValue(node);\n    });\n    __publicField(this, \"getNodeDisabled\", (node) => {\n      return this.options.isNodeDisabled?.(node) ?? fallbackMethods.isNodeDisabled(node);\n    });\n    __publicField(this, \"stringify\", (value) => {\n      const node = this.findNode(value);\n      if (!node) return null;\n      return this.stringifyNode(node);\n    });\n    __publicField(this, \"stringifyNode\", (node) => {\n      return this.options.nodeToString?.(node) ?? fallbackMethods.nodeToString(node);\n    });\n    __publicField(this, \"getFirstNode\", (rootNode = this.rootNode) => {\n      let firstChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (!firstChild && indexPath.length > 0 && !this.getNodeDisabled(node)) {\n            firstChild = node;\n            return \"stop\";\n          }\n        }\n      });\n      return firstChild;\n    });\n    __publicField(this, \"getLastNode\", (rootNode = this.rootNode, opts = {}) => {\n      let lastChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isSameNode(node, rootNode)) return;\n          if (opts.skip?.({ value: this.getNodeValue(node), node, indexPath })) return \"skip\";\n          if (indexPath.length > 0 && !this.getNodeDisabled(node)) {\n            lastChild = node;\n          }\n        }\n      });\n      return lastChild;\n    });\n    __publicField(this, \"at\", (indexPath) => {\n      return access(this.rootNode, indexPath, {\n        getChildren: this.getNodeChildren\n      });\n    });\n    __publicField(this, \"findNode\", (value, rootNode = this.rootNode) => {\n      return find(rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"findNodes\", (values, rootNode = this.rootNode) => {\n      const v = new Set(values.filter((v2) => v2 != null));\n      return findAll(rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => v.has(this.getNodeValue(node))\n      });\n    });\n    __publicField(this, \"sort\", (values) => {\n      return values.reduce((acc, value) => {\n        const indexPath = this.getIndexPath(value);\n        if (indexPath) acc.push({ value, indexPath });\n        return acc;\n      }, []).sort((a, b) => compareIndexPaths(a.indexPath, b.indexPath)).map(({ value }) => value);\n    });\n    __publicField(this, \"getIndexPath\", (value) => {\n      return findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"getValue\", (indexPath) => {\n      const node = this.at(indexPath);\n      return node ? this.getNodeValue(node) : void 0;\n    });\n    __publicField(this, \"getValuePath\", (indexPath) => {\n      if (!indexPath) return [];\n      const valuePath = [];\n      let currentPath = [...indexPath];\n      while (currentPath.length > 0) {\n        const node = this.at(currentPath);\n        if (node) valuePath.unshift(this.getNodeValue(node));\n        currentPath.pop();\n      }\n      return valuePath;\n    });\n    __publicField(this, \"getDepth\", (value) => {\n      const indexPath = findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n      return indexPath?.length ?? 0;\n    });\n    __publicField(this, \"isSameNode\", (node, other) => {\n      return this.getNodeValue(node) === this.getNodeValue(other);\n    });\n    __publicField(this, \"isRootNode\", (node) => {\n      return this.isSameNode(node, this.rootNode);\n    });\n    __publicField(this, \"contains\", (parentIndexPath, valueIndexPath) => {\n      if (!parentIndexPath || !valueIndexPath) return false;\n      return valueIndexPath.slice(0, parentIndexPath.length).every((_, i) => parentIndexPath[i] === valueIndexPath[i]);\n    });\n    __publicField(this, \"getNextNode\", (value, opts = {}) => {\n      let found = false;\n      let nextNode;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            if (nodeValue === value) {\n              found = true;\n            }\n            return \"skip\";\n          }\n          if (found && !this.getNodeDisabled(node)) {\n            nextNode = node;\n            return \"stop\";\n          }\n          if (nodeValue === value) {\n            found = true;\n          }\n        }\n      });\n      return nextNode;\n    });\n    __publicField(this, \"getPreviousNode\", (value, opts = {}) => {\n      let previousNode;\n      let found = false;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            return \"skip\";\n          }\n          if (nodeValue === value) {\n            found = true;\n            return \"stop\";\n          }\n          if (!this.getNodeDisabled(node)) {\n            previousNode = node;\n          }\n        }\n      });\n      return found ? previousNode : void 0;\n    });\n    __publicField(this, \"getParentNodes\", (valueOrIndexPath) => {\n      const indexPath = this.resolveIndexPath(valueOrIndexPath)?.slice();\n      if (!indexPath) return [];\n      const result = [];\n      while (indexPath.length > 0) {\n        indexPath.pop();\n        const parentNode = this.at(indexPath);\n        if (parentNode && !this.isRootNode(parentNode)) {\n          result.unshift(parentNode);\n        }\n      }\n      return result;\n    });\n    __publicField(this, \"getDescendantNodes\", (valueOrIndexPath, options) => {\n      const parentNode = this.resolveNode(valueOrIndexPath);\n      if (!parentNode) return [];\n      const result = [];\n      visit(parentNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, nodeIndexPath) => {\n          if (nodeIndexPath.length === 0) return;\n          if (!options?.withBranch && this.isBranchNode(node)) return;\n          result.push(node);\n        }\n      });\n      return result;\n    });\n    __publicField(this, \"getDescendantValues\", (valueOrIndexPath, options) => {\n      const children = this.getDescendantNodes(valueOrIndexPath, options);\n      return children.map((child) => this.getNodeValue(child));\n    });\n    __publicField(this, \"getParentIndexPath\", (indexPath) => {\n      return indexPath.slice(0, -1);\n    });\n    __publicField(this, \"getParentNode\", (valueOrIndexPath) => {\n      const indexPath = this.resolveIndexPath(valueOrIndexPath);\n      return indexPath ? this.at(this.getParentIndexPath(indexPath)) : void 0;\n    });\n    __publicField(this, \"visit\", (opts) => {\n      const { skip, ...rest } = opts;\n      visit(this.rootNode, {\n        ...rest,\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          if (skip?.({ value: this.getNodeValue(node), node, indexPath })) return \"skip\";\n          return rest.onEnter?.(node, indexPath);\n        }\n      });\n    });\n    __publicField(this, \"getPreviousSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = indexPath[indexPath.length - 1];\n      while (--idx >= 0) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getNextSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = indexPath[indexPath.length - 1];\n      while (++idx < siblings.length) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getSiblingNodes\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this.getNodeChildren(parentNode) : [];\n    });\n    __publicField(this, \"getValues\", (rootNode = this.rootNode) => {\n      const values = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node) => [this.getNodeValue(node)]\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"isValidDepth\", (indexPath, depth) => {\n      if (depth == null) return true;\n      if (typeof depth === \"function\") return depth(indexPath.length);\n      return indexPath.length === depth;\n    });\n    __publicField(this, \"isBranchNode\", (node) => {\n      return this.getNodeChildren(node).length > 0 || this.getNodeChildrenCount(node) != null;\n    });\n    __publicField(this, \"getBranchValues\", (rootNode = this.rootNode, opts = {}) => {\n      let values = [];\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (indexPath.length === 0) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (this.isBranchNode(node) && this.isValidDepth(indexPath, opts.depth)) {\n            values.push(this.getNodeValue(node));\n          }\n        }\n      });\n      return values;\n    });\n    __publicField(this, \"flatten\", (rootNode = this.rootNode) => {\n      return flatten(rootNode, { getChildren: this.getNodeChildren });\n    });\n    __publicField(this, \"_create\", (node, children) => {\n      if (this.getNodeChildren(node).length > 0 || children.length > 0) {\n        return { ...node, children };\n      }\n      return { ...node };\n    });\n    __publicField(this, \"_insert\", (rootNode, indexPath, nodes) => {\n      return this.copy(\n        insert2(rootNode, { at: indexPath, nodes, getChildren: this.getNodeChildren, create: this._create })\n      );\n    });\n    __publicField(this, \"copy\", (rootNode) => {\n      return new _TreeCollection({ ...this.options, rootNode });\n    });\n    __publicField(this, \"_replace\", (rootNode, indexPath, node) => {\n      return this.copy(\n        replace(rootNode, { at: indexPath, node, getChildren: this.getNodeChildren, create: this._create })\n      );\n    });\n    __publicField(this, \"_move\", (rootNode, indexPaths, to) => {\n      return this.copy(move2(rootNode, { indexPaths, to, getChildren: this.getNodeChildren, create: this._create }));\n    });\n    __publicField(this, \"_remove\", (rootNode, indexPaths) => {\n      return this.copy(remove(rootNode, { indexPaths, getChildren: this.getNodeChildren, create: this._create }));\n    });\n    __publicField(this, \"replace\", (indexPath, node) => {\n      return this._replace(this.rootNode, indexPath, node);\n    });\n    __publicField(this, \"remove\", (indexPaths) => {\n      return this._remove(this.rootNode, indexPaths);\n    });\n    __publicField(this, \"insertBefore\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this._insert(this.rootNode, indexPath, nodes) : void 0;\n    });\n    __publicField(this, \"insertAfter\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const nextIndex2 = [...indexPath.slice(0, -1), indexPath[indexPath.length - 1] + 1];\n      return this._insert(this.rootNode, nextIndex2, nodes);\n    });\n    __publicField(this, \"move\", (fromIndexPaths, toIndexPath) => {\n      return this._move(this.rootNode, fromIndexPaths, toIndexPath);\n    });\n    __publicField(this, \"filter\", (predicate) => {\n      const filteredRoot = filter(this.rootNode, {\n        predicate,\n        getChildren: this.getNodeChildren,\n        create: this._create\n      });\n      return this.copy(filteredRoot);\n    });\n    __publicField(this, \"toJSON\", () => {\n      return this.getValues(this.rootNode);\n    });\n    this.rootNode = options.rootNode;\n  }\n};\nfunction flattenedToTree(nodes, options = fallbackMethods) {\n  if (nodes.length === 0) {\n    throw new Error(\"[zag-js/tree] Cannot create tree from empty flattened array\");\n  }\n  const rootFlatNode = nodes.find((node) => node._parent === void 0);\n  if (!rootFlatNode) {\n    throw new Error(\"[zag-js/tree] No root node found in flattened data\");\n  }\n  const nodeMap = /* @__PURE__ */ new Map();\n  nodes.forEach((node) => {\n    nodeMap.set(node._index, node);\n  });\n  const buildNode = (idx) => {\n    const flatNode = nodeMap.get(idx);\n    if (!flatNode) return {};\n    const { _children, _parent, _index, ...cleanNode } = flatNode;\n    const children = [];\n    _children?.forEach((childIndex) => {\n      children.push(buildNode(childIndex));\n    });\n    return {\n      ...cleanNode,\n      ...children.length > 0 && { children }\n    };\n  };\n  const rootNode = buildNode(rootFlatNode._index);\n  return new TreeCollection({ ...options, rootNode });\n}\nfunction filePathToTree(paths) {\n  const rootNode = {\n    label: \"\",\n    value: \"ROOT\",\n    children: []\n  };\n  paths.forEach((path) => {\n    const parts = path.split(\"/\");\n    let currentNode = rootNode;\n    parts.forEach((part, index) => {\n      let childNode = currentNode.children?.find((child) => child.label === part);\n      if (!childNode) {\n        childNode = {\n          value: parts.slice(0, index + 1).join(\"/\"),\n          label: part\n        };\n        currentNode.children || (currentNode.children = []);\n        currentNode.children.push(childNode);\n      }\n      currentNode = childNode;\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nvar fallbackMethods = {\n  nodeToValue(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"value\")) return node.value;\n    return \"\";\n  },\n  nodeToString(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"label\")) return node.label;\n    return fallbackMethods.nodeToValue(node);\n  },\n  isNodeDisabled(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"disabled\")) return !!node.disabled;\n    return false;\n  },\n  nodeToChildren(node) {\n    return node.children;\n  },\n  nodeToChildrenCount(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"childrenCount\")) return node.childrenCount;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/color-picker/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   areaProps: () => (/* binding */ areaProps),\n/* harmony export */   channelProps: () => (/* binding */ channelProps),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitAreaProps: () => (/* binding */ splitAreaProps),\n/* harmony export */   splitChannelProps: () => (/* binding */ splitChannelProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitSwatchProps: () => (/* binding */ splitSwatchProps),\n/* harmony export */   splitSwatchTriggerProps: () => (/* binding */ splitSwatchTriggerProps),\n/* harmony export */   splitTransparencyGridProps: () => (/* binding */ splitTransparencyGridProps),\n/* harmony export */   swatchProps: () => (/* binding */ swatchProps),\n/* harmony export */   swatchTriggerProps: () => (/* binding */ swatchTriggerProps),\n/* harmony export */   transparencyGridProps: () => (/* binding */ transparencyGridProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/color-utils */ \"(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/color-picker.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"color-picker\", [\n  \"root\",\n  \"label\",\n  \"control\",\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"area\",\n  \"areaThumb\",\n  \"valueText\",\n  \"areaBackground\",\n  \"channelSlider\",\n  \"channelSliderLabel\",\n  \"channelSliderTrack\",\n  \"channelSliderThumb\",\n  \"channelSliderValueText\",\n  \"channelInput\",\n  \"transparencyGrid\",\n  \"swatchGroup\",\n  \"swatchTrigger\",\n  \"swatchIndicator\",\n  \"swatch\",\n  \"eyeDropperTrigger\",\n  \"formatTrigger\",\n  \"formatSelect\"\n]);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `color-picker:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `color-picker:${ctx.id}:label`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `color-picker:${ctx.id}:hidden-input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `color-picker:${ctx.id}:control`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `color-picker:${ctx.id}:trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `color-picker:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `color-picker:${ctx.id}:positioner`;\nvar getFormatSelectId = (ctx) => ctx.ids?.formatSelect ?? `color-picker:${ctx.id}:format-select`;\nvar getAreaId = (ctx) => ctx.ids?.area ?? `color-picker:${ctx.id}:area`;\nvar getAreaGradientId = (ctx) => ctx.ids?.areaGradient ?? `color-picker:${ctx.id}:area-gradient`;\nvar getAreaThumbId = (ctx) => ctx.ids?.areaThumb ?? `color-picker:${ctx.id}:area-thumb`;\nvar getChannelSliderTrackId = (ctx, channel) => ctx.ids?.channelSliderTrack?.(channel) ?? `color-picker:${ctx.id}:slider-track:${channel}`;\nvar getChannelSliderThumbId = (ctx, channel) => ctx.ids?.channelSliderThumb?.(channel) ?? `color-picker:${ctx.id}:slider-thumb:${channel}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getAreaThumbEl = (ctx) => ctx.getById(getAreaThumbId(ctx));\nvar getChannelSliderThumbEl = (ctx, channel) => ctx.getById(getChannelSliderThumbId(ctx, channel));\nvar getFormatSelectEl = (ctx) => ctx.getById(getFormatSelectId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar getAreaEl = (ctx) => ctx.getById(getAreaId(ctx));\nvar getAreaValueFromPoint = (ctx, point, dir) => {\n  const areaEl = getAreaEl(ctx);\n  if (!areaEl) return;\n  const { getPercentValue } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, areaEl);\n  return {\n    x: getPercentValue({ dir, orientation: \"horizontal\" }),\n    y: getPercentValue({ orientation: \"vertical\" })\n  };\n};\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getChannelSliderTrackEl = (ctx, channel) => ctx.getById(getChannelSliderTrackId(ctx, channel));\nvar getChannelSliderValueFromPoint = (ctx, point, channel, dir) => {\n  const trackEl = getChannelSliderTrackEl(ctx, channel);\n  if (!trackEl) return;\n  const { getPercentValue } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, trackEl);\n  return {\n    x: getPercentValue({ dir, orientation: \"horizontal\" }),\n    y: getPercentValue({ orientation: \"vertical\" })\n  };\n};\nvar getChannelInputEls = (ctx) => {\n  return [\n    ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getContentEl(ctx), \"input[data-channel]\"),\n    ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getControlEl(ctx), \"input[data-channel]\")\n  ];\n};\nfunction getChannelDisplayColor(color, channel) {\n  switch (channel) {\n    case \"hue\":\n      return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(`hsl(${color.getChannelValue(\"hue\")}, 100%, 50%)`);\n    case \"lightness\":\n    case \"brightness\":\n    case \"saturation\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.withChannelValue(\"alpha\", 1);\n    case \"alpha\": {\n      return color;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n}\nfunction getChannelValue(color, channel) {\n  if (channel == null) return \"\";\n  if (channel === \"hex\") {\n    return color.toString(\"hex\");\n  }\n  if (channel === \"css\") {\n    return color.toString(\"css\");\n  }\n  if (channel in color) {\n    return color.getChannelValue(channel).toString();\n  }\n  const isHSL = color.getFormat() === \"hsla\";\n  switch (channel) {\n    case \"hue\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"hue\").toString() : color.toFormat(\"hsba\").getChannelValue(\"hue\").toString();\n    case \"saturation\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"saturation\").toString() : color.toFormat(\"hsba\").getChannelValue(\"saturation\").toString();\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelValue(\"lightness\").toString();\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelValue(\"brightness\").toString();\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelValue(channel).toString();\n    default:\n      return color.getChannelValue(channel).toString();\n  }\n}\nfunction getChannelRange(color, channel) {\n  switch (channel) {\n    case \"hex\":\n      const minColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#000000\");\n      const maxColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#FFFFFF\");\n      return {\n        minValue: minColor.toHexInt(),\n        maxValue: maxColor.toHexInt(),\n        pageSize: 10,\n        step: 1\n      };\n    case \"css\":\n      return void 0;\n    case \"hue\":\n    case \"saturation\":\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelRange(channel);\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelRange(channel);\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelRange(channel);\n    default:\n      return color.getChannelRange(channel);\n  }\n}\n\n// src/utils/get-slider-background.ts\nfunction getSliderBackgroundDirection(orientation, dir) {\n  if (orientation === \"vertical\") {\n    return \"top\";\n  } else if (dir === \"ltr\") {\n    return \"right\";\n  } else {\n    return \"left\";\n  }\n}\nvar getSliderBackground = (props2) => {\n  const { channel, value, dir, orientation } = props2;\n  const bgDirection = getSliderBackgroundDirection(orientation, dir);\n  const { minValue, maxValue } = value.getChannelRange(channel);\n  switch (channel) {\n    case \"hue\":\n      return `linear-gradient(to ${bgDirection}, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`;\n    case \"lightness\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let middle = value.withChannelValue(channel, (maxValue - minValue) / 2).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${middle}, ${end})`;\n    }\n    case \"saturation\":\n    case \"brightness\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n    case \"alpha\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${end})`;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n};\n\n// src/color-picker.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, computed, state, scope } = service;\n  const value = context.get(\"value\");\n  const format = context.get(\"format\");\n  const areaValue = computed(\"areaValue\");\n  const valueAsString = computed(\"valueAsString\");\n  const disabled = computed(\"disabled\");\n  const interactive = computed(\"interactive\");\n  const dragging = state.hasTag(\"dragging\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const getAreaChannels = (props2) => {\n    const channels = areaValue.getChannels();\n    return {\n      xChannel: props2.xChannel ?? channels[1],\n      yChannel: props2.yChannel ?? channels[2]\n    };\n  };\n  const currentPlacement = context.get(\"currentPlacement\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  function getSwatchTriggerState(props2) {\n    const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(props2.value).toFormat(context.get(\"format\"));\n    return {\n      value: color,\n      valueAsString: color.toString(\"hex\"),\n      checked: color.isEqual(value),\n      disabled: props2.disabled || !interactive\n    };\n  }\n  return {\n    dragging,\n    open,\n    valueAsString,\n    value,\n    inline: !!prop(\"inline\"),\n    setOpen(nextOpen) {\n      if (prop(\"inline\")) return;\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(value2), src: \"set-color\" });\n    },\n    getChannelValue(channel) {\n      return getChannelValue(value, channel);\n    },\n    getChannelValueText(channel, locale) {\n      return value.formatChannelValue(channel, locale);\n    },\n    setChannelValue(channel, channelValue) {\n      const color = value.withChannelValue(channel, channelValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-channel\" });\n    },\n    format: context.get(\"format\"),\n    setFormat(format2) {\n      const formatValue = value.toFormat(format2);\n      send({ type: \"VALUE.SET\", value: formatValue, src: \"set-format\" });\n    },\n    alpha: value.getChannelValue(\"alpha\"),\n    setAlpha(alphaValue) {\n      const color = value.withChannelValue(\"alpha\", alphaValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-alpha\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        style: {\n          \"--value\": value.toString(\"css\")\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        onClick(event) {\n          event.preventDefault();\n          const inputEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getControlEl(scope), \"[data-channel=hex]\");\n          inputEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        id: getControlId(scope),\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: getTriggerId(scope),\n        dir: prop(\"dir\"),\n        disabled,\n        \"aria-label\": `select color. current color is ${valueAsString}`,\n        \"aria-controls\": getContentId(scope),\n        \"aria-labelledby\": getLabelId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-placement\": currentPlacement,\n        \"aria-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        type: \"button\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: getPositionerId(scope),\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: getContentId(scope),\n        dir: prop(\"dir\"),\n        tabIndex: -1,\n        \"data-placement\": currentPlacement,\n        \"data-state\": open ? \"open\" : \"closed\",\n        hidden: !open\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getAreaProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const { areaStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: prop(\"dir\")\n      });\n      return normalize.element({\n        ...parts.area.attrs,\n        id: getAreaId(scope),\n        role: \"group\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const channel = { xChannel, yChannel };\n          send({ type: \"AREA.POINTER_DOWN\", point, channel, id: \"area\" });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaStyles\n        }\n      });\n    },\n    getAreaBackgroundProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const { areaGradientStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: prop(\"dir\")\n      });\n      return normalize.element({\n        ...parts.areaBackground.attrs,\n        id: getAreaGradientId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaGradientStyles\n        }\n      });\n    },\n    getAreaThumbProps(props2 = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props2);\n      const channel = { xChannel, yChannel };\n      const xPercent = areaValue.getChannelValuePercent(xChannel);\n      const yPercent = 1 - areaValue.getChannelValuePercent(yChannel);\n      const isRtl = prop(\"dir\") === \"rtl\";\n      const finalXPercent = isRtl ? 1 - xPercent : xPercent;\n      const xValue = areaValue.getChannelValue(xChannel);\n      const yValue = areaValue.getChannelValue(yChannel);\n      const color = areaValue.withChannelValue(\"alpha\", 1).toString(\"css\");\n      return normalize.element({\n        ...parts.areaThumb.attrs,\n        id: getAreaThumbId(scope),\n        dir: prop(\"dir\"),\n        tabIndex: disabled ? void 0 : 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        role: \"slider\",\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": xValue,\n        \"aria-label\": `${xChannel} and ${yChannel}`,\n        \"aria-roledescription\": \"2d slider\",\n        \"aria-valuetext\": `${xChannel} ${xValue}, ${yChannel} ${yValue}`,\n        style: {\n          position: \"absolute\",\n          left: `${finalXPercent * 100}%`,\n          top: `${yPercent * 100}%`,\n          transform: \"translate(-50%, -50%)\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          \"--color\": color,\n          background: color\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"AREA.FOCUS\", id: \"area\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event);\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"AREA.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"AREA.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"AREA.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"AREA.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"AREA.PAGE_UP\", channel, step });\n            },\n            PageDown() {\n              send({ type: \"AREA.PAGE_DOWN\", channel, step });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\")\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getTransparencyGridProps(props2 = {}) {\n      const { size = \"12px\" } = props2;\n      return normalize.element({\n        ...parts.transparencyGrid.attrs,\n        style: {\n          \"--size\": size,\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          backgroundColor: \"#fff\",\n          backgroundImage: \"conic-gradient(#eeeeee 0 25%, transparent 0 50%, #eeeeee 0 75%, transparent 0)\",\n          backgroundSize: \"var(--size) var(--size)\",\n          inset: \"0px\",\n          zIndex: \"auto\",\n          pointerEvents: \"none\"\n        }\n      });\n    },\n    getChannelSliderProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      return normalize.element({\n        ...parts.channelSlider.attrs,\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        role: \"presentation\",\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CHANNEL_SLIDER.POINTER_DOWN\", channel, format: format2, point, id: channel, orientation });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\"\n        }\n      });\n    },\n    getChannelSliderTrackProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      const normalizedValue = format2 ? value.toFormat(format2) : areaValue;\n      return normalize.element({\n        ...parts.channelSliderTrack.attrs,\n        id: getChannelSliderTrackId(scope, channel),\n        role: \"group\",\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        style: {\n          position: \"relative\",\n          forcedColorAdjust: \"none\",\n          backgroundImage: getSliderBackground({\n            orientation,\n            channel,\n            dir: prop(\"dir\"),\n            value: normalizedValue\n          })\n        }\n      });\n    },\n    getChannelSliderLabelProps(props2) {\n      const { channel } = props2;\n      return normalize.element({\n        ...parts.channelSliderLabel.attrs,\n        \"data-channel\": channel,\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          const thumbId = getChannelSliderThumbId(scope, channel);\n          scope.getById(thumbId)?.focus({ preventScroll: true });\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getChannelSliderValueTextProps(props2) {\n      return normalize.element({\n        ...parts.channelSliderValueText.attrs,\n        \"data-channel\": props2.channel\n      });\n    },\n    getChannelSliderThumbProps(props2) {\n      const { orientation = \"horizontal\", channel, format: format2 } = props2;\n      const normalizedValue = format2 ? value.toFormat(format2) : areaValue;\n      const channelRange = normalizedValue.getChannelRange(channel);\n      const channelValue = normalizedValue.getChannelValue(channel);\n      const offset = (channelValue - channelRange.minValue) / (channelRange.maxValue - channelRange.minValue);\n      const isRtl = prop(\"dir\") === \"rtl\";\n      const finalOffset = orientation === \"horizontal\" && isRtl ? 1 - offset : offset;\n      const placementStyles = orientation === \"horizontal\" ? { left: `${finalOffset * 100}%`, top: \"50%\" } : { top: `${offset * 100}%`, left: \"50%\" };\n      return normalize.element({\n        ...parts.channelSliderThumb.attrs,\n        id: getChannelSliderThumbId(scope, channel),\n        role: \"slider\",\n        \"aria-label\": channel,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-channel\": channel,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": orientation,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-orientation\": orientation,\n        \"aria-valuemax\": channelRange.maxValue,\n        \"aria-valuemin\": channelRange.minValue,\n        \"aria-valuenow\": channelValue,\n        \"aria-valuetext\": `${channel} ${channelValue}`,\n        style: {\n          forcedColorAdjust: \"none\",\n          position: \"absolute\",\n          background: getChannelDisplayColor(areaValue, channel).toString(\"css\"),\n          ...placementStyles\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_SLIDER.FOCUS\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * channelRange.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_UP\", channel });\n            },\n            PageDown() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_DOWN\", channel });\n            },\n            Home() {\n              send({ type: \"CHANNEL_SLIDER.HOME\", channel });\n            },\n            End() {\n              send({ type: \"CHANNEL_SLIDER.END\", channel });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\")\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getChannelInputProps(props2) {\n      const { channel } = props2;\n      const isTextField = channel === \"hex\" || channel === \"css\";\n      const channelRange = getChannelRange(value, channel);\n      return normalize.input({\n        ...parts.channelInput.attrs,\n        dir: prop(\"dir\"),\n        type: isTextField ? \"text\" : \"number\",\n        \"data-channel\": channel,\n        \"aria-label\": channel,\n        spellCheck: false,\n        autoComplete: \"off\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        readOnly: prop(\"readOnly\"),\n        defaultValue: getChannelValue(value, channel),\n        min: channelRange?.minValue,\n        max: channelRange?.maxValue,\n        step: channelRange?.step,\n        onBeforeInput(event) {\n          if (isTextField || !interactive) return;\n          const value2 = event.currentTarget.value;\n          if (value2.match(/[^0-9.]/g)) {\n            event.preventDefault();\n          }\n        },\n        onFocus(event) {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_INPUT.FOCUS\", channel });\n          event.currentTarget.select();\n        },\n        onBlur(event) {\n          if (!interactive) return;\n          const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n          send({ type: \"CHANNEL_INPUT.BLUR\", channel, value: value2, isTextField });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (event.key === \"Enter\") {\n            const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n            send({ type: \"CHANNEL_INPUT.CHANGE\", channel, value: value2, isTextField });\n            event.preventDefault();\n          }\n        },\n        style: {\n          appearance: \"none\",\n          WebkitAppearance: \"none\",\n          MozAppearance: \"textfield\"\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        disabled,\n        name: prop(\"name\"),\n        tabIndex: -1,\n        readOnly: prop(\"readOnly\"),\n        required: prop(\"required\"),\n        id: getHiddenInputId(scope),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        defaultValue: valueAsString\n      });\n    },\n    getEyeDropperTriggerProps() {\n      return normalize.button({\n        ...parts.eyeDropperTrigger.attrs,\n        type: \"button\",\n        dir: prop(\"dir\"),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        \"aria-label\": \"Pick a color from the screen\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"EYEDROPPER.CLICK\" });\n        }\n      });\n    },\n    getSwatchGroupProps() {\n      return normalize.element({\n        ...parts.swatchGroup.attrs,\n        role: \"group\"\n      });\n    },\n    getSwatchTriggerState,\n    getSwatchTriggerProps(props2) {\n      const swatchState = getSwatchTriggerState(props2);\n      return normalize.button({\n        ...parts.swatchTrigger.attrs,\n        disabled: swatchState.disabled,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"aria-label\": `select ${swatchState.valueAsString} as the color`,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(swatchState.disabled),\n        onClick() {\n          if (swatchState.disabled) return;\n          send({ type: \"SWATCH_TRIGGER.CLICK\", value: swatchState.value });\n        },\n        style: {\n          \"--color\": swatchState.valueAsString,\n          position: \"relative\"\n        }\n      });\n    },\n    getSwatchIndicatorProps(props2) {\n      const swatchState = getSwatchTriggerState(props2);\n      return normalize.element({\n        ...parts.swatchIndicator.attrs,\n        dir: prop(\"dir\"),\n        hidden: !swatchState.checked\n      });\n    },\n    getSwatchProps(props2) {\n      const { respectAlpha = true } = props2;\n      const swatchState = getSwatchTriggerState(props2);\n      const color = swatchState.value.toString(respectAlpha ? \"css\" : \"hex\");\n      return normalize.element({\n        ...parts.swatch.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        style: {\n          \"--color\": color,\n          position: \"relative\",\n          background: color\n        }\n      });\n    },\n    getFormatTriggerProps() {\n      return normalize.button({\n        ...parts.formatTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"aria-label\": `change color format to ${getNextFormat(format)}`,\n        onClick(event) {\n          if (event.currentTarget.disabled) return;\n          const nextFormat = getNextFormat(format);\n          send({ type: \"FORMAT.SET\", format: nextFormat, src: \"format-trigger\" });\n        }\n      });\n    },\n    getFormatSelectProps() {\n      return normalize.select({\n        ...parts.formatSelect.attrs,\n        \"aria-label\": \"change color format\",\n        dir: prop(\"dir\"),\n        defaultValue: prop(\"format\"),\n        disabled,\n        onChange(event) {\n          const format2 = assertFormat(event.currentTarget.value);\n          send({ type: \"FORMAT.SET\", format: format2, src: \"format-select\" });\n        }\n      });\n    }\n  };\n}\nvar formats = [\"hsba\", \"hsla\", \"rgba\"];\nvar formatRegex = new RegExp(`^(${formats.join(\"|\")})$`);\nfunction getNextFormat(format) {\n  const index = formats.indexOf(format);\n  return formats[index + 1] ?? formats[0];\n}\nfunction assertFormat(format) {\n  if (formatRegex.test(format)) return format;\n  throw new Error(`Unsupported color format: ${format}`);\n}\nvar parse = (colorString) => {\n  return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(colorString);\n};\n\n// src/utils/is-valid-hex.ts\nvar HEX_REGEX = /^[0-9a-fA-F]{3,8}$/;\nfunction isValidHex(value) {\n  return HEX_REGEX.test(value);\n}\nfunction prefixHex(value) {\n  if (value.startsWith(\"#\")) return value;\n  if (isValidHex(value)) return `#${value}`;\n  return value;\n}\n\n// src/color-picker.machine.ts\nvar { and } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      dir: \"ltr\",\n      defaultValue: parse(\"#000000\"),\n      defaultFormat: \"rgba\",\n      openAutoFocus: true,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\") || prop(\"inline\");\n    return open ? \"open\" : \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual(a, b) {\n          return a.toString(\"css\") === b?.toString(\"css\");\n        },\n        hash(a) {\n          return a.toString(\"css\");\n        },\n        onChange(value) {\n          const ctx = getContext();\n          const valueAsString = value.toString(ctx.get(\"format\"));\n          prop(\"onValueChange\")?.({ value, valueAsString });\n        }\n      })),\n      format: bindable(() => ({\n        defaultValue: prop(\"defaultFormat\"),\n        value: prop(\"format\"),\n        onChange(format) {\n          prop(\"onFormatChange\")?.({ format });\n        }\n      })),\n      activeId: bindable(() => ({ defaultValue: null })),\n      activeChannel: bindable(() => ({ defaultValue: null })),\n      activeOrientation: bindable(() => ({ defaultValue: null })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false })),\n      restoreFocus: bindable(() => ({ defaultValue: true })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    rtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    disabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    interactive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n    valueAsString: ({ context }) => context.get(\"value\").toString(context.get(\"format\")),\n    areaValue: ({ context }) => {\n      const format = context.get(\"format\").startsWith(\"hsl\") ? \"hsla\" : \"hsba\";\n      return context.get(\"value\").toFormat(format);\n    }\n  },\n  effects: [\"trackFormControl\"],\n  watch({ prop, context, action, track }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n    track([() => context.get(\"format\")], () => {\n      action([\"syncFormatSelectElement\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    \"FORMAT.SET\": {\n      actions: [\"setFormat\"]\n    },\n    \"CHANNEL_INPUT.CHANGE\": {\n      actions: [\"setChannelColorFromInput\"]\n    },\n    \"EYEDROPPER.CLICK\": {\n      actions: [\"openEyeDropper\"]\n    },\n    \"SWATCH_TRIGGER.CLICK\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"CHANNEL_INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setActiveChannel\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"closed\", \"focused\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        \"CHANNEL_INPUT.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"CHANNEL_INPUT.BLUR\": {\n          target: \"idle\",\n          actions: [\"setChannelColorFromInput\"]\n        },\n        \"TRIGGER.BLUR\": {\n          target: \"idle\"\n        }\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackPositioning\", \"trackDismissableElement\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"setReturnFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"AREA.POINTER_DOWN\": {\n          target: \"open:dragging\",\n          actions: [\"setActiveChannel\", \"setAreaColorFromPoint\", \"focusAreaThumb\"]\n        },\n        \"AREA.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_DOWN\": {\n          target: \"open:dragging\",\n          actions: [\"setActiveChannel\", \"setChannelColorFromPoint\", \"focusChannelThumb\"]\n        },\n        \"CHANNEL_SLIDER.FOCUS\": {\n          actions: [\"setActiveChannel\"]\n        },\n        \"AREA.ARROW_LEFT\": {\n          actions: [\"decrementAreaXChannel\"]\n        },\n        \"AREA.ARROW_RIGHT\": {\n          actions: [\"incrementAreaXChannel\"]\n        },\n        \"AREA.ARROW_UP\": {\n          actions: [\"incrementAreaYChannel\"]\n        },\n        \"AREA.ARROW_DOWN\": {\n          actions: [\"decrementAreaYChannel\"]\n        },\n        \"AREA.PAGE_UP\": {\n          actions: [\"incrementAreaXChannel\"]\n        },\n        \"AREA.PAGE_DOWN\": {\n          actions: [\"decrementAreaXChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_LEFT\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_RIGHT\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_UP\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.ARROW_DOWN\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.PAGE_UP\": {\n          actions: [\"incrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.PAGE_DOWN\": {\n          actions: [\"decrementChannel\"]\n        },\n        \"CHANNEL_SLIDER.HOME\": {\n          actions: [\"setChannelToMin\"]\n        },\n        \"CHANNEL_SLIDER.END\": {\n          actions: [\"setChannelToMax\"]\n        },\n        \"CHANNEL_INPUT.BLUR\": {\n          actions: [\"setChannelColorFromInput\"]\n        },\n        INTERACT_OUTSIDE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"SWATCH_TRIGGER.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"setValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"setValue\", \"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            actions: [\"setValue\"]\n          }\n        ]\n      }\n    },\n    \"open:dragging\": {\n      tags: [\"open\"],\n      exit: [\"clearActiveChannel\"],\n      effects: [\"trackPointerMove\", \"disableTextSelection\", \"trackPositioning\", \"trackDismissableElement\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"setReturnFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        \"AREA.POINTER_MOVE\": {\n          actions: [\"setAreaColorFromPoint\", \"focusAreaThumb\"]\n        },\n        \"AREA.POINTER_UP\": {\n          target: \"open\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_MOVE\": {\n          actions: [\"setChannelColorFromPoint\", \"focusChannelThumb\"]\n        },\n        \"CHANNEL_SLIDER.POINTER_UP\": {\n          target: \"open\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        INTERACT_OUTSIDE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"shouldRestoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setReturnFocus\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnSelect: ({ prop }) => !!prop(\"closeOnSelect\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null || !!prop(\"inline\"),\n      shouldRestoreFocus: ({ context }) => !!context.get(\"restoreFocus\")\n    },\n    effects: {\n      trackPositioning({ context, prop, scope }) {\n        if (prop(\"inline\")) return;\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\")?.placement);\n        }\n        const anchorEl = getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ context, scope, prop, send }) {\n        if (prop(\"inline\")) return;\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl2, {\n          exclude: getTriggerEl(scope),\n          defer: true,\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            context.set(\"restoreFocus\", !(event.detail.focusable || event.detail.contextmenu));\n          },\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onDismiss() {\n            send({ type: \"INTERACT_OUTSIDE\" });\n          }\n        });\n      },\n      trackFormControl({ context, scope, send }) {\n        const inputEl = getHiddenInputEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            send({ type: \"VALUE.SET\", value: context.initial(\"value\"), src: \"form.reset\" });\n          }\n        });\n      },\n      trackPointerMove({ context, scope, event, send }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(scope.getDoc(), {\n          onPointerMove({ point }) {\n            const type = context.get(\"activeId\") === \"area\" ? \"AREA.POINTER_MOVE\" : \"CHANNEL_SLIDER.POINTER_MOVE\";\n            send({ type, point, format: event.format });\n          },\n          onPointerUp() {\n            const type = context.get(\"activeId\") === \"area\" ? \"AREA.POINTER_UP\" : \"CHANNEL_SLIDER.POINTER_UP\";\n            send({ type });\n          }\n        });\n      },\n      disableTextSelection({ scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.disableTextSelection)({\n          doc: scope.getDoc(),\n          target: getContentEl(scope)\n        });\n      }\n    },\n    actions: {\n      openEyeDropper({ scope, context }) {\n        const win = scope.getWin();\n        const isSupported = \"EyeDropper\" in win;\n        if (!isSupported) return;\n        const picker = new win.EyeDropper();\n        picker.open().then(({ sRGBHex }) => {\n          const format = context.get(\"value\").getFormat();\n          const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(sRGBHex).toFormat(format);\n          context.set(\"value\", color);\n        }).catch(() => void 0);\n      },\n      setActiveChannel({ context, event }) {\n        context.set(\"activeId\", event.id);\n        if (event.channel) context.set(\"activeChannel\", event.channel);\n        if (event.orientation) context.set(\"activeOrientation\", event.orientation);\n      },\n      clearActiveChannel({ context }) {\n        context.set(\"activeChannel\", null);\n        context.set(\"activeId\", null);\n        context.set(\"activeOrientation\", null);\n      },\n      setAreaColorFromPoint({ context, event, computed, scope, prop }) {\n        const v = event.format ? context.get(\"value\").toFormat(event.format) : computed(\"areaValue\");\n        const { xChannel, yChannel } = event.channel || context.get(\"activeChannel\");\n        const percent = getAreaValueFromPoint(scope, event.point, prop(\"dir\"));\n        if (!percent) return;\n        const xValue = v.getChannelPercentValue(xChannel, percent.x);\n        const yValue = v.getChannelPercentValue(yChannel, 1 - percent.y);\n        const color = v.withChannelValue(xChannel, xValue).withChannelValue(yChannel, yValue);\n        context.set(\"value\", color);\n      },\n      setChannelColorFromPoint({ context, event, computed, scope, prop }) {\n        const channel = event.channel || context.get(\"activeId\");\n        const normalizedValue = event.format ? context.get(\"value\").toFormat(event.format) : computed(\"areaValue\");\n        const percent = getChannelSliderValueFromPoint(scope, event.point, channel, prop(\"dir\"));\n        if (!percent) return;\n        const orientation = context.get(\"activeOrientation\") || \"horizontal\";\n        const channelPercent = orientation === \"horizontal\" ? percent.x : percent.y;\n        const value = normalizedValue.getChannelPercentValue(channel, channelPercent);\n        const color = normalizedValue.withChannelValue(channel, value);\n        context.set(\"value\", color);\n      },\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      setFormat({ context, event }) {\n        context.set(\"format\", event.format);\n      },\n      dispatchChangeEvent({ scope, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(getHiddenInputEl(scope), { value: computed(\"valueAsString\") });\n      },\n      syncInputElements({ context, scope }) {\n        syncChannelInputs(scope, context.get(\"value\"));\n      },\n      invokeOnChangeEnd({ context, prop, computed }) {\n        prop(\"onValueChangeEnd\")?.({\n          value: context.get(\"value\"),\n          valueAsString: computed(\"valueAsString\")\n        });\n      },\n      setChannelColorFromInput({ context, event, scope, prop }) {\n        const { channel, isTextField, value } = event;\n        const currentAlpha = context.get(\"value\").getChannelValue(\"alpha\");\n        let color;\n        if (channel === \"alpha\") {\n          let valueAsNumber = parseFloat(value);\n          valueAsNumber = Number.isNaN(valueAsNumber) ? currentAlpha : valueAsNumber;\n          color = context.get(\"value\").withChannelValue(\"alpha\", valueAsNumber);\n        } else if (isTextField) {\n          color = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.tryCatch)(\n            () => {\n              const parseValue = channel === \"hex\" ? prefixHex(value) : value;\n              return parse(parseValue).withChannelValue(\"alpha\", currentAlpha);\n            },\n            () => context.get(\"value\")\n          );\n        } else {\n          const current = context.get(\"value\").toFormat(context.get(\"format\"));\n          const valueAsNumber = Number.isNaN(value) ? current.getChannelValue(channel) : value;\n          color = current.withChannelValue(channel, valueAsNumber);\n        }\n        syncChannelInputs(scope, context.get(\"value\"), color);\n        context.set(\"value\", color);\n        prop(\"onValueChangeEnd\")?.({\n          value: color,\n          valueAsString: color.toString(context.get(\"format\"))\n        });\n      },\n      incrementChannel({ context, event }) {\n        const color = context.get(\"value\").incrementChannel(event.channel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementChannel({ context, event }) {\n        const color = context.get(\"value\").decrementChannel(event.channel, event.step);\n        context.set(\"value\", color);\n      },\n      incrementAreaXChannel({ context, event, computed }) {\n        const { xChannel } = event.channel;\n        const color = computed(\"areaValue\").incrementChannel(xChannel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementAreaXChannel({ context, event, computed }) {\n        const { xChannel } = event.channel;\n        const color = computed(\"areaValue\").decrementChannel(xChannel, event.step);\n        context.set(\"value\", color);\n      },\n      incrementAreaYChannel({ context, event, computed }) {\n        const { yChannel } = event.channel;\n        const color = computed(\"areaValue\").incrementChannel(yChannel, event.step);\n        context.set(\"value\", color);\n      },\n      decrementAreaYChannel({ context, event, computed }) {\n        const { yChannel } = event.channel;\n        const color = computed(\"areaValue\").decrementChannel(yChannel, event.step);\n        context.set(\"value\", color);\n      },\n      setChannelToMax({ context, event }) {\n        const value = context.get(\"value\");\n        const range = value.getChannelRange(event.channel);\n        const color = value.withChannelValue(event.channel, range.maxValue);\n        context.set(\"value\", color);\n      },\n      setChannelToMin({ context, event }) {\n        const value = context.get(\"value\");\n        const range = value.getChannelRange(event.channel);\n        const color = value.withChannelValue(event.channel, range.minValue);\n        context.set(\"value\", color);\n      },\n      focusAreaThumb({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getAreaThumbEl(scope)?.focus({ preventScroll: true });\n        });\n      },\n      focusChannelThumb({ event, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getChannelSliderThumbEl(scope, event.channel)?.focus({ preventScroll: true });\n        });\n      },\n      setInitialFocus({ prop, scope }) {\n        if (!prop(\"openAutoFocus\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\")\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      setReturnFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        });\n      },\n      syncFormatSelectElement({ context, scope }) {\n        syncFormatSelect(scope, context.get(\"format\"));\n      },\n      invokeOnOpen({ prop }) {\n        if (prop(\"inline\")) return;\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        if (prop(\"inline\")) return;\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      toggleVisibility({ prop, event, send }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nfunction syncChannelInputs(scope, currentValue, nextValue) {\n  const channelInputEls = getChannelInputEls(scope);\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n    channelInputEls.forEach((inputEl) => {\n      const channel = inputEl.dataset.channel;\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, getChannelValue(nextValue || currentValue, channel));\n    });\n  });\n}\nfunction syncFormatSelect(scope, format) {\n  const selectEl = getFormatSelectEl(scope);\n  if (!selectEl) return;\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(selectEl, format));\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"closeOnSelect\",\n  \"dir\",\n  \"disabled\",\n  \"format\",\n  \"defaultFormat\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"inline\",\n  \"name\",\n  \"positioning\",\n  \"onFocusOutside\",\n  \"onFormatChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"defaultOpen\",\n  \"open\",\n  \"positioning\",\n  \"required\",\n  \"readOnly\",\n  \"value\",\n  \"defaultValue\",\n  \"invalid\",\n  \"openAutoFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\nvar areaProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"xChannel\", \"yChannel\"]);\nvar splitAreaProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(areaProps);\nvar channelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"channel\", \"orientation\"]);\nvar splitChannelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(channelProps);\nvar swatchTriggerProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"value\", \"disabled\"]);\nvar splitSwatchTriggerProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(swatchTriggerProps);\nvar swatchProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"value\", \"respectAlpha\"]);\nvar splitSwatchProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(swatchProps);\nvar transparencyGridProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"size\"]);\nvar splitTransparencyGridProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(transparencyGridProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/color-utils/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   getColorAreaGradient: () => (/* binding */ getColorAreaGradient),\n/* harmony export */   normalizeColor: () => (/* binding */ normalizeColor),\n/* harmony export */   parseColor: () => (/* binding */ parseColor)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\n\n// src/color-format-gradient.ts\nvar generateRGB_R = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,0),rgb(${zValue},255,0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,255),rgb(${zValue},255,255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_G = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},0),rgb(255,${zValue},0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},255),rgb(255,${zValue},255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_B = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,0,${zValue}),rgb(255,0,${zValue}))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,255,${zValue}),rgb(255,255,${zValue}))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateHSL_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]}, hsla(0,0%,0%,1) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,1) 100%)`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,50%),hsla(0,0%,50%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]}, hsla(0,0%,0%,${alphaValue}) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,${alphaValue}) 100%)`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"hsl(0, 0%, 50%)\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_L = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      backgroundImage: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,${zValue}%),hsla(0,0%,${zValue}%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,100%,${zValue}%),hsl(60,100%,${zValue}%),hsl(120,100%,${zValue}%),hsl(180,100%,${zValue}%),hsl(240,100%,${zValue}%),hsl(300,100%,${zValue}%),hsl(360,100%,${zValue}%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,0%,0%),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,100%),hsla(0,0%,100%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,0%,${alphaValue}),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,0%),hsl(0,0%,100%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_B = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,100%,${alphaValue}),hsla(0,0%,100%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"#000\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\n\n// src/area-gradient.ts\nfunction getColorAreaGradient(color, options) {\n  const { xChannel, yChannel, dir: dirProp = \"ltr\" } = options;\n  const { zChannel } = color.getColorAxes({ xChannel, yChannel });\n  const zValue = color.getChannelValue(zChannel);\n  const { minValue: zMin, maxValue: zMax } = color.getChannelRange(zChannel);\n  const orientation = [\"top\", dirProp === \"rtl\" ? \"left\" : \"right\"];\n  let dir = false;\n  let background = { areaStyles: {}, areaGradientStyles: {} };\n  let alphaValue = (zValue - zMin) / (zMax - zMin);\n  let isHSL = color.getFormat() === \"hsla\";\n  switch (zChannel) {\n    case \"red\": {\n      dir = xChannel === \"green\";\n      background = generateRGB_R(orientation, dir, zValue);\n      break;\n    }\n    case \"green\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_G(orientation, dir, zValue);\n      break;\n    }\n    case \"blue\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_B(orientation, dir, zValue);\n      break;\n    }\n    case \"hue\": {\n      dir = xChannel !== \"saturation\";\n      if (isHSL) {\n        background = generateHSL_H(orientation, dir, zValue);\n      } else {\n        background = generateHSB_H(orientation, dir, zValue);\n      }\n      break;\n    }\n    case \"saturation\": {\n      dir = xChannel === \"hue\";\n      if (isHSL) {\n        background = generateHSL_S(orientation, dir, alphaValue);\n      } else {\n        background = generateHSB_S(orientation, dir, alphaValue);\n      }\n      break;\n    }\n    case \"brightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSB_B(orientation, dir, alphaValue);\n      break;\n    }\n    case \"lightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSL_L(orientation, dir, zValue);\n      break;\n    }\n  }\n  return background;\n}\nvar isEqualObject = (a, b) => {\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (let key in a) if (a[key] !== b[key]) return false;\n  return true;\n};\nvar Color = class {\n  toHexInt() {\n    return this.toFormat(\"rgba\").toHexInt();\n  }\n  getChannelValue(channel) {\n    if (channel in this) return this[channel];\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getChannelValuePercent(channel, valueToCheck) {\n    const value = valueToCheck ?? this.getChannelValue(channel);\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getValuePercent)(value, minValue, maxValue);\n  }\n  getChannelPercentValue(channel, percentToCheck) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const percentValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getPercentValue)(percentToCheck, minValue, maxValue, step);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(percentValue, minValue, maxValue, step);\n  }\n  withChannelValue(channel, value) {\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    if (channel in this) {\n      let clone = this.clone();\n      clone[channel] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(value, minValue, maxValue);\n      return clone;\n    }\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getColorAxes(xyChannels) {\n    let { xChannel, yChannel } = xyChannels;\n    let xCh = xChannel || this.getChannels().find((c) => c !== yChannel);\n    let yCh = yChannel || this.getChannels().find((c) => c !== xCh);\n    let zCh = this.getChannels().find((c) => c !== xCh && c !== yCh);\n    return { xChannel: xCh, yChannel: yCh, zChannel: zCh };\n  }\n  incrementChannel(channel, stepSize) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(this.getChannelValue(channel) + stepSize, minValue, maxValue),\n      minValue,\n      maxValue,\n      step\n    );\n    return this.withChannelValue(channel, value);\n  }\n  decrementChannel(channel, stepSize) {\n    return this.incrementChannel(channel, -stepSize);\n  }\n  isEqual(color) {\n    const isSame = isEqualObject(this.toJSON(), color.toJSON());\n    return isSame && this.getChannelValue(\"alpha\") === color.getChannelValue(\"alpha\");\n  }\n};\nvar HEX_COLOR_REGEX = /^#[\\da-f]+$/i;\nvar RGB_COLOR_REGEX = /^rgba?\\((.*)\\)$/;\nvar HEX_STARTING_REGEX = /[^#]/gi;\nvar _RGBColor = class _RGBColor extends Color {\n  constructor(red, green, blue, alpha) {\n    super();\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let colors = [];\n    if (HEX_COLOR_REGEX.test(value) && [4, 5, 7, 9].includes(value.length)) {\n      const values = (value.length < 6 ? value.replace(HEX_STARTING_REGEX, \"$&$&\") : value).slice(1).split(\"\");\n      while (values.length > 0) {\n        colors.push(parseInt(values.splice(0, 2).join(\"\"), 16));\n      }\n      colors[3] = colors[3] !== void 0 ? colors[3] / 255 : void 0;\n    }\n    const match = value.match(RGB_COLOR_REGEX);\n    if (match?.[1]) {\n      colors = match[1].split(\",\").map((value2) => Number(value2.trim())).map((num, i) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(num, 0, i < 3 ? 255 : 1));\n    }\n    return colors.length < 3 ? void 0 : new _RGBColor(colors[0], colors[1], colors[2], colors[3] ?? 1);\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"hexa\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\") + Math.round(this.alpha * 255).toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"rgb\":\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n      case \"css\":\n      case \"rgba\":\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"rgba\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"hsla\":\n        return this.toHSL();\n      default:\n        throw new Error(\"Unsupported color conversion: rgb -> \" + format);\n    }\n  }\n  toHexInt() {\n    return this.red << 16 | this.green << 8 | this.blue;\n  }\n  /**\n   * Converts an RGB color value to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const brightness = Math.max(red, green, blue);\n    const chroma = brightness - min;\n    const saturation = brightness === 0 ? 0 : chroma / brightness;\n    let hue = 0;\n    if (chroma !== 0) {\n      switch (brightness) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts an RGB color value to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const max = Math.max(red, green, blue);\n    const lightness = (max + min) / 2;\n    const chroma = max - min;\n    let hue = -1;\n    let saturation = -1;\n    if (chroma === 0) {\n      hue = saturation = 0;\n    } else {\n      saturation = chroma / (lightness < 0.5 ? max + min : 2 - max - min);\n      switch (max) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _RGBColor(this.red, this.green, this.blue, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { style: \"decimal\" };\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { minValue: 0, maxValue: 255, step: 1, pageSize: 17 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { r: this.red, g: this.green, b: this.blue, a: this.alpha };\n  }\n  getFormat() {\n    return \"rgba\";\n  }\n  getChannels() {\n    return _RGBColor.colorChannels;\n  }\n};\n__publicField(_RGBColor, \"colorChannels\", [\"red\", \"green\", \"blue\"]);\nvar RGBColor = _RGBColor;\n\n// src/hsl-color.ts\nvar HSL_REGEX = /hsl\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsla\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSLColor = class _HSLColor extends Color {\n  constructor(hue, saturation, lightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.lightness = lightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSL_REGEX)) {\n      const [h, s, l, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSLColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(l, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsl\":\n        return `hsl(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%)`;\n      case \"css\":\n      case \"hsla\":\n        return `hsla(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%, ${this.alpha})`;\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsla\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsl -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSL color to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let brightness = lightness + saturation * Math.min(lightness, 1 - lightness);\n    saturation = brightness === 0 ? 0 : 2 * (1 - lightness / brightness);\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSL color to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let a = saturation * Math.min(lightness, 1 - lightness);\n    let fn = (n, k = (n + hue / 30) % 12) => lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return new RGBColor(\n      Math.round(fn(0) * 255),\n      Math.round(fn(8) * 255),\n      Math.round(fn(4) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSLColor(this.hue, this.saturation, this.lightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"lightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"lightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"lightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, l: this.lightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsla\";\n  }\n  getChannels() {\n    return _HSLColor.colorChannels;\n  }\n};\n__publicField(_HSLColor, \"colorChannels\", [\"hue\", \"saturation\", \"lightness\"]);\nvar HSLColor = _HSLColor;\n\n// src/hsb-color.ts\nvar HSB_REGEX = /hsb\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsba\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSBColor = class _HSBColor extends Color {\n  constructor(hue, saturation, brightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.brightness = brightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSB_REGEX)) {\n      const [h, s, b, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSBColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(b, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"css\":\n        return this.toHSL().toString(\"css\");\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsb\":\n        return `hsb(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%)`;\n      case \"hsba\":\n        return `hsba(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsba\":\n        return this;\n      case \"hsla\":\n        return this.toHSL();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsb -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSB color to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let lightness = brightness * (1 - saturation / 2);\n    saturation = lightness === 0 || lightness === 1 ? 0 : (brightness - lightness) / Math.min(lightness, 1 - lightness);\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSV color value to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let fn = (n, k = (n + hue / 60) % 6) => brightness - saturation * brightness * Math.max(Math.min(k, 4 - k, 1), 0);\n    return new RGBColor(\n      Math.round(fn(5) * 255),\n      Math.round(fn(3) * 255),\n      Math.round(fn(1) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSBColor(this.hue, this.saturation, this.brightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"brightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"brightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"brightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, b: this.brightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsba\";\n  }\n  getChannels() {\n    return _HSBColor.colorChannels;\n  }\n};\n__publicField(_HSBColor, \"colorChannels\", [\"hue\", \"saturation\", \"brightness\"]);\nvar HSBColor = _HSBColor;\n\n// src/native-color.ts\nvar nativeColors = \"aliceblue:f0f8ff,antiquewhite:faebd7,aqua:00ffff,aquamarine:7fffd4,azure:f0ffff,beige:f5f5dc,bisque:ffe4c4,black:000000,blanchedalmond:ffebcd,blue:0000ff,blueviolet:8a2be2,brown:a52a2a,burlywood:deb887,cadetblue:5f9ea0,chartreuse:7fff00,chocolate:d2691e,coral:ff7f50,cornflowerblue:6495ed,cornsilk:fff8dc,crimson:dc143c,cyan:00ffff,darkblue:00008b,darkcyan:008b8b,darkgoldenrod:b8860b,darkgray:a9a9a9,darkgreen:006400,darkkhaki:bdb76b,darkmagenta:8b008b,darkolivegreen:556b2f,darkorange:ff8c00,darkorchid:9932cc,darkred:8b0000,darksalmon:e9967a,darkseagreen:8fbc8f,darkslateblue:483d8b,darkslategray:2f4f4f,darkturquoise:00ced1,darkviolet:9400d3,deeppink:ff1493,deepskyblue:00bfff,dimgray:696969,dodgerblue:1e90ff,firebrick:b22222,floralwhite:fffaf0,forestgreen:228b22,fuchsia:ff00ff,gainsboro:dcdcdc,ghostwhite:f8f8ff,gold:ffd700,goldenrod:daa520,gray:808080,green:008000,greenyellow:adff2f,honeydew:f0fff0,hotpink:ff69b4,indianred:cd5c5c,indigo:4b0082,ivory:fffff0,khaki:f0e68c,lavender:e6e6fa,lavenderblush:fff0f5,lawngreen:7cfc00,lemonchiffon:fffacd,lightblue:add8e6,lightcoral:f08080,lightcyan:e0ffff,lightgoldenrodyellow:fafad2,lightgrey:d3d3d3,lightgreen:90ee90,lightpink:ffb6c1,lightsalmon:ffa07a,lightseagreen:20b2aa,lightskyblue:87cefa,lightslategray:778899,lightsteelblue:b0c4de,lightyellow:ffffe0,lime:00ff00,limegreen:32cd32,linen:faf0e6,magenta:ff00ff,maroon:800000,mediumaquamarine:66cdaa,mediumblue:0000cd,mediumorchid:ba55d3,mediumpurple:9370d8,mediumseagreen:3cb371,mediumslateblue:7b68ee,mediumspringgreen:00fa9a,mediumturquoise:48d1cc,mediumvioletred:c71585,midnightblue:191970,mintcream:f5fffa,mistyrose:ffe4e1,moccasin:ffe4b5,navajowhite:ffdead,navy:000080,oldlace:fdf5e6,olive:808000,olivedrab:6b8e23,orange:ffa500,orangered:ff4500,orchid:da70d6,palegoldenrod:eee8aa,palegreen:98fb98,paleturquoise:afeeee,palevioletred:d87093,papayawhip:ffefd5,peachpuff:ffdab9,peru:cd853f,pink:ffc0cb,plum:dda0dd,powderblue:b0e0e6,purple:800080,rebeccapurple:663399,red:ff0000,rosybrown:bc8f8f,royalblue:4169e1,saddlebrown:8b4513,salmon:fa8072,sandybrown:f4a460,seagreen:2e8b57,seashell:fff5ee,sienna:a0522d,silver:c0c0c0,skyblue:87ceeb,slateblue:6a5acd,slategray:708090,snow:fffafa,springgreen:00ff7f,steelblue:4682b4,tan:d2b48c,teal:008080,thistle:d8bfd8,tomato:ff6347,turquoise:40e0d0,violet:ee82ee,wheat:f5deb3,white:ffffff,whitesmoke:f5f5f5,yellow:ffff00,yellowgreen:9acd32\";\nvar makeMap = (str) => {\n  const map = /* @__PURE__ */ new Map();\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    const [key, val] = list[i].split(\":\");\n    map.set(key, `#${val}`);\n    if (key.includes(\"gray\")) map.set(key.replace(\"gray\", \"grey\"), `#${val}`);\n  }\n  return map;\n};\nvar nativeColorMap = makeMap(nativeColors);\n\n// src/parse-color.ts\nvar parseColor = (value) => {\n  if (nativeColorMap.has(value)) {\n    return parseColor(nativeColorMap.get(value));\n  }\n  const result = RGBColor.parse(value) || HSBColor.parse(value) || HSLColor.parse(value);\n  if (!result) {\n    const error = new Error(\"Invalid color value: \" + value);\n    Error.captureStackTrace?.(error, parseColor);\n    throw error;\n  }\n  return result;\n};\nvar normalizeColor = (v) => {\n  return typeof v === \"string\" ? parseColor(v) : v;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/combobox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/combobox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/combobox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"combobox\").parts(\n  \"root\",\n  \"clearTrigger\",\n  \"content\",\n  \"control\",\n  \"input\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"label\",\n  \"list\",\n  \"positioner\",\n  \"trigger\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection({ items: [] });\n};\nvar getRootId = (ctx) => ctx.ids?.root ?? `combobox:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `combobox:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `combobox:${ctx.id}:control`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `combobox:${ctx.id}:input`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `combobox:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `combobox:${ctx.id}:popper`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `combobox:${ctx.id}:toggle-btn`;\nvar getClearTriggerId = (ctx) => ctx.ids?.clearTrigger ?? `combobox:${ctx.id}:clear-btn`;\nvar getItemGroupId = (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `combobox:${ctx.id}:optgroup:${id}`;\nvar getItemGroupLabelId = (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `combobox:${ctx.id}:optgroup-label:${id}`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `combobox:${ctx.id}:option:${id}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getClearTriggerEl = (ctx) => ctx.getById(getClearTriggerId(ctx));\nvar getItemEl = (ctx, value) => {\n  if (value == null) return null;\n  const selector = `[role=option][data-value=\"${CSS.escape(value)}\"]`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.query)(getContentEl(ctx), selector);\n};\nvar focusInputEl = (ctx) => {\n  const inputEl = getInputEl(ctx);\n  if (ctx.isActiveElement(inputEl)) return;\n  inputEl?.focus({ preventScroll: true });\n};\nvar focusTriggerEl = (ctx) => {\n  const triggerEl = getTriggerEl(ctx);\n  if (ctx.isActiveElement(triggerEl)) return;\n  triggerEl?.focus({ preventScroll: true });\n};\n\n// src/combobox.connect.ts\nfunction connect(service, normalize) {\n  const { context, prop, state, send, scope, computed, event } = service;\n  const translations = prop(\"translations\");\n  const collection2 = prop(\"collection\");\n  const disabled = prop(\"disabled\");\n  const interactive = computed(\"isInteractive\");\n  const invalid = prop(\"invalid\");\n  const readOnly = prop(\"readOnly\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const composite = prop(\"composite\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  function getItemState(props2) {\n    const disabled2 = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.ensure)(value, () => `[zag-js] No value found for item ${JSON.stringify(props2.item)}`);\n    return {\n      value,\n      disabled: Boolean(disabled2 || disabled2),\n      highlighted: highlightedValue === value,\n      selected: context.get(\"value\").includes(value)\n    };\n  }\n  return {\n    focused,\n    open,\n    inputValue: context.get(\"inputValue\"),\n    highlightedValue,\n    highlightedItem: context.get(\"highlightedItem\"),\n    value: context.get(\"value\"),\n    valueAsString: computed(\"valueAsString\"),\n    hasSelectedItems: computed(\"hasSelectedItems\"),\n    selectedItems: context.get(\"selectedItems\"),\n    collection: prop(\"collection\"),\n    multiple: !!prop(\"multiple\"),\n    disabled: !!disabled,\n    syncSelectedItems() {\n      send({ type: \"SELECTED_ITEMS.SYNC\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    setHighlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    clearHighlightValue() {\n      send({ type: \"HIGHLIGHTED_VALUE.CLEAR\" });\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    setInputValue(value, reason = \"script\") {\n      send({ type: \"INPUT_VALUE.SET\", value, src: reason });\n    },\n    clearValue(value) {\n      if (value != null) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    setOpen(nextOpen, reason = \"script\") {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\", src: reason });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        htmlFor: getInputId(scope),\n        id: getLabelId(scope),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        onClick(event2) {\n          if (composite) return;\n          event2.preventDefault();\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-autofocus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(prop(\"autoFocus\")),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        disabled,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"none\",\n        spellCheck: \"false\",\n        readOnly,\n        placeholder: prop(\"placeholder\"),\n        id: getInputId(scope),\n        type: \"text\",\n        role: \"combobox\",\n        defaultValue: context.get(\"inputValue\"),\n        \"aria-autocomplete\": computed(\"autoComplete\") ? \"both\" : \"list\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-activedescendant\": highlightedValue ? getItemId(scope, highlightedValue) : void 0,\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!prop(\"openOnClick\")) return;\n          if (!interactive) return;\n          send({ type: \"INPUT.CLICK\", src: \"input-click\" });\n        },\n        onFocus() {\n          if (disabled) return;\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          if (disabled) return;\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onChange(event2) {\n          send({ type: \"INPUT.CHANGE\", value: event2.currentTarget.value, src: \"input-change\" });\n        },\n        onKeyDown(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          if (event2.ctrlKey || event2.shiftKey || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isComposingEvent)(event2)) return;\n          const openOnKeyPress = prop(\"openOnKeyPress\");\n          const isModifierKey = event2.ctrlKey || event2.metaKey || event2.shiftKey;\n          const keypress = true;\n          const keymap = {\n            ArrowDown(event3) {\n              if (!openOnKeyPress && !open) return;\n              send({ type: event3.altKey ? \"OPEN\" : \"INPUT.ARROW_DOWN\", keypress, src: \"arrow-key\" });\n              event3.preventDefault();\n            },\n            ArrowUp() {\n              if (!openOnKeyPress && !open) return;\n              send({ type: event2.altKey ? \"CLOSE\" : \"INPUT.ARROW_UP\", keypress, src: \"arrow-key\" });\n              event2.preventDefault();\n            },\n            Home(event3) {\n              if (isModifierKey) return;\n              send({ type: \"INPUT.HOME\", keypress });\n              if (open) {\n                event3.preventDefault();\n              }\n            },\n            End(event3) {\n              if (isModifierKey) return;\n              send({ type: \"INPUT.END\", keypress });\n              if (open) {\n                event3.preventDefault();\n              }\n            },\n            Enter(event3) {\n              send({ type: \"INPUT.ENTER\", keypress, src: \"item-select\" });\n              const submittable = computed(\"isCustomValue\") && prop(\"allowCustomValue\");\n              if (open && !submittable) {\n                event3.preventDefault();\n              }\n              if (highlightedValue == null) return;\n              const itemEl = getItemEl(scope, highlightedValue);\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isAnchorElement)(itemEl)) {\n                prop(\"navigate\")?.({ value: highlightedValue, node: itemEl, href: itemEl.href });\n              }\n            },\n            Escape() {\n              send({ type: \"INPUT.ESCAPE\", keypress, src: \"escape-key\" });\n              event2.preventDefault();\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event2, { dir: prop(\"dir\") });\n          const exec = keymap[key];\n          exec?.(event2);\n        }\n      });\n    },\n    getTriggerProps(props2 = {}) {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": composite ? \"listbox\" : \"dialog\",\n        type: \"button\",\n        tabIndex: props2.focusable ? void 0 : -1,\n        \"aria-label\": translations.triggerLabel,\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": open ? getContentId(scope) : void 0,\n        disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focusable\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(props2.focusable),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        onFocus() {\n          if (!props2.focusable) return;\n          send({ type: \"INPUT.FOCUS\", src: \"trigger\" });\n        },\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event2)) return;\n          send({ type: \"TRIGGER.CLICK\", src: \"trigger-click\" });\n        },\n        onPointerDown(event2) {\n          if (!interactive) return;\n          if (event2.pointerType === \"touch\") return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event2)) return;\n          event2.preventDefault();\n          queueMicrotask(() => {\n            getInputEl(scope)?.focus({ preventScroll: true });\n          });\n        },\n        onKeyDown(event2) {\n          if (event2.defaultPrevented) return;\n          if (composite) return;\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", src: \"arrow-key\" });\n            },\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", src: \"arrow-key\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event2, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event2);\n            event2.preventDefault();\n          }\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        role: !composite ? \"dialog\" : \"listbox\",\n        tabIndex: -1,\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": context.get(\"currentPlacement\"),\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-multiselectable\": prop(\"multiple\") && composite ? true : void 0,\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        onPointerDown(event2) {\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event2)) return;\n          event2.preventDefault();\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        role: !composite ? \"listbox\" : void 0,\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-multiselectable\": prop(\"multiple\") && !composite ? true : void 0\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getClearTriggerId(scope),\n        type: \"button\",\n        tabIndex: -1,\n        disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"aria-label\": translations.clearTriggerLabel,\n        \"aria-controls\": getInputId(scope),\n        hidden: !context.get(\"value\").length,\n        onPointerDown(event2) {\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event2)) return;\n          event2.preventDefault();\n        },\n        onClick(event2) {\n          if (event2.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"VALUE.CLEAR\", src: \"clear-trigger\" });\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      const value = itemState.value;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, value),\n        role: \"option\",\n        tabIndex: -1,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"aria-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(itemState.highlighted),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(itemState.disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.disabled),\n        \"data-value\": itemState.value,\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.highlighted) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value });\n        },\n        onPointerLeave() {\n          if (props2.persistFocus) return;\n          if (itemState.disabled) return;\n          const prev = event.previous();\n          const mouseMoved = prev?.type.includes(\"POINTER\");\n          if (!mouseMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\", value });\n        },\n        onClick(event2) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isDownloadingEvent)(event2)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isOpeningInNewTab)(event2)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isContextMenuEvent)(event2)) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"item-select\", value });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        id: getItemGroupId(scope, id),\n        \"aria-labelledby\": getItemGroupLabelId(scope, id),\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(collection2.size === 0),\n        role: \"group\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        dir: prop(\"dir\"),\n        id: getItemGroupLabelId(scope, htmlFor),\n        role: \"presentation\"\n      });\n    }\n  };\n}\nvar { guards, createMachine, choose } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.setup)();\nvar { and, not } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      loopFocus: true,\n      openOnClick: false,\n      defaultValue: [],\n      closeOnSelect: !props2.multiple,\n      allowCustomValue: false,\n      inputBehavior: \"none\",\n      selectionBehavior: props2.multiple ? \"clear\" : \"replace\",\n      openOnKeyPress: true,\n      openOnChange: true,\n      composite: true,\n      navigate({ node }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.clickIfLink)(node);\n      },\n      collection: collection.empty(),\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        sameWidth: true,\n        ...props2.positioning\n      },\n      translations: {\n        triggerLabel: \"Toggle suggestions\",\n        clearTriggerLabel: \"Clear value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"suggesting\" : \"idle\";\n  },\n  context({ prop, bindable, getContext, getEvent }) {\n    return {\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual,\n        hash(value) {\n          return value.join(\",\");\n        },\n        onChange(value) {\n          const context = getContext();\n          const prevSelectedItems = context.get(\"selectedItems\");\n          const collection2 = prop(\"collection\");\n          const nextItems = value.map((v) => {\n            const item = prevSelectedItems.find((item2) => collection2.getItemValue(item2) === v);\n            return item || collection2.find(v);\n          });\n          context.set(\"selectedItems\", nextItems);\n          prop(\"onValueChange\")?.({ value, items: nextItems });\n        }\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          const item = prop(\"collection\").find(value);\n          prop(\"onHighlightChange\")?.({ highlightedValue: value, highlightedItem: item });\n        }\n      })),\n      inputValue: bindable(() => {\n        let inputValue = prop(\"inputValue\") || prop(\"defaultInputValue\") || \"\";\n        const value = prop(\"defaultValue\") || prop(\"value\") || [];\n        if (!inputValue.trim() && !prop(\"multiple\")) {\n          const valueAsString = prop(\"collection\").stringifyMany(value);\n          inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: inputValue || valueAsString,\n            replace: valueAsString,\n            clear: \"\"\n          });\n        }\n        return {\n          defaultValue: inputValue,\n          value: prop(\"inputValue\"),\n          onChange(value2) {\n            const event = getEvent();\n            const reason = (event.previousEvent || event).src;\n            prop(\"onInputValueChange\")?.({ inputValue: value2, reason });\n          }\n        };\n      }),\n      highlightedItem: bindable(() => {\n        const highlightedValue = prop(\"highlightedValue\");\n        const highlightedItem = prop(\"collection\").find(highlightedValue);\n        return { defaultValue: highlightedItem };\n      }),\n      selectedItems: bindable(() => {\n        const value = prop(\"value\") || prop(\"defaultValue\") || [];\n        const selectedItems = prop(\"collection\").findMany(value);\n        return { defaultValue: selectedItems };\n      })\n    };\n  },\n  computed: {\n    isInputValueEmpty: ({ context }) => context.get(\"inputValue\").length === 0,\n    isInteractive: ({ prop }) => !(prop(\"readOnly\") || prop(\"disabled\")),\n    autoComplete: ({ prop }) => prop(\"inputBehavior\") === \"autocomplete\",\n    autoHighlight: ({ prop }) => prop(\"inputBehavior\") === \"autohighlight\",\n    hasSelectedItems: ({ context }) => context.get(\"value\").length > 0,\n    valueAsString: ({ context, prop }) => prop(\"collection\").stringifyItems(context.get(\"selectedItems\")),\n    isCustomValue: ({ context, computed }) => context.get(\"inputValue\") !== computed(\"valueAsString\")\n  },\n  watch({ context, prop, track, action, send }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncSelectedItems\"]);\n    });\n    track([() => context.get(\"inputValue\")], () => {\n      action([\"syncInputValue\"]);\n    });\n    track([() => context.get(\"highlightedValue\")], () => {\n      action([\"syncHighlightedItem\", \"autofillInputValue\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n    track([() => prop(\"collection\").toString()], () => {\n      send({ type: \"CHILDREN_CHANGE\" });\n    });\n  },\n  on: {\n    \"SELECTED_ITEMS.SYNC\": {\n      actions: [\"syncSelectedItems\"]\n    },\n    \"HIGHLIGHTED_VALUE.SET\": {\n      actions: [\"setHighlightedValue\"]\n    },\n    \"HIGHLIGHTED_VALUE.CLEAR\": {\n      actions: [\"clearHighlightedValue\"]\n    },\n    \"ITEM.SELECT\": {\n      actions: [\"selectItem\"]\n    },\n    \"ITEM.CLEAR\": {\n      actions: [\"clearItem\"]\n    },\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    \"INPUT_VALUE.SET\": {\n      actions: [\"setInputValue\"]\n    },\n    \"POSITIONING.SET\": {\n      actions: [\"reposition\"]\n    }\n  },\n  entry: choose([\n    {\n      guard: \"autoFocus\",\n      actions: [\"setInitialFocus\"]\n    }\n  ]),\n  states: {\n    idle: {\n      tags: [\"idle\", \"closed\"],\n      entry: [\"scrollContentToTop\", \"clearHighlightedValue\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"interacting\"\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.FOCUS\": {\n          target: \"focused\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"VALUE.CLEAR\": {\n          target: \"focused\",\n          actions: [\"clearInputValue\", \"clearSelectedItems\", \"setInitialFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focused\", \"closed\"],\n      entry: [\"scrollContentToTop\", \"clearHighlightedValue\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isChangeEvent\",\n            target: \"suggesting\"\n          },\n          {\n            target: \"interacting\"\n          }\n        ],\n        \"INPUT.CHANGE\": [\n          {\n            guard: and(\"isOpenControlled\", \"openOnChange\"),\n            actions: [\"setInputValue\", \"invokeOnOpen\", \"highlightFirstItemIfNeeded\"]\n          },\n          {\n            guard: \"openOnChange\",\n            target: \"suggesting\",\n            actions: [\"setInputValue\", \"invokeOnOpen\", \"highlightFirstItemIfNeeded\"]\n          },\n          {\n            actions: [\"setInputValue\"]\n          }\n        ],\n        \"LAYER.INTERACT_OUTSIDE\": {\n          target: \"idle\"\n        },\n        \"INPUT.ESCAPE\": {\n          guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n          actions: [\"revertInputValue\"]\n        },\n        \"INPUT.BLUR\": {\n          target: \"idle\"\n        },\n        \"INPUT.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.ARROW_DOWN\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"autoComplete\"),\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"highlightFirstOrSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightFirstOrSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        \"INPUT.ARROW_UP\": [\n          // == group 1 ==\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          },\n          // == group 2 ==\n          {\n            target: \"interacting\",\n            actions: [\"highlightLastOrSelectedItem\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"highlightLastOrSelectedItem\", \"invokeOnOpen\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"interacting\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"VALUE.CLEAR\": {\n          actions: [\"clearInputValue\", \"clearSelectedItems\"]\n        }\n      }\n    },\n    interacting: {\n      tags: [\"open\", \"focused\"],\n      entry: [\"setInitialFocus\"],\n      effects: [\"scrollToHighlightedItem\", \"trackDismissableLayer\", \"trackPlacement\", \"hideOtherElements\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"setFinalFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        CHILDREN_CHANGE: [\n          {\n            guard: \"isHighlightedItemRemoved\",\n            actions: [\"clearHighlightedValue\"]\n          },\n          {\n            actions: [\"scrollToHighlightedItem\"]\n          }\n        ],\n        \"INPUT.HOME\": {\n          actions: [\"highlightFirstItem\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"highlightLastItem\"]\n        },\n        \"INPUT.ARROW_DOWN\": [\n          {\n            guard: and(\"autoComplete\", \"isLastItemHighlighted\"),\n            actions: [\"clearHighlightedValue\", \"scrollContentToTop\"]\n          },\n          {\n            actions: [\"highlightNextItem\"]\n          }\n        ],\n        \"INPUT.ARROW_UP\": [\n          {\n            guard: and(\"autoComplete\", \"isFirstItemHighlighted\"),\n            actions: [\"clearHighlightedValue\"]\n          },\n          {\n            actions: [\"highlightPrevItem\"]\n          }\n        ],\n        \"INPUT.ENTER\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            target: \"focused\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"INPUT.CHANGE\": [\n          {\n            guard: \"autoComplete\",\n            target: \"suggesting\",\n            actions: [\"setInputValue\"]\n          },\n          {\n            target: \"suggesting\",\n            actions: [\"clearHighlightedValue\", \"setInputValue\"]\n          }\n        ],\n        \"ITEM.POINTER_MOVE\": {\n          actions: [\"setHighlightedValue\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedValue\"]\n        },\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectItem\"]\n          }\n        ],\n        \"LAYER.ESCAPE\": [\n          {\n            guard: and(\"isOpenControlled\", \"autoComplete\"),\n            actions: [\"syncInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"autoComplete\",\n            target: \"focused\",\n            actions: [\"syncInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"LAYER.INTERACT_OUTSIDE\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n            target: \"idle\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"VALUE.CLEAR\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ]\n      }\n    },\n    suggesting: {\n      tags: [\"open\", \"focused\"],\n      effects: [\"trackDismissableLayer\", \"scrollToHighlightedItem\", \"trackPlacement\", \"hideOtherElements\"],\n      entry: [\"setInitialFocus\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"setFinalFocus\"]\n          },\n          {\n            target: \"idle\"\n          }\n        ],\n        CHILDREN_CHANGE: [\n          {\n            guard: \"autoHighlight\",\n            actions: [\"highlightFirstItem\"]\n          },\n          {\n            guard: \"isHighlightedItemRemoved\",\n            actions: [\"clearHighlightedValue\"]\n          }\n        ],\n        \"INPUT.ARROW_DOWN\": {\n          target: \"interacting\",\n          actions: [\"highlightNextItem\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          target: \"interacting\",\n          actions: [\"highlightPrevItem\"]\n        },\n        \"INPUT.HOME\": {\n          target: \"interacting\",\n          actions: [\"highlightFirstItem\"]\n        },\n        \"INPUT.END\": {\n          target: \"interacting\",\n          actions: [\"highlightLastItem\"]\n        },\n        \"INPUT.ENTER\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"hasHighlightedItem\"), not(\"allowCustomValue\")),\n            target: \"focused\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"INPUT.CHANGE\": {\n          actions: [\"setInputValue\"]\n        },\n        \"LAYER.ESCAPE\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"ITEM.POINTER_MOVE\": {\n          target: \"interacting\",\n          actions: [\"setHighlightedValue\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedValue\"]\n        },\n        \"LAYER.INTERACT_OUTSIDE\": [\n          // == group 1 ==\n          {\n            guard: and(\"isOpenControlled\", \"isCustomValue\", not(\"allowCustomValue\")),\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(\"isCustomValue\", not(\"allowCustomValue\")),\n            target: \"idle\",\n            actions: [\"revertInputValue\", \"invokeOnClose\"]\n          },\n          // == group 2 ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n            actions: [\"selectItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectItem\", \"invokeOnClose\", \"setFinalFocus\"]\n          },\n          {\n            actions: [\"selectItem\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        \"VALUE.CLEAR\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"clearInputValue\", \"clearSelectedItems\", \"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isInputValueEmpty: ({ computed }) => computed(\"isInputValueEmpty\"),\n      autoComplete: ({ computed, prop }) => computed(\"autoComplete\") && !prop(\"multiple\"),\n      autoHighlight: ({ computed }) => computed(\"autoHighlight\"),\n      isFirstItemHighlighted: ({ prop, context }) => prop(\"collection\").firstValue === context.get(\"highlightedValue\"),\n      isLastItemHighlighted: ({ prop, context }) => prop(\"collection\").lastValue === context.get(\"highlightedValue\"),\n      isCustomValue: ({ computed }) => computed(\"isCustomValue\"),\n      allowCustomValue: ({ prop }) => !!prop(\"allowCustomValue\"),\n      hasHighlightedItem: ({ context }) => context.get(\"highlightedValue\") != null,\n      closeOnSelect: ({ prop }) => !!prop(\"closeOnSelect\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null,\n      openOnChange: ({ prop, context }) => {\n        const openOnChange = prop(\"openOnChange\");\n        if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(openOnChange)) return openOnChange;\n        return !!openOnChange?.({ inputValue: context.get(\"inputValue\") });\n      },\n      restoreFocus: ({ event }) => event.restoreFocus == null ? true : !!event.restoreFocus,\n      isChangeEvent: ({ event }) => event.previousEvent?.type === \"INPUT.CHANGE\",\n      autoFocus: ({ prop }) => !!prop(\"autoFocus\"),\n      isHighlightedItemRemoved: ({ prop, context }) => !prop(\"collection\").has(context.get(\"highlightedValue\"))\n    },\n    effects: {\n      trackDismissableLayer({ send, prop, scope }) {\n        if (prop(\"disableLayer\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(contentEl, {\n          defer: true,\n          exclude: () => [getInputEl(scope), getTriggerEl(scope), getClearTriggerEl(scope)],\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onEscapeKeyDown(event) {\n            event.preventDefault();\n            event.stopPropagation();\n            send({ type: \"LAYER.ESCAPE\", src: \"escape-key\" });\n          },\n          onDismiss() {\n            send({ type: \"LAYER.INTERACT_OUTSIDE\", src: \"interact-outside\", restoreFocus: false });\n          }\n        });\n      },\n      hideOtherElements({ scope }) {\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__.ariaHidden)([\n          getInputEl(scope),\n          getContentEl(scope),\n          getTriggerEl(scope),\n          getClearTriggerEl(scope)\n        ]);\n      },\n      trackPlacement({ context, prop, scope }) {\n        const anchorEl = () => getControlEl(scope) || getTriggerEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, positionerEl, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      scrollToHighlightedItem({ context, prop, scope, event }) {\n        const inputEl = getInputEl(scope);\n        let cleanups = [];\n        const exec = (immediate) => {\n          const pointer = event.current().type.includes(\"POINTER\");\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (pointer || !highlightedValue) return;\n          const contentEl = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn({\n              index: highlightedIndex,\n              immediate,\n              getElement: () => getItemEl(scope, highlightedValue)\n            });\n            return;\n          }\n          const itemEl = getItemEl(scope, highlightedValue);\n          const raf_cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(itemEl, { rootEl: contentEl, block: \"nearest\" });\n          });\n          cleanups.push(raf_cleanup);\n        };\n        const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => exec(true));\n        cleanups.push(rafCleanup);\n        const observerCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.observeAttributes)(inputEl, {\n          attributes: [\"aria-activedescendant\"],\n          callback: () => exec(false)\n        });\n        cleanups.push(observerCleanup);\n        return () => {\n          cleanups.forEach((cleanup) => cleanup());\n        };\n      }\n    },\n    actions: {\n      reposition({ context, prop, scope, event }) {\n        const controlEl = () => getControlEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(controlEl, positionerEl, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      setHighlightedValue({ context, event }) {\n        if (event.value == null) return;\n        context.set(\"highlightedValue\", event.value);\n      },\n      clearHighlightedValue({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      selectHighlightedItem(params) {\n        const { context, prop } = params;\n        const collection2 = prop(\"collection\");\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (!highlightedValue || !collection2.has(highlightedValue)) return;\n        const nextValue = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.addOrRemove)(context.get(\"value\"), highlightedValue) : [highlightedValue];\n        prop(\"onSelect\")?.({ value: nextValue, itemValue: highlightedValue });\n        context.set(\"value\", nextValue);\n        const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n          preserve: context.get(\"inputValue\"),\n          replace: collection2.stringifyMany(nextValue),\n          clear: \"\"\n        });\n        context.set(\"inputValue\", inputValue);\n      },\n      scrollToHighlightedItem({ context, prop, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.nextTick)(() => {\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (highlightedValue == null) return;\n          const itemEl = getItemEl(scope, highlightedValue);\n          const contentEl = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn({\n              index: highlightedIndex,\n              immediate: true,\n              getElement: () => getItemEl(scope, highlightedValue)\n            });\n            return;\n          }\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(itemEl, { rootEl: contentEl, block: \"nearest\" });\n        });\n      },\n      selectItem(params) {\n        const { context, event, flush, prop } = params;\n        if (event.value == null) return;\n        flush(() => {\n          const nextValue = prop(\"multiple\") ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.addOrRemove)(context.get(\"value\"), event.value) : [event.value];\n          prop(\"onSelect\")?.({ value: nextValue, itemValue: event.value });\n          context.set(\"value\", nextValue);\n          const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: context.get(\"inputValue\"),\n            replace: prop(\"collection\").stringifyMany(nextValue),\n            clear: \"\"\n          });\n          context.set(\"inputValue\", inputValue);\n        });\n      },\n      clearItem(params) {\n        const { context, event, flush, prop } = params;\n        if (event.value == null) return;\n        flush(() => {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.remove)(context.get(\"value\"), event.value);\n          context.set(\"value\", nextValue);\n          const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: context.get(\"inputValue\"),\n            replace: prop(\"collection\").stringifyMany(nextValue),\n            clear: \"\"\n          });\n          context.set(\"inputValue\", inputValue);\n        });\n      },\n      setInitialFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          focusInputEl(scope);\n        });\n      },\n      setFinalFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const triggerEl = getTriggerEl(scope);\n          if (triggerEl?.dataset.focusable == null) {\n            focusInputEl(scope);\n          } else {\n            focusTriggerEl(scope);\n          }\n        });\n      },\n      syncInputValue({ context, scope, event }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        inputEl.value = context.get(\"inputValue\");\n        queueMicrotask(() => {\n          if (event.current().type === \"INPUT.CHANGE\") return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.setCaretToEnd)(inputEl);\n        });\n      },\n      setInputValue({ context, event }) {\n        context.set(\"inputValue\", event.value);\n      },\n      clearInputValue({ context }) {\n        context.set(\"inputValue\", \"\");\n      },\n      revertInputValue({ context, prop, computed }) {\n        const selectionBehavior = prop(\"selectionBehavior\");\n        const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(selectionBehavior, {\n          replace: computed(\"hasSelectedItems\") ? computed(\"valueAsString\") : \"\",\n          preserve: context.get(\"inputValue\"),\n          clear: \"\"\n        });\n        context.set(\"inputValue\", inputValue);\n      },\n      setValue(params) {\n        const { context, flush, event, prop } = params;\n        flush(() => {\n          context.set(\"value\", event.value);\n          const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: context.get(\"inputValue\"),\n            replace: prop(\"collection\").stringifyMany(event.value),\n            clear: \"\"\n          });\n          context.set(\"inputValue\", inputValue);\n        });\n      },\n      clearSelectedItems(params) {\n        const { context, flush, prop } = params;\n        flush(() => {\n          context.set(\"value\", []);\n          const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: context.get(\"inputValue\"),\n            replace: prop(\"collection\").stringifyMany([]),\n            clear: \"\"\n          });\n          context.set(\"inputValue\", inputValue);\n        });\n      },\n      scrollContentToTop({ prop, scope }) {\n        const scrollToIndexFn = prop(\"scrollToIndexFn\");\n        if (scrollToIndexFn) {\n          const firstValue = prop(\"collection\").firstValue;\n          scrollToIndexFn({\n            index: 0,\n            immediate: true,\n            getElement: () => getItemEl(scope, firstValue)\n          });\n        } else {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          contentEl.scrollTop = 0;\n        }\n      },\n      invokeOnOpen({ prop, event }) {\n        const reason = getOpenChangeReason(event);\n        prop(\"onOpenChange\")?.({ open: true, reason });\n      },\n      invokeOnClose({ prop, event }) {\n        const reason = getOpenChangeReason(event);\n        prop(\"onOpenChange\")?.({ open: false, reason });\n      },\n      highlightFirstItem({ context, prop, scope }) {\n        const exec = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf;\n        exec(() => {\n          const value = prop(\"collection\").firstValue;\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightFirstItemIfNeeded({ computed, action }) {\n        if (!computed(\"autoHighlight\")) return;\n        action([\"highlightFirstItem\"]);\n      },\n      highlightLastItem({ context, prop, scope }) {\n        const exec = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf;\n        exec(() => {\n          const value = prop(\"collection\").lastValue;\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightNextItem({ context, prop }) {\n        let value = null;\n        const highlightedValue = context.get(\"highlightedValue\");\n        const collection2 = prop(\"collection\");\n        if (highlightedValue) {\n          value = collection2.getNextValue(highlightedValue);\n          if (!value && prop(\"loopFocus\")) value = collection2.firstValue;\n        } else {\n          value = collection2.firstValue;\n        }\n        if (value) context.set(\"highlightedValue\", value);\n      },\n      highlightPrevItem({ context, prop }) {\n        let value = null;\n        const highlightedValue = context.get(\"highlightedValue\");\n        const collection2 = prop(\"collection\");\n        if (highlightedValue) {\n          value = collection2.getPreviousValue(highlightedValue);\n          if (!value && prop(\"loopFocus\")) value = collection2.lastValue;\n        } else {\n          value = collection2.lastValue;\n        }\n        if (value) context.set(\"highlightedValue\", value);\n      },\n      highlightFirstSelectedItem({ context, prop }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const [value] = prop(\"collection\").sort(context.get(\"value\"));\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightFirstOrSelectedItem({ context, prop, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          let value = null;\n          if (computed(\"hasSelectedItems\")) {\n            value = prop(\"collection\").sort(context.get(\"value\"))[0];\n          } else {\n            value = prop(\"collection\").firstValue;\n          }\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      highlightLastOrSelectedItem({ context, prop, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const collection2 = prop(\"collection\");\n          let value = null;\n          if (computed(\"hasSelectedItems\")) {\n            value = collection2.sort(context.get(\"value\"))[0];\n          } else {\n            value = collection2.lastValue;\n          }\n          if (value) context.set(\"highlightedValue\", value);\n        });\n      },\n      autofillInputValue({ context, computed, prop, event, scope }) {\n        const inputEl = getInputEl(scope);\n        const collection2 = prop(\"collection\");\n        if (!computed(\"autoComplete\") || !inputEl || !event.keypress) return;\n        const valueText = collection2.stringify(context.get(\"highlightedValue\"));\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          inputEl.value = valueText || context.get(\"inputValue\");\n        });\n      },\n      syncSelectedItems(params) {\n        queueMicrotask(() => {\n          const { context, prop } = params;\n          const collection2 = prop(\"collection\");\n          const value = context.get(\"value\");\n          const selectedItems = value.map((v) => {\n            const item = context.get(\"selectedItems\").find((item2) => collection2.getItemValue(item2) === v);\n            return item || collection2.find(v);\n          });\n          context.set(\"selectedItems\", selectedItems);\n          const inputValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.match)(prop(\"selectionBehavior\"), {\n            preserve: context.get(\"inputValue\"),\n            replace: collection2.stringifyMany(value),\n            clear: \"\"\n          });\n          context.set(\"inputValue\", inputValue);\n        });\n      },\n      syncHighlightedItem({ context, prop }) {\n        const item = prop(\"collection\").find(context.get(\"highlightedValue\"));\n        context.set(\"highlightedItem\", item);\n      },\n      toggleVisibility({ event, send, prop }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nfunction getOpenChangeReason(event) {\n  return (event.previousEvent || event).src;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"allowCustomValue\",\n  \"autoFocus\",\n  \"closeOnSelect\",\n  \"collection\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultInputValue\",\n  \"defaultOpen\",\n  \"defaultValue\",\n  \"dir\",\n  \"disabled\",\n  \"disableLayer\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"inputBehavior\",\n  \"inputValue\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"navigate\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInputValueChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"onValueChange\",\n  \"open\",\n  \"openOnChange\",\n  \"openOnClick\",\n  \"openOnKeyPress\",\n  \"placeholder\",\n  \"positioning\",\n  \"readOnly\",\n  \"required\",\n  \"scrollToIndexFn\",\n  \"selectionBehavior\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemGroupProps);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/combobox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INIT_STATE: () => (/* binding */ INIT_STATE),\n/* harmony export */   MachineStatus: () => (/* binding */ MachineStatus),\n/* harmony export */   createGuards: () => (/* binding */ createGuards),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   memo: () => (/* binding */ memo),\n/* harmony export */   mergeProps: () => (/* binding */ mergeProps),\n/* harmony export */   setup: () => (/* binding */ setup)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n\n// src/merge-props.ts\nvar clsx = (...args) => args.map((str) => str?.trim?.()).filter(Boolean).join(\" \");\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = (style) => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(a)) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(b)) return `${a};${b}`;\n    a = serialize(a);\n  } else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a ?? {}, b ?? {});\n};\nfunction mergeProps(...args) {\n  let result = {};\n  for (let props of args) {\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.callAll)(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n  }\n  return result;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return (depArgs) => {\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(deps[index], dep));\n    if (!depsChanged) return result;\n    deps = newDeps;\n    result = fn(...newDeps);\n    opts?.onChange?.(result);\n    return result;\n  };\n}\n\n// src/create-machine.ts\nfunction createGuards() {\n  return {\n    and: (...guards) => {\n      return function andGuard(params) {\n        return guards.every((str) => params.guard(str));\n      };\n    },\n    or: (...guards) => {\n      return function orGuard(params) {\n        return guards.some((str) => params.guard(str));\n      };\n    },\n    not: (guard) => {\n      return function notGuard(params) {\n        return !params.guard(guard);\n      };\n    }\n  };\n}\nfunction createMachine(config) {\n  return config;\n}\nfunction setup() {\n  return {\n    guards: createGuards(),\n    createMachine: (config) => {\n      return createMachine(config);\n    },\n    choose: (transitions) => {\n      return function chooseFn({ choose }) {\n        return choose(transitions)?.actions;\n      };\n    }\n  };\n}\n\n// src/types.ts\nvar MachineStatus = /* @__PURE__ */ ((MachineStatus2) => {\n  MachineStatus2[\"NotStarted\"] = \"Not Started\";\n  MachineStatus2[\"Started\"] = \"Started\";\n  MachineStatus2[\"Stopped\"] = \"Stopped\";\n  return MachineStatus2;\n})(MachineStatus || {});\nvar INIT_STATE = \"__init__\";\nfunction createScope(props) {\n  const getRootNode = () => props.getRootNode?.() ?? document;\n  const getDoc = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDocument)(getRootNode());\n  const getWin = () => getDoc().defaultView ?? window;\n  const getActiveElementFn = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getActiveElement)(getRootNode());\n  const isActiveElement = (elem) => elem === getActiveElementFn();\n  const getById = (id) => getRootNode().getElementById(id);\n  return {\n    ...props,\n    getRootNode,\n    getDoc,\n    getWin,\n    getActiveElement: getActiveElementFn,\n    isActiveElement,\n    getById\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb3JlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkQ7QUFDTzs7QUFFbEU7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHVEQUFRO0FBQ2QsUUFBUSx1REFBUSxlQUFlLEdBQUcsRUFBRSxFQUFFO0FBQ3RDO0FBQ0EsSUFBSSxTQUFTLHVEQUFRO0FBQ3JCO0FBQ0E7QUFDQSx5QkFBeUIsU0FBUyxTQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixzREFBTztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpQ0FBaUMsUUFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4REFBVztBQUNsQztBQUNBLG1DQUFtQyxtRUFBZ0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvY29yZS9kaXN0L2luZGV4Lm1qcz9hMTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhbGxBbGwsIGlzRXF1YWwsIGlzU3RyaW5nIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5pbXBvcnQgeyBnZXRBY3RpdmVFbGVtZW50LCBnZXREb2N1bWVudCB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcblxuLy8gc3JjL21lcmdlLXByb3BzLnRzXG52YXIgY2xzeCA9ICguLi5hcmdzKSA9PiBhcmdzLm1hcCgoc3RyKSA9PiBzdHI/LnRyaW0/LigpKS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG52YXIgQ1NTX1JFR0VYID0gLygoPzotLSk/KD86XFx3Ky0/KSspXFxzKjpcXHMqKFteO10qKS9nO1xudmFyIHNlcmlhbGl6ZSA9IChzdHlsZSkgPT4ge1xuICBjb25zdCByZXMgPSB7fTtcbiAgbGV0IG1hdGNoO1xuICB3aGlsZSAobWF0Y2ggPSBDU1NfUkVHRVguZXhlYyhzdHlsZSkpIHtcbiAgICByZXNbbWF0Y2hbMV1dID0gbWF0Y2hbMl07XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG52YXIgY3NzID0gKGEsIGIpID0+IHtcbiAgaWYgKGlzU3RyaW5nKGEpKSB7XG4gICAgaWYgKGlzU3RyaW5nKGIpKSByZXR1cm4gYCR7YX07JHtifWA7XG4gICAgYSA9IHNlcmlhbGl6ZShhKTtcbiAgfSBlbHNlIGlmIChpc1N0cmluZyhiKSkge1xuICAgIGIgPSBzZXJpYWxpemUoYik7XG4gIH1cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGEgPz8ge30sIGIgPz8ge30pO1xufTtcbmZ1bmN0aW9uIG1lcmdlUHJvcHMoLi4uYXJncykge1xuICBsZXQgcmVzdWx0ID0ge307XG4gIGZvciAobGV0IHByb3BzIG9mIGFyZ3MpIHtcbiAgICBmb3IgKGxldCBrZXkgaW4gcmVzdWx0KSB7XG4gICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSAmJiB0eXBlb2YgcmVzdWx0W2tleV0gPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgcHJvcHNba2V5XSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY2FsbEFsbChwcm9wc1trZXldLCByZXN1bHRba2V5XSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gXCJjbGFzc05hbWVcIiB8fCBrZXkgPT09IFwiY2xhc3NcIikge1xuICAgICAgICByZXN1bHRba2V5XSA9IGNsc3gocmVzdWx0W2tleV0sIHByb3BzW2tleV0pO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09IFwic3R5bGVcIikge1xuICAgICAgICByZXN1bHRba2V5XSA9IGNzcyhyZXN1bHRba2V5XSwgcHJvcHNba2V5XSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgcmVzdWx0W2tleV0gPSBwcm9wc1trZXldICE9PSB2b2lkIDAgPyBwcm9wc1trZXldIDogcmVzdWx0W2tleV07XG4gICAgfVxuICAgIGZvciAobGV0IGtleSBpbiBwcm9wcykge1xuICAgICAgaWYgKHJlc3VsdFtrZXldID09PSB2b2lkIDApIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBwcm9wc1trZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbWVtbyhnZXREZXBzLCBmbiwgb3B0cykge1xuICBsZXQgZGVwcyA9IFtdO1xuICBsZXQgcmVzdWx0O1xuICByZXR1cm4gKGRlcEFyZ3MpID0+IHtcbiAgICBjb25zdCBuZXdEZXBzID0gZ2V0RGVwcyhkZXBBcmdzKTtcbiAgICBjb25zdCBkZXBzQ2hhbmdlZCA9IG5ld0RlcHMubGVuZ3RoICE9PSBkZXBzLmxlbmd0aCB8fCBuZXdEZXBzLnNvbWUoKGRlcCwgaW5kZXgpID0+ICFpc0VxdWFsKGRlcHNbaW5kZXhdLCBkZXApKTtcbiAgICBpZiAoIWRlcHNDaGFuZ2VkKSByZXR1cm4gcmVzdWx0O1xuICAgIGRlcHMgPSBuZXdEZXBzO1xuICAgIHJlc3VsdCA9IGZuKC4uLm5ld0RlcHMpO1xuICAgIG9wdHM/Lm9uQ2hhbmdlPy4ocmVzdWx0KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufVxuXG4vLyBzcmMvY3JlYXRlLW1hY2hpbmUudHNcbmZ1bmN0aW9uIGNyZWF0ZUd1YXJkcygpIHtcbiAgcmV0dXJuIHtcbiAgICBhbmQ6ICguLi5ndWFyZHMpID0+IHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBhbmRHdWFyZChwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIGd1YXJkcy5ldmVyeSgoc3RyKSA9PiBwYXJhbXMuZ3VhcmQoc3RyKSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgb3I6ICguLi5ndWFyZHMpID0+IHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBvckd1YXJkKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gZ3VhcmRzLnNvbWUoKHN0cikgPT4gcGFyYW1zLmd1YXJkKHN0cikpO1xuICAgICAgfTtcbiAgICB9LFxuICAgIG5vdDogKGd1YXJkKSA9PiB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gbm90R3VhcmQocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiAhcGFyYW1zLmd1YXJkKGd1YXJkKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlTWFjaGluZShjb25maWcpIHtcbiAgcmV0dXJuIGNvbmZpZztcbn1cbmZ1bmN0aW9uIHNldHVwKCkge1xuICByZXR1cm4ge1xuICAgIGd1YXJkczogY3JlYXRlR3VhcmRzKCksXG4gICAgY3JlYXRlTWFjaGluZTogKGNvbmZpZykgPT4ge1xuICAgICAgcmV0dXJuIGNyZWF0ZU1hY2hpbmUoY29uZmlnKTtcbiAgICB9LFxuICAgIGNob29zZTogKHRyYW5zaXRpb25zKSA9PiB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gY2hvb3NlRm4oeyBjaG9vc2UgfSkge1xuICAgICAgICByZXR1cm4gY2hvb3NlKHRyYW5zaXRpb25zKT8uYWN0aW9ucztcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG4vLyBzcmMvdHlwZXMudHNcbnZhciBNYWNoaW5lU3RhdHVzID0gLyogQF9fUFVSRV9fICovICgoTWFjaGluZVN0YXR1czIpID0+IHtcbiAgTWFjaGluZVN0YXR1czJbXCJOb3RTdGFydGVkXCJdID0gXCJOb3QgU3RhcnRlZFwiO1xuICBNYWNoaW5lU3RhdHVzMltcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgTWFjaGluZVN0YXR1czJbXCJTdG9wcGVkXCJdID0gXCJTdG9wcGVkXCI7XG4gIHJldHVybiBNYWNoaW5lU3RhdHVzMjtcbn0pKE1hY2hpbmVTdGF0dXMgfHwge30pO1xudmFyIElOSVRfU1RBVEUgPSBcIl9faW5pdF9fXCI7XG5mdW5jdGlvbiBjcmVhdGVTY29wZShwcm9wcykge1xuICBjb25zdCBnZXRSb290Tm9kZSA9ICgpID0+IHByb3BzLmdldFJvb3ROb2RlPy4oKSA/PyBkb2N1bWVudDtcbiAgY29uc3QgZ2V0RG9jID0gKCkgPT4gZ2V0RG9jdW1lbnQoZ2V0Um9vdE5vZGUoKSk7XG4gIGNvbnN0IGdldFdpbiA9ICgpID0+IGdldERvYygpLmRlZmF1bHRWaWV3ID8/IHdpbmRvdztcbiAgY29uc3QgZ2V0QWN0aXZlRWxlbWVudEZuID0gKCkgPT4gZ2V0QWN0aXZlRWxlbWVudChnZXRSb290Tm9kZSgpKTtcbiAgY29uc3QgaXNBY3RpdmVFbGVtZW50ID0gKGVsZW0pID0+IGVsZW0gPT09IGdldEFjdGl2ZUVsZW1lbnRGbigpO1xuICBjb25zdCBnZXRCeUlkID0gKGlkKSA9PiBnZXRSb290Tm9kZSgpLmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wcm9wcyxcbiAgICBnZXRSb290Tm9kZSxcbiAgICBnZXREb2MsXG4gICAgZ2V0V2luLFxuICAgIGdldEFjdGl2ZUVsZW1lbnQ6IGdldEFjdGl2ZUVsZW1lbnRGbixcbiAgICBpc0FjdGl2ZUVsZW1lbnQsXG4gICAgZ2V0QnlJZFxuICB9O1xufVxuXG5leHBvcnQgeyBJTklUX1NUQVRFLCBNYWNoaW5lU3RhdHVzLCBjcmVhdGVHdWFyZHMsIGNyZWF0ZU1hY2hpbmUsIGNyZWF0ZVNjb3BlLCBtZW1vLCBtZXJnZVByb3BzLCBzZXR1cCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/dialog/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/dialog.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/dialog.dom.ts\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`;\nvar getBackdropId = (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`;\nvar getTitleId = (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`;\nvar getDescriptionId = (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`;\nvar getCloseTriggerId = (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getBackdropEl = (ctx) => ctx.getById(getBackdropId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getTitleEl = (ctx) => ctx.getById(getTitleId(ctx));\nvar getDescriptionEl = (ctx) => ctx.getById(getDescriptionId(ctx));\nvar getCloseTriggerEl = (ctx) => ctx.getById(getCloseTriggerId(ctx));\n\n// src/dialog.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, prop, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const open = state.matches(\"open\");\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"TOGGLE\" });\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        id: getBackdropId(scope),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      const rendered = context.get(\"rendered\");\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        role: prop(\"role\"),\n        hidden: !open,\n        id: getContentId(scope),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : getTitleId(scope),\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: prop(\"dir\"),\n        id: getTitleId(scope)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: prop(\"dir\"),\n        id: getDescriptionId(scope)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({ type: \"CLOSE\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  props({ props: props2, scope }) {\n    const alertDialog = props2.role === \"alertdialog\";\n    const initialFocusEl = alertDialog ? () => getCloseTriggerEl(scope) : void 0;\n    const modal = typeof props2.modal === \"boolean\" ? props2.modal : true;\n    return {\n      role: \"dialog\",\n      modal,\n      trapFocus: modal,\n      preventScroll: modal,\n      closeOnInteractOutside: !alertDialog,\n      closeOnEscape: true,\n      restoreFocus: true,\n      initialFocusEl,\n      ...props2\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      rendered: bindable(() => ({\n        defaultValue: { title: true, description: true }\n      }))\n    };\n  },\n  watch({ track, action, prop }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    open: {\n      entry: [\"checkRenderedElements\", \"syncZIndex\"],\n      effects: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackDismissableElement({ scope, send, prop }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_2__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          pointerBlocking: prop(\"modal\"),\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          persistentElements: prop(\"persistentElements\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onRequestDismiss: prop(\"onRequestDismiss\"),\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (!prop(\"closeOnEscape\")) {\n              event.preventDefault();\n            }\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\" });\n          }\n        });\n      },\n      preventScroll({ scope, prop }) {\n        if (!prop(\"preventScroll\")) return;\n        return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_3__.preventBodyScroll)(scope.getDoc());\n      },\n      trapFocus({ scope, prop }) {\n        if (!prop(\"trapFocus\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_4__.trapFocus)(contentEl, {\n          preventScroll: true,\n          returnFocusOnDeactivate: !!prop(\"restoreFocus\"),\n          initialFocus: prop(\"initialFocusEl\"),\n          setReturnFocus: (el) => prop(\"finalFocusEl\")?.() ?? el\n        });\n      },\n      hideContentBelow({ scope, prop }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope)];\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__.ariaHidden)(getElements, { defer: true });\n      }\n    },\n    actions: {\n      checkRenderedElements({ context, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.raf)(() => {\n          context.set(\"rendered\", {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      syncZIndex({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_6__.getComputedStyle)(contentEl);\n          const elems = [getPositionerEl(scope), getBackdropEl(scope)];\n          elems.forEach((node) => {\n            node?.style.setProperty(\"--z-index\", styles.zIndex);\n            node?.style.setProperty(\"--layer-index\", styles.getPropertyValue(\"--layer-index\"));\n          });\n        });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      toggleVisibility({ prop, send, event }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onRequestDismiss\",\n  \"defaultOpen\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_8__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/dismissable/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackDismissableBranch: () => (/* binding */ trackDismissableBranch),\n/* harmony export */   trackDismissableElement: () => (/* binding */ trackDismissableElement)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/dismissable-layer.ts\nfunction trackEscapeKeydown(node, fn) {\n  const handleKeyDown = (event) => {\n    if (event.key !== \"Escape\") return;\n    if (event.isComposing) return;\n    fn?.(event);\n  };\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node), \"keydown\", handleKeyDown, { capture: true });\n}\nvar LAYER_REQUEST_DISMISS_EVENT = \"layer:request-dismiss\";\nvar layerStack = {\n  layers: [],\n  branches: [],\n  count() {\n    return this.layers.length;\n  },\n  pointerBlockingLayers() {\n    return this.layers.filter((layer) => layer.pointerBlocking);\n  },\n  topMostPointerBlockingLayer() {\n    return [...this.pointerBlockingLayers()].slice(-1)[0];\n  },\n  hasPointerBlockingLayer() {\n    return this.pointerBlockingLayers().length > 0;\n  },\n  isBelowPointerBlockingLayer(node) {\n    const index = this.indexOf(node);\n    const highestBlockingIndex = this.topMostPointerBlockingLayer() ? this.indexOf(this.topMostPointerBlockingLayer()?.node) : -1;\n    return index < highestBlockingIndex;\n  },\n  isTopMost(node) {\n    const layer = this.layers[this.count() - 1];\n    return layer?.node === node;\n  },\n  getNestedLayers(node) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1);\n  },\n  isInNestedLayer(node, target) {\n    return this.getNestedLayers(node).some((layer) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(layer.node, target));\n  },\n  isInBranch(target) {\n    return Array.from(this.branches).some((branch) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(branch, target));\n  },\n  add(layer) {\n    this.layers.push(layer);\n    this.syncLayerIndex();\n  },\n  addBranch(node) {\n    this.branches.push(node);\n  },\n  remove(node) {\n    const index = this.indexOf(node);\n    if (index < 0) return;\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node);\n      _layers.forEach((layer) => layerStack.dismiss(layer.node, node));\n    }\n    this.layers.splice(index, 1);\n    this.syncLayerIndex();\n  },\n  removeBranch(node) {\n    const index = this.branches.indexOf(node);\n    if (index >= 0) this.branches.splice(index, 1);\n  },\n  syncLayerIndex() {\n    this.layers.forEach((layer, index) => {\n      layer.node.style.setProperty(\"--layer-index\", `${index}`);\n    });\n  },\n  indexOf(node) {\n    return this.layers.findIndex((layer) => layer.node === node);\n  },\n  dismiss(node, parent) {\n    const index = this.indexOf(node);\n    if (index === -1) return;\n    const layer = this.layers[index];\n    addListenerOnce(node, LAYER_REQUEST_DISMISS_EVENT, (event) => {\n      layer.requestDismiss?.(event);\n      if (!event.defaultPrevented) {\n        layer?.dismiss();\n      }\n    });\n    fireCustomEvent(node, LAYER_REQUEST_DISMISS_EVENT, {\n      originalLayer: node,\n      targetLayer: parent,\n      originalIndex: index,\n      targetIndex: parent ? this.indexOf(parent) : -1\n    });\n    this.syncLayerIndex();\n  },\n  clear() {\n    this.remove(this.layers[0].node);\n  }\n};\nfunction fireCustomEvent(el, type, detail) {\n  const win = el.ownerDocument.defaultView || window;\n  const event = new win.CustomEvent(type, { cancelable: true, bubbles: true, detail });\n  return el.dispatchEvent(event);\n}\nfunction addListenerOnce(el, type, callback) {\n  el.addEventListener(type, callback, { once: true });\n}\nvar originalBodyPointerEvents;\nfunction assignPointerEventToLayers() {\n  layerStack.layers.forEach(({ node }) => {\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n  });\n}\nfunction clearPointerEvent(node) {\n  node.style.pointerEvents = \"\";\n}\nfunction disablePointerEventsOutside(node, persistentElements) {\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const cleanups = [];\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\";\n      doc.body.setAttribute(\"data-inert\", \"\");\n    });\n  }\n  persistentElements?.forEach((el) => {\n    const [promise, abort] = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.waitForElement)(\n      () => {\n        const node2 = el();\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(node2) ? node2 : null;\n      },\n      { timeout: 1e3 }\n    );\n    promise.then((el2) => cleanups.push((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(el2, { pointerEvents: \"auto\" })));\n    cleanups.push(abort);\n  });\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents;\n      doc.body.removeAttribute(\"data-inert\");\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\");\n    });\n    cleanups.forEach((fn) => fn());\n  };\n}\n\n// src/dismissable-layer.ts\nfunction trackDismissableElementImpl(node, options) {\n  const { warnOnMissingNode = true } = options;\n  if (warnOnMissingNode && !node) {\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] node is `null` or `undefined`\");\n    return;\n  }\n  if (!node) {\n    return;\n  }\n  const { onDismiss, onRequestDismiss, pointerBlocking, exclude: excludeContainers, debug } = options;\n  const layer = { dismiss: onDismiss, node, pointerBlocking, requestDismiss: onRequestDismiss };\n  layerStack.add(layer);\n  assignPointerEventToLayers();\n  function onPointerDownOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isBelowPointerBlockingLayer(node) || layerStack.isInBranch(target)) return;\n    options.onPointerDownOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onFocusOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isInBranch(target)) return;\n    options.onFocusOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onEscapeKeyDown(event) {\n    if (!layerStack.isTopMost(node)) return;\n    options.onEscapeKeyDown?.(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }\n  function exclude(target) {\n    if (!node) return false;\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers;\n    const _containers = Array.isArray(containers) ? containers : [containers];\n    const persistentElements = options.persistentElements?.map((fn) => fn()).filter(_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement);\n    if (persistentElements) _containers.push(...persistentElements);\n    return _containers.some((node2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node2, target)) || layerStack.isInNestedLayer(node, target);\n  }\n  const cleanups = [\n    pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : void 0,\n    trackEscapeKeydown(node, onEscapeKeyDown),\n    (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__.trackInteractOutside)(node, { exclude, onFocusOutside, onPointerDownOutside, defer: options.defer })\n  ];\n  return () => {\n    layerStack.remove(node);\n    assignPointerEventToLayers();\n    clearPointerEvent(node);\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableElement(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackDismissableElementImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableBranch(nodeOrFn, options = {}) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      if (!node) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] branch node is `null` or `undefined`\");\n        return;\n      }\n      layerStack.addBranch(node);\n      cleanups.push(() => {\n        layerStack.removeBranch(node);\n      });\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/dom-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_Z_INDEX: () => (/* binding */ MAX_Z_INDEX),\n/* harmony export */   addDomEvent: () => (/* binding */ addDomEvent),\n/* harmony export */   ariaAttr: () => (/* binding */ ariaAttr),\n/* harmony export */   clickIfLink: () => (/* binding */ clickIfLink),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   dataAttr: () => (/* binding */ dataAttr),\n/* harmony export */   defaultItemToId: () => (/* binding */ defaultItemToId),\n/* harmony export */   disableTextSelection: () => (/* binding */ disableTextSelection),\n/* harmony export */   dispatchInputCheckedEvent: () => (/* binding */ dispatchInputCheckedEvent),\n/* harmony export */   dispatchInputValueEvent: () => (/* binding */ dispatchInputValueEvent),\n/* harmony export */   getActiveElement: () => (/* binding */ getActiveElement),\n/* harmony export */   getBeforeInputValue: () => (/* binding */ getBeforeInputValue),\n/* harmony export */   getByText: () => (/* binding */ getByText),\n/* harmony export */   getByTypeahead: () => (/* binding */ getByTypeahead),\n/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),\n/* harmony export */   getDataUrl: () => (/* binding */ getDataUrl),\n/* harmony export */   getDocument: () => (/* binding */ getDocument),\n/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),\n/* harmony export */   getEventKey: () => (/* binding */ getEventKey),\n/* harmony export */   getEventPoint: () => (/* binding */ getEventPoint),\n/* harmony export */   getEventStep: () => (/* binding */ getEventStep),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getFirstFocusable: () => (/* binding */ getFirstFocusable),\n/* harmony export */   getFirstTabbable: () => (/* binding */ getFirstTabbable),\n/* harmony export */   getFocusables: () => (/* binding */ getFocusables),\n/* harmony export */   getInitialFocus: () => (/* binding */ getInitialFocus),\n/* harmony export */   getLastTabbable: () => (/* binding */ getLastTabbable),\n/* harmony export */   getNativeEvent: () => (/* binding */ getNativeEvent),\n/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),\n/* harmony export */   getNextTabbable: () => (/* binding */ getNextTabbable),\n/* harmony export */   getNodeName: () => (/* binding */ getNodeName),\n/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),\n/* harmony export */   getParentNode: () => (/* binding */ getParentNode),\n/* harmony export */   getPlatform: () => (/* binding */ getPlatform),\n/* harmony export */   getRelativePoint: () => (/* binding */ getRelativePoint),\n/* harmony export */   getScrollPosition: () => (/* binding */ getScrollPosition),\n/* harmony export */   getTabIndex: () => (/* binding */ getTabIndex),\n/* harmony export */   getTabbableEdges: () => (/* binding */ getTabbableEdges),\n/* harmony export */   getTabbables: () => (/* binding */ getTabbables),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   getWindow: () => (/* binding */ getWindow),\n/* harmony export */   indexOfId: () => (/* binding */ indexOfId),\n/* harmony export */   isAnchorElement: () => (/* binding */ isAnchorElement),\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isApple: () => (/* binding */ isApple),\n/* harmony export */   isCaretAtStart: () => (/* binding */ isCaretAtStart),\n/* harmony export */   isChrome: () => (/* binding */ isChrome),\n/* harmony export */   isComposingEvent: () => (/* binding */ isComposingEvent),\n/* harmony export */   isContextMenuEvent: () => (/* binding */ isContextMenuEvent),\n/* harmony export */   isCtrlOrMetaKey: () => (/* binding */ isCtrlOrMetaKey),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isDom: () => (/* binding */ isDom),\n/* harmony export */   isDownloadingEvent: () => (/* binding */ isDownloadingEvent),\n/* harmony export */   isEditableElement: () => (/* binding */ isEditableElement),\n/* harmony export */   isElementVisible: () => (/* binding */ isElementVisible),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isFocusable: () => (/* binding */ isFocusable),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isIPad: () => (/* binding */ isIPad),\n/* harmony export */   isIPhone: () => (/* binding */ isIPhone),\n/* harmony export */   isInView: () => (/* binding */ isInView),\n/* harmony export */   isInputElement: () => (/* binding */ isInputElement),\n/* harmony export */   isIos: () => (/* binding */ isIos),\n/* harmony export */   isKeyboardClick: () => (/* binding */ isKeyboardClick),\n/* harmony export */   isLeftClick: () => (/* binding */ isLeftClick),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isModifierKey: () => (/* binding */ isModifierKey),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isOpeningInNewTab: () => (/* binding */ isOpeningInNewTab),\n/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),\n/* harmony export */   isPrintableKey: () => (/* binding */ isPrintableKey),\n/* harmony export */   isRootElement: () => (/* binding */ isRootElement),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isSelfTarget: () => (/* binding */ isSelfTarget),\n/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),\n/* harmony export */   isTabbable: () => (/* binding */ isTabbable),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   isTouchEvent: () => (/* binding */ isTouchEvent),\n/* harmony export */   isValidTabEvent: () => (/* binding */ isValidTabEvent),\n/* harmony export */   isVirtualClick: () => (/* binding */ isVirtualClick),\n/* harmony export */   isVirtualPointerEvent: () => (/* binding */ isVirtualPointerEvent),\n/* harmony export */   isVisualViewport: () => (/* binding */ isVisualViewport),\n/* harmony export */   isWebKit: () => (/* binding */ isWebKit),\n/* harmony export */   isWindow: () => (/* binding */ isWindow),\n/* harmony export */   itemById: () => (/* binding */ itemById),\n/* harmony export */   nextById: () => (/* binding */ nextById),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   observeAttributes: () => (/* binding */ observeAttributes),\n/* harmony export */   observeChildren: () => (/* binding */ observeChildren),\n/* harmony export */   prevById: () => (/* binding */ prevById),\n/* harmony export */   proxyTabFocus: () => (/* binding */ proxyTabFocus),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   queryAll: () => (/* binding */ queryAll),\n/* harmony export */   queueBeforeEvent: () => (/* binding */ queueBeforeEvent),\n/* harmony export */   raf: () => (/* binding */ raf),\n/* harmony export */   requestPointerLock: () => (/* binding */ requestPointerLock),\n/* harmony export */   restoreTextSelection: () => (/* binding */ restoreTextSelection),\n/* harmony export */   scrollIntoView: () => (/* binding */ scrollIntoView),\n/* harmony export */   setAttribute: () => (/* binding */ setAttribute),\n/* harmony export */   setCaretToEnd: () => (/* binding */ setCaretToEnd),\n/* harmony export */   setElementChecked: () => (/* binding */ setElementChecked),\n/* harmony export */   setElementValue: () => (/* binding */ setElementValue),\n/* harmony export */   setProperty: () => (/* binding */ setProperty),\n/* harmony export */   setStyle: () => (/* binding */ setStyle),\n/* harmony export */   setStyleProperty: () => (/* binding */ setStyleProperty),\n/* harmony export */   setVisuallyHidden: () => (/* binding */ setVisuallyHidden),\n/* harmony export */   trackElementRect: () => (/* binding */ trackElementRect),\n/* harmony export */   trackFormControl: () => (/* binding */ trackFormControl),\n/* harmony export */   trackPointerMove: () => (/* binding */ trackPointerMove),\n/* harmony export */   trackPress: () => (/* binding */ trackPress),\n/* harmony export */   trackVisualViewport: () => (/* binding */ trackVisualViewport),\n/* harmony export */   visuallyHiddenStyle: () => (/* binding */ visuallyHiddenStyle),\n/* harmony export */   waitForElement: () => (/* binding */ waitForElement),\n/* harmony export */   waitForPromise: () => (/* binding */ waitForPromise)\n/* harmony export */ });\n// src/caret.ts\nfunction isCaretAtStart(input) {\n  if (!input) return false;\n  try {\n    return input.selectionStart === 0 && input.selectionEnd === 0;\n  } catch {\n    return input.value === \"\";\n  }\n}\nfunction setCaretToEnd(input) {\n  if (!input) return;\n  const start = input.selectionStart ?? 0;\n  const end = input.selectionEnd ?? 0;\n  if (Math.abs(end - start) !== 0) return;\n  if (start !== 0) return;\n  input.setSelectionRange(input.value.length, input.value.length);\n}\n\n// src/shared.ts\nvar clamp = (value) => Math.max(0, Math.min(1, value));\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\nvar pipe = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\nvar noop = () => void 0;\nvar isObject = (v) => typeof v === \"object\" && v !== null;\nvar MAX_Z_INDEX = 2147483647;\nvar dataAttr = (guard) => guard ? \"\" : void 0;\nvar ariaAttr = (guard) => guard ? \"true\" : void 0;\n\n// src/node.ts\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar isHTMLElement = (el) => isObject(el) && el.nodeType === ELEMENT_NODE && typeof el.nodeName === \"string\";\nvar isDocument = (el) => isObject(el) && el.nodeType === DOCUMENT_NODE;\nvar isWindow = (el) => isObject(el) && el === el.window;\nvar isVisualViewport = (el) => isObject(el) && el.constructor.name === \"VisualViewport\";\nvar getNodeName = (node) => {\n  if (isHTMLElement(node)) return node.localName || \"\";\n  return \"#document\";\n};\nfunction isRootElement(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nvar isNode = (el) => isObject(el) && el.nodeType !== void 0;\nvar isShadowRoot = (el) => isNode(el) && el.nodeType === DOCUMENT_FRAGMENT_NODE && \"host\" in el;\nvar isInputElement = (el) => isHTMLElement(el) && el.localName === \"input\";\nvar isAnchorElement = (el) => !!el?.matches(\"a[href]\");\nvar isElementVisible = (el) => {\n  if (!isHTMLElement(el)) return false;\n  return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;\n};\nvar TEXTAREA_SELECT_REGEX = /(textarea|select)/;\nfunction isEditableElement(el) {\n  if (el == null || !isHTMLElement(el)) return false;\n  try {\n    return isInputElement(el) && el.selectionStart != null || TEXTAREA_SELECT_REGEX.test(el.localName) || el.isContentEditable || el.getAttribute(\"contenteditable\") === \"true\" || el.getAttribute(\"contenteditable\") === \"\";\n  } catch {\n    return false;\n  }\n}\nfunction contains(parent, child) {\n  if (!parent || !child) return false;\n  if (!isHTMLElement(parent) || !isHTMLElement(child)) return false;\n  const rootNode = child.getRootNode?.();\n  if (parent === child) return true;\n  if (parent.contains(child)) return true;\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) return true;\n      next = next.parentNode || next.host;\n    }\n  }\n  return false;\n}\nfunction getDocument(el) {\n  if (isDocument(el)) return el;\n  if (isWindow(el)) return el.document;\n  return el?.ownerDocument ?? document;\n}\nfunction getDocumentElement(el) {\n  return getDocument(el).documentElement;\n}\nfunction getWindow(el) {\n  if (isShadowRoot(el)) return getWindow(el.host);\n  if (isDocument(el)) return el.defaultView ?? window;\n  if (isHTMLElement(el)) return el.ownerDocument?.defaultView ?? window;\n  return window;\n}\nfunction getActiveElement(rootNode) {\n  let activeElement = rootNode.activeElement;\n  while (activeElement?.shadowRoot) {\n    const el = activeElement.shadowRoot.activeElement;\n    if (el === activeElement) break;\n    else activeElement = el;\n  }\n  return activeElement;\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") return node;\n  const result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\n// src/computed-style.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    styleCache.set(el, getWindow(el).getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\n\n// src/data-url.ts\nfunction getDataUrl(svg, opts) {\n  const { type, quality = 0.92, background } = opts;\n  if (!svg) throw new Error(\"[zag-js > getDataUrl]: Could not find the svg element\");\n  const win = getWindow(svg);\n  const doc = win.document;\n  const svgBounds = svg.getBoundingClientRect();\n  const svgClone = svg.cloneNode(true);\n  if (!svgClone.hasAttribute(\"viewBox\")) {\n    svgClone.setAttribute(\"viewBox\", `0 0 ${svgBounds.width} ${svgBounds.height}`);\n  }\n  const serializer = new win.XMLSerializer();\n  const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(svgClone);\n  const svgString = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n  if (type === \"image/svg+xml\") {\n    return Promise.resolve(svgString).then((str) => {\n      svgClone.remove();\n      return str;\n    });\n  }\n  const dpr = win.devicePixelRatio || 1;\n  const canvas = doc.createElement(\"canvas\");\n  const image = new win.Image();\n  image.src = svgString;\n  canvas.width = svgBounds.width * dpr;\n  canvas.height = svgBounds.height * dpr;\n  const context = canvas.getContext(\"2d\");\n  if (type === \"image/jpeg\" || background) {\n    context.fillStyle = background || \"white\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  return new Promise((resolve) => {\n    image.onload = () => {\n      context?.drawImage(image, 0, 0, canvas.width, canvas.height);\n      resolve(canvas.toDataURL(type, quality));\n      svgClone.remove();\n    };\n  });\n}\n\n// src/platform.ts\nvar isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nfunction getUserAgent() {\n  const ua2 = navigator.userAgentData;\n  if (ua2 && Array.isArray(ua2.brands)) {\n    return ua2.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \");\n  }\n  return navigator.userAgent;\n}\nvar pt = (v) => isDom() && v.test(getPlatform());\nvar ua = (v) => isDom() && v.test(getUserAgent());\nvar vn = (v) => isDom() && v.test(navigator.vendor);\nvar isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nvar isIPhone = () => pt(/^iPhone/i);\nvar isIPad = () => pt(/^iPad/i) || isMac() && navigator.maxTouchPoints > 1;\nvar isIos = () => isIPhone() || isIPad();\nvar isApple = () => isMac() || isIos();\nvar isMac = () => pt(/^Mac/i);\nvar isSafari = () => isApple() && vn(/apple/i);\nvar isFirefox = () => ua(/Firefox/i);\nvar isChrome = () => ua(/Chrome/i);\nvar isWebKit = () => ua(/AppleWebKit/i) && !isChrome();\nvar isAndroid = () => ua(/Android/i);\n\n// src/event.ts\nfunction getBeforeInputValue(event) {\n  const { selectionStart, selectionEnd, value } = event.currentTarget;\n  return value.slice(0, selectionStart) + event.data + value.slice(selectionEnd);\n}\nfunction getComposedPath(event) {\n  return event.composedPath?.() ?? event.nativeEvent?.composedPath?.();\n}\nfunction getEventTarget(event) {\n  const composedPath = getComposedPath(event);\n  return composedPath?.[0] ?? event.target;\n}\nvar isSelfTarget = (event) => {\n  return contains(event.currentTarget, getEventTarget(event));\n};\nfunction isOpeningInNewTab(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const validElement = element.matches(\"a[href], button[type='submit'], input[type='submit']\");\n  if (!validElement) return false;\n  const isMiddleClick = event.button === 1;\n  const isModKeyClick = isCtrlOrMetaKey(event);\n  return isMiddleClick || isModKeyClick;\n}\nfunction isDownloadingEvent(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const localName = element.localName;\n  if (!event.altKey) return false;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isComposingEvent(event) {\n  return getNativeEvent(event).isComposing || event.keyCode === 229;\n}\nfunction isKeyboardClick(e) {\n  return e.detail === 0 || e.clientX === 0 && e.clientY === 0;\n}\nfunction isCtrlOrMetaKey(e) {\n  if (isMac()) return e.metaKey;\n  return e.ctrlKey;\n}\nfunction isPrintableKey(e) {\n  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;\n}\nfunction isVirtualPointerEvent(e) {\n  return e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === \"mouse\";\n}\nfunction isVirtualClick(e) {\n  if (e.pointerType === \"\" && e.isTrusted) return true;\n  if (isAndroid() && e.pointerType) {\n    return e.type === \"click\" && e.buttons === 1;\n  }\n  return e.detail === 0 && !e.pointerType;\n}\nvar isLeftClick = (e) => e.button === 0;\nvar isContextMenuEvent = (e) => {\n  return e.button === 2 || isMac() && e.ctrlKey && e.button === 0;\n};\nvar isModifierKey = (e) => e.ctrlKey || e.altKey || e.metaKey;\nvar isTouchEvent = (event) => \"touches\" in event && event.touches.length > 0;\nvar keyMap = {\n  Up: \"ArrowUp\",\n  Down: \"ArrowDown\",\n  Esc: \"Escape\",\n  \" \": \"Space\",\n  \",\": \"Comma\",\n  Left: \"ArrowLeft\",\n  Right: \"ArrowRight\"\n};\nvar rtlKeyMap = {\n  ArrowLeft: \"ArrowRight\",\n  ArrowRight: \"ArrowLeft\"\n};\nfunction getEventKey(event, options = {}) {\n  const { dir = \"ltr\", orientation = \"horizontal\" } = options;\n  let key = event.key;\n  key = keyMap[key] ?? key;\n  const isRtl = dir === \"rtl\" && orientation === \"horizontal\";\n  if (isRtl && key in rtlKeyMap) key = rtlKeyMap[key];\n  return key;\n}\nfunction getNativeEvent(event) {\n  return event.nativeEvent ?? event;\n}\nvar pageKeys = /* @__PURE__ */ new Set([\"PageUp\", \"PageDown\"]);\nvar arrowKeys = /* @__PURE__ */ new Set([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"]);\nfunction getEventStep(event) {\n  if (event.ctrlKey || event.metaKey) {\n    return 0.1;\n  } else {\n    const isPageKey = pageKeys.has(event.key);\n    const isSkipKey = isPageKey || event.shiftKey && arrowKeys.has(event.key);\n    return isSkipKey ? 10 : 1;\n  }\n}\nfunction getEventPoint(event, type = \"client\") {\n  const point = isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n  return { x: point[`${type}X`], y: point[`${type}Y`] };\n}\nvar addDomEvent = (target, eventName, handler, options) => {\n  const node = typeof target === \"function\" ? target() : target;\n  node?.addEventListener(eventName, handler, options);\n  return () => {\n    node?.removeEventListener(eventName, handler, options);\n  };\n};\n\n// src/form.ts\nfunction getDescriptor(el, options) {\n  const { type = \"HTMLInputElement\", property = \"value\" } = options;\n  const proto = getWindow(el)[type].prototype;\n  return Object.getOwnPropertyDescriptor(proto, property) ?? {};\n}\nfunction getElementType(el) {\n  if (el.localName === \"input\") return \"HTMLInputElement\";\n  if (el.localName === \"textarea\") return \"HTMLTextAreaElement\";\n  if (el.localName === \"select\") return \"HTMLSelectElement\";\n}\nfunction setElementValue(el, value, property = \"value\") {\n  if (!el) return;\n  const type = getElementType(el);\n  if (type) {\n    const descriptor = getDescriptor(el, { type, property });\n    descriptor.set?.call(el, value);\n  }\n  el.setAttribute(property, value);\n}\nfunction setElementChecked(el, checked) {\n  if (!el) return;\n  const descriptor = getDescriptor(el, { type: \"HTMLInputElement\", property: \"checked\" });\n  descriptor.set?.call(el, checked);\n  if (checked) el.setAttribute(\"checked\", \"\");\n  else el.removeAttribute(\"checked\");\n}\nfunction dispatchInputValueEvent(el, options) {\n  const { value, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementValue(el, `${value}`);\n  el.dispatchEvent(new win.Event(\"input\", { bubbles }));\n}\nfunction dispatchInputCheckedEvent(el, options) {\n  const { checked, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementChecked(el, checked);\n  el.dispatchEvent(new win.Event(\"click\", { bubbles }));\n}\nfunction getClosestForm(el) {\n  return isFormElement(el) ? el.form : el.closest(\"form\");\n}\nfunction isFormElement(el) {\n  return el.matches(\"textarea, input, select, button\");\n}\nfunction trackFormReset(el, callback) {\n  if (!el) return;\n  const form = getClosestForm(el);\n  const onReset = (e) => {\n    if (e.defaultPrevented) return;\n    callback();\n  };\n  form?.addEventListener(\"reset\", onReset, { passive: true });\n  return () => form?.removeEventListener(\"reset\", onReset);\n}\nfunction trackFieldsetDisabled(el, callback) {\n  const fieldset = el?.closest(\"fieldset\");\n  if (!fieldset) return;\n  callback(fieldset.disabled);\n  const win = getWindow(fieldset);\n  const obs = new win.MutationObserver(() => callback(fieldset.disabled));\n  obs.observe(fieldset, {\n    attributes: true,\n    attributeFilter: [\"disabled\"]\n  });\n  return () => obs.disconnect();\n}\nfunction trackFormControl(el, options) {\n  if (!el) return;\n  const { onFieldsetDisabledChange, onFormReset } = options;\n  const cleanups = [trackFormReset(el, onFormReset), trackFieldsetDisabled(el, onFieldsetDisabledChange)];\n  return () => cleanups.forEach((cleanup) => cleanup?.());\n}\n\n// src/tabbable.ts\nvar isFrame = (el) => isHTMLElement(el) && el.tagName === \"IFRAME\";\nvar hasTabIndex = (el) => !Number.isNaN(parseInt(el.getAttribute(\"tabindex\") || \"0\", 10));\nvar hasNegativeTabIndex = (el) => parseInt(el.getAttribute(\"tabindex\") || \"0\", 10) < 0;\nvar focusableSelector = \"input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type\";\nvar getFocusables = (container, includeContainer = false) => {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const include = includeContainer == true || includeContainer == \"if-empty\" && elements.length === 0;\n  if (include && isHTMLElement(container) && isFocusable(container)) {\n    elements.unshift(container);\n  }\n  const focusableElements = elements.filter(isFocusable);\n  focusableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      focusableElements.splice(i, 1, ...getFocusables(frameBody));\n    }\n  });\n  return focusableElements;\n};\nfunction isFocusable(element) {\n  if (!element || element.closest(\"[inert]\")) return false;\n  return element.matches(focusableSelector) && isElementVisible(element);\n}\nfunction getFirstFocusable(container, includeContainer) {\n  const [first] = getFocusables(container, includeContainer);\n  return first || null;\n}\nfunction getTabbables(container, includeContainer) {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const tabbableElements = elements.filter(isTabbable);\n  if (includeContainer && isTabbable(container)) {\n    tabbableElements.unshift(container);\n  }\n  tabbableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      const allFrameTabbable = getTabbables(frameBody);\n      tabbableElements.splice(i, 1, ...allFrameTabbable);\n    }\n  });\n  if (!tabbableElements.length && includeContainer) {\n    return elements;\n  }\n  return tabbableElements;\n}\nfunction isTabbable(el) {\n  if (el != null && el.tabIndex > 0) return true;\n  return isFocusable(el) && !hasNegativeTabIndex(el);\n}\nfunction getFirstTabbable(container, includeContainer) {\n  const [first] = getTabbables(container, includeContainer);\n  return first || null;\n}\nfunction getLastTabbable(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  return elements[elements.length - 1] || null;\n}\nfunction getTabbableEdges(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  const first = elements[0] || null;\n  const last = elements[elements.length - 1] || null;\n  return [first, last];\n}\nfunction getNextTabbable(container, current) {\n  const tabbables = getTabbables(container);\n  const doc = container?.ownerDocument || document;\n  const currentElement = current ?? doc.activeElement;\n  if (!currentElement) return null;\n  const index = tabbables.indexOf(currentElement);\n  return tabbables[index + 1] || null;\n}\nfunction getTabIndex(node) {\n  if (node.tabIndex < 0) {\n    if ((/^(audio|video|details)$/.test(node.localName) || isEditableElement(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n}\n\n// src/initial-focus.ts\nfunction getInitialFocus(options) {\n  const { root, getInitialEl, filter, enabled = true } = options;\n  if (!enabled) return;\n  let node = null;\n  node || (node = typeof getInitialEl === \"function\" ? getInitialEl() : getInitialEl);\n  node || (node = root?.querySelector(\"[data-autofocus],[autofocus]\"));\n  if (!node) {\n    const tabbables = getTabbables(root);\n    node = filter ? tabbables.filter(filter)[0] : tabbables[0];\n  }\n  return node || root || void 0;\n}\nfunction isValidTabEvent(event) {\n  const container = event.currentTarget;\n  if (!container) return false;\n  const [firstTabbable, lastTabbable] = getTabbableEdges(container);\n  const doc = container.ownerDocument || document;\n  if (doc.activeElement === firstTabbable && event.shiftKey) return false;\n  if (doc.activeElement === lastTabbable && !event.shiftKey) return false;\n  if (!firstTabbable && !lastTabbable) return false;\n  return true;\n}\n\n// src/raf.ts\nfunction nextTick(fn) {\n  const set = /* @__PURE__ */ new Set();\n  function raf2(fn2) {\n    const id = globalThis.requestAnimationFrame(fn2);\n    set.add(() => globalThis.cancelAnimationFrame(id));\n  }\n  raf2(() => raf2(fn));\n  return function cleanup() {\n    set.forEach((fn2) => fn2());\n  };\n}\nfunction raf(fn) {\n  let cleanup;\n  const id = globalThis.requestAnimationFrame(() => {\n    cleanup = fn();\n  });\n  return () => {\n    globalThis.cancelAnimationFrame(id);\n    cleanup?.();\n  };\n}\nfunction queueBeforeEvent(el, type, cb) {\n  const cancelTimer = raf(() => {\n    el.removeEventListener(type, exec, true);\n    cb();\n  });\n  const exec = () => {\n    cancelTimer();\n    cb();\n  };\n  el.addEventListener(type, exec, { once: true, capture: true });\n  return cancelTimer;\n}\n\n// src/mutation-observer.ts\nfunction observeAttributesImpl(node, options) {\n  if (!node) return;\n  const { attributes, callback: fn } = options;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver((changes) => {\n    for (const change of changes) {\n      if (change.type === \"attributes\" && change.attributeName && attributes.includes(change.attributeName)) {\n        fn(change);\n      }\n    }\n  });\n  obs.observe(node, { attributes: true, attributeFilter: attributes });\n  return () => obs.disconnect();\n}\nfunction observeAttributes(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(observeAttributesImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction observeChildrenImpl(node, options) {\n  const { callback: fn } = options;\n  if (!node) return;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver(fn);\n  obs.observe(node, { childList: true, subtree: true });\n  return () => obs.disconnect();\n}\nfunction observeChildren(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(observeChildrenImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/navigate.ts\nfunction clickIfLink(el) {\n  const click = () => {\n    const win = getWindow(el);\n    el.dispatchEvent(new win.MouseEvent(\"click\"));\n  };\n  if (isFirefox()) {\n    queueBeforeEvent(el, \"keyup\", click);\n  } else {\n    queueMicrotask(click);\n  }\n}\n\n// src/overflow.ts\nfunction getNearestOverflowAncestor(el) {\n  const parentNode = getParentNode(el);\n  if (isRootElement(parentNode)) return getDocument(parentNode).body;\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(el, list = []) {\n  const scrollableAncestor = getNearestOverflowAncestor(el);\n  const isBody = scrollableAncestor === el.ownerDocument.body;\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, []));\n}\nvar getElementRect = (el) => {\n  if (isHTMLElement(el)) return el.getBoundingClientRect();\n  if (isVisualViewport(el)) return { top: 0, left: 0, bottom: el.height, right: el.width };\n  return { top: 0, left: 0, bottom: el.innerHeight, right: el.innerWidth };\n};\nfunction isInView(el, ancestor) {\n  if (!isHTMLElement(el)) return true;\n  const ancestorRect = getElementRect(ancestor);\n  const elRect = el.getBoundingClientRect();\n  return elRect.top >= ancestorRect.top && elRect.left >= ancestorRect.left && elRect.bottom <= ancestorRect.bottom && elRect.right <= ancestorRect.right;\n}\nvar OVERFLOW_RE = /auto|scroll|overlay|hidden|clip/;\nvar nonOverflowValues = /* @__PURE__ */ new Set([\"inline\", \"contents\"]);\nfunction isOverflowElement(el) {\n  const win = getWindow(el);\n  const { overflow, overflowX, overflowY, display } = win.getComputedStyle(el);\n  return OVERFLOW_RE.test(overflow + overflowY + overflowX) && !nonOverflowValues.has(display);\n}\nfunction isScrollable(el) {\n  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;\n}\nfunction scrollIntoView(el, options) {\n  const { rootEl, ...scrollOptions } = options || {};\n  if (!el || !rootEl) return;\n  if (!isOverflowElement(rootEl) || !isScrollable(rootEl)) return;\n  el.scrollIntoView(scrollOptions);\n}\nfunction getScrollPosition(element) {\n  if (isHTMLElement(element)) {\n    return { scrollLeft: element.scrollLeft, scrollTop: element.scrollTop };\n  }\n  return { scrollLeft: element.scrollX, scrollTop: element.scrollY };\n}\n\n// src/point.ts\nfunction getRelativePoint(point, element) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  const offset = { x: point.x - left, y: point.y - top };\n  const percent = { x: clamp(offset.x / width), y: clamp(offset.y / height) };\n  function getPercentValue(options = {}) {\n    const { dir = \"ltr\", orientation = \"horizontal\", inverted } = options;\n    const invertX = typeof inverted === \"object\" ? inverted.x : inverted;\n    const invertY = typeof inverted === \"object\" ? inverted.y : inverted;\n    if (orientation === \"horizontal\") {\n      return dir === \"rtl\" || invertX ? 1 - percent.x : percent.x;\n    }\n    return invertY ? 1 - percent.y : percent.y;\n  }\n  return { offset, percent, getPercentValue };\n}\n\n// src/pointer-lock.ts\nfunction requestPointerLock(doc, fn) {\n  const body = doc.body;\n  const supported = \"pointerLockElement\" in doc || \"mozPointerLockElement\" in doc;\n  const isLocked = () => !!doc.pointerLockElement;\n  function onPointerChange() {\n    fn?.(isLocked());\n  }\n  function onPointerError(event) {\n    if (isLocked()) fn?.(false);\n    console.error(\"PointerLock error occurred:\", event);\n    doc.exitPointerLock();\n  }\n  if (!supported) return;\n  try {\n    body.requestPointerLock();\n  } catch {\n  }\n  const cleanup = [\n    addDomEvent(doc, \"pointerlockchange\", onPointerChange, false),\n    addDomEvent(doc, \"pointerlockerror\", onPointerError, false)\n  ];\n  return () => {\n    cleanup.forEach((cleanup2) => cleanup2());\n    doc.exitPointerLock();\n  };\n}\n\n// src/text-selection.ts\nvar state = \"default\";\nvar userSelect = \"\";\nvar elementMap = /* @__PURE__ */ new WeakMap();\nfunction disableTextSelectionImpl(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect;\n      rootEl.style.webkitUserSelect = \"none\";\n    }\n    state = \"disabled\";\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n  return () => restoreTextSelection({ target, doc: docNode });\n}\nfunction restoreTextSelection(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state !== \"disabled\") return;\n    state = \"restoring\";\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\";\n          }\n          userSelect = \"\";\n          state = \"default\";\n        }\n      });\n    }, 300);\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target);\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\";\n      }\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\");\n      }\n      elementMap.delete(target);\n    }\n  }\n}\nfunction disableTextSelection(options = {}) {\n  const { defer, target, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target;\n      cleanups.push(disableTextSelectionImpl({ ...restOptions, target: node }));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/pointer-move.ts\nfunction trackPointerMove(doc, handlers) {\n  const { onPointerMove, onPointerUp } = handlers;\n  const handleMove = (event) => {\n    const point = getEventPoint(event);\n    const distance = Math.sqrt(point.x ** 2 + point.y ** 2);\n    const moveBuffer = event.pointerType === \"touch\" ? 10 : 5;\n    if (distance < moveBuffer) return;\n    if (event.pointerType === \"mouse\" && event.button === 0) {\n      onPointerUp();\n      return;\n    }\n    onPointerMove({ point, event });\n  };\n  const cleanups = [\n    addDomEvent(doc, \"pointermove\", handleMove, false),\n    addDomEvent(doc, \"pointerup\", onPointerUp, false),\n    addDomEvent(doc, \"pointercancel\", onPointerUp, false),\n    addDomEvent(doc, \"contextmenu\", onPointerUp, false),\n    disableTextSelection({ doc })\n  ];\n  return () => {\n    cleanups.forEach((cleanup) => cleanup());\n  };\n}\n\n// src/press.ts\nfunction trackPress(options) {\n  const {\n    pointerNode,\n    keyboardNode = pointerNode,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isValidKey = (e) => e.key === \"Enter\"\n  } = options;\n  if (!pointerNode) return noop;\n  const win = getWindow(pointerNode);\n  const doc = getDocument(pointerNode);\n  let removeStartListeners = noop;\n  let removeEndListeners = noop;\n  let removeAccessibleListeners = noop;\n  const getInfo = (event) => ({\n    point: getEventPoint(event),\n    event\n  });\n  function startPress(event) {\n    onPressStart?.(getInfo(event));\n  }\n  function cancelPress(event) {\n    onPressEnd?.(getInfo(event));\n  }\n  const startPointerPress = (startEvent) => {\n    removeEndListeners();\n    const endPointerPress = (endEvent) => {\n      const target = getEventTarget(endEvent);\n      if (contains(pointerNode, target)) {\n        onPress?.(getInfo(endEvent));\n      } else {\n        onPressEnd?.(getInfo(endEvent));\n      }\n    };\n    const removePointerUpListener = addDomEvent(win, \"pointerup\", endPointerPress, { passive: !onPress, once: true });\n    const removePointerCancelListener = addDomEvent(win, \"pointercancel\", cancelPress, {\n      passive: !onPressEnd,\n      once: true\n    });\n    removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n    if (doc.activeElement === keyboardNode && startEvent.pointerType === \"mouse\") {\n      startEvent.preventDefault();\n    }\n    startPress(startEvent);\n  };\n  const removePointerListener = addDomEvent(pointerNode, \"pointerdown\", startPointerPress, { passive: !onPressStart });\n  const removeFocusListener = addDomEvent(keyboardNode, \"focus\", startAccessiblePress);\n  removeStartListeners = pipe(removePointerListener, removeFocusListener);\n  function startAccessiblePress() {\n    const handleKeydown = (keydownEvent) => {\n      if (!isValidKey(keydownEvent)) return;\n      const handleKeyup = (keyupEvent) => {\n        if (!isValidKey(keyupEvent)) return;\n        const evt2 = new win.PointerEvent(\"pointerup\");\n        const info = getInfo(evt2);\n        onPress?.(info);\n        onPressEnd?.(info);\n      };\n      removeEndListeners();\n      removeEndListeners = addDomEvent(keyboardNode, \"keyup\", handleKeyup);\n      const evt = new win.PointerEvent(\"pointerdown\");\n      startPress(evt);\n    };\n    const handleBlur = () => {\n      const evt = new win.PointerEvent(\"pointercancel\");\n      cancelPress(evt);\n    };\n    const removeKeydownListener = addDomEvent(keyboardNode, \"keydown\", handleKeydown);\n    const removeBlurListener = addDomEvent(keyboardNode, \"blur\", handleBlur);\n    removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n  }\n  return () => {\n    removeStartListeners();\n    removeEndListeners();\n    removeAccessibleListeners();\n  };\n}\n\n// src/proxy-tab-focus.ts\nfunction proxyTabFocusImpl(container, options = {}) {\n  const { triggerElement, onFocus, onFocusEnter } = options;\n  const doc = container?.ownerDocument || document;\n  const body = doc.body;\n  function onKeyDown(event) {\n    if (event.key !== \"Tab\") return;\n    let elementToFocus = null;\n    const [firstTabbable, lastTabbable] = getTabbableEdges(container, true);\n    const nextTabbableAfterTrigger = getNextTabbable(body, triggerElement);\n    const noTabbableElements = !firstTabbable && !lastTabbable;\n    if (event.shiftKey && nextTabbableAfterTrigger === doc.activeElement) {\n      onFocusEnter?.();\n      elementToFocus = lastTabbable;\n    } else if (event.shiftKey && (doc.activeElement === firstTabbable || noTabbableElements)) {\n      elementToFocus = triggerElement;\n    } else if (!event.shiftKey && doc.activeElement === triggerElement) {\n      onFocusEnter?.();\n      elementToFocus = firstTabbable;\n    } else if (!event.shiftKey && (doc.activeElement === lastTabbable || noTabbableElements)) {\n      elementToFocus = nextTabbableAfterTrigger;\n    }\n    if (!elementToFocus) return;\n    event.preventDefault();\n    if (typeof onFocus === \"function\") {\n      onFocus(elementToFocus);\n    } else {\n      elementToFocus.focus();\n    }\n  }\n  return addDomEvent(doc, \"keydown\", onKeyDown, true);\n}\nfunction proxyTabFocus(container, options) {\n  const { defer, triggerElement, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof container === \"function\" ? container() : container;\n      const trigger = typeof triggerElement === \"function\" ? triggerElement() : triggerElement;\n      cleanups.push(proxyTabFocusImpl(node, { triggerElement: trigger, ...restOptions }));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/query.ts\nfunction queryAll(root, selector) {\n  return Array.from(root?.querySelectorAll(selector) ?? []);\n}\nfunction query(root, selector) {\n  return root?.querySelector(selector) ?? null;\n}\nvar defaultItemToId = (v) => v.id;\nfunction itemById(v, id, itemToId = defaultItemToId) {\n  return v.find((item) => itemToId(item) === id);\n}\nfunction indexOfId(v, id, itemToId = defaultItemToId) {\n  const item = itemById(v, id, itemToId);\n  return item ? v.indexOf(item) : -1;\n}\nfunction nextById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);\n  return v[idx];\n}\nfunction prevById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  if (idx === -1) return loop ? v[v.length - 1] : null;\n  idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);\n  return v[idx];\n}\n\n// src/resize-observer.ts\nfunction trackElementRect(elements, options) {\n  const { onEntry, measure, box = \"border-box\" } = options;\n  const elems = (Array.isArray(elements) ? elements : [elements]).filter(isHTMLElement);\n  const win = getWindow(elems[0]);\n  const trigger = (entries) => {\n    const rects = elems.map((el) => measure(el));\n    onEntry({ rects, entries });\n  };\n  trigger([]);\n  const obs = new win.ResizeObserver(trigger);\n  elems.forEach((el) => obs.observe(el, { box }));\n  return () => obs.disconnect();\n}\n\n// src/scope.ts\nfunction createScope(methods) {\n  const dom = {\n    getRootNode: (ctx) => ctx.getRootNode?.() ?? document,\n    getDoc: (ctx) => getDocument(dom.getRootNode(ctx)),\n    getWin: (ctx) => dom.getDoc(ctx).defaultView ?? window,\n    getActiveElement: (ctx) => getActiveElement(dom.getRootNode(ctx)),\n    isActiveElement: (ctx, elem) => elem === dom.getActiveElement(ctx),\n    getById: (ctx, id) => dom.getRootNode(ctx).getElementById(id),\n    setValue: (elem, value) => {\n      if (elem == null || value == null) return;\n      setElementValue(elem, value.toString());\n    }\n  };\n  return { ...dom, ...methods };\n}\n\n// src/searchable.ts\nvar sanitize = (str) => str.split(\"\").map((char) => {\n  const code = char.charCodeAt(0);\n  if (code > 0 && code < 128) return char;\n  if (code >= 128 && code <= 255) return `/x${code.toString(16)}`.replace(\"/\", \"\\\\\");\n  return \"\";\n}).join(\"\").trim();\nvar getValueText = (el) => {\n  return sanitize(el.dataset?.valuetext ?? el.textContent ?? \"\");\n};\nvar match = (valueText, query2) => {\n  return valueText.trim().toLowerCase().startsWith(query2.toLowerCase());\n};\nfunction getByText(v, text, currentId, itemToId = defaultItemToId) {\n  const index = currentId ? indexOfId(v, currentId, itemToId) : -1;\n  let items = currentId ? wrap(v, index) : v;\n  const isSingleKey = text.length === 1;\n  if (isSingleKey) {\n    items = items.filter((item) => itemToId(item) !== currentId);\n  }\n  return items.find((item) => match(getValueText(item), text));\n}\n\n// src/set.ts\nfunction setAttribute(el, attr, v) {\n  const prev = el.getAttribute(attr);\n  const exists = prev != null;\n  el.setAttribute(attr, v);\n  return () => {\n    if (!exists) {\n      el.removeAttribute(attr);\n    } else {\n      el.setAttribute(attr, prev);\n    }\n  };\n}\nfunction setProperty(el, prop, v) {\n  const exists = prop in el;\n  const prev = el[prop];\n  el[prop] = v;\n  return () => {\n    if (!exists) {\n      delete el[prop];\n    } else {\n      el[prop] = prev;\n    }\n  };\n}\nfunction setStyle(el, style) {\n  if (!el) return noop;\n  const prev = Object.keys(style).reduce((acc, key) => {\n    acc[key] = el.style.getPropertyValue(key);\n    return acc;\n  }, {});\n  Object.assign(el.style, style);\n  return () => {\n    Object.assign(el.style, prev);\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  };\n}\nfunction setStyleProperty(el, prop, value) {\n  if (!el) return noop;\n  const prev = el.style.getPropertyValue(prop);\n  el.style.setProperty(prop, value);\n  return () => {\n    el.style.setProperty(prop, prev);\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  };\n}\n\n// src/typeahead.ts\nfunction getByTypeaheadImpl(baseItems, options) {\n  const { state: state2, activeId, key, timeout = 350, itemToId } = options;\n  const search = state2.keysSoFar + key;\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const query2 = isRepeated ? search[0] : search;\n  let items = baseItems.slice();\n  const next = getByText(items, query2, activeId, itemToId);\n  function cleanup() {\n    clearTimeout(state2.timer);\n    state2.timer = -1;\n  }\n  function update(value) {\n    state2.keysSoFar = value;\n    cleanup();\n    if (value !== \"\") {\n      state2.timer = +setTimeout(() => {\n        update(\"\");\n        cleanup();\n      }, timeout);\n    }\n  }\n  update(search);\n  return next;\n}\nvar getByTypeahead = /* @__PURE__ */ Object.assign(getByTypeaheadImpl, {\n  defaultOptions: { keysSoFar: \"\", timer: -1 },\n  isValidEvent: isValidTypeaheadEvent\n});\nfunction isValidTypeaheadEvent(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\n\n// src/visual-viewport.ts\nfunction trackVisualViewport(doc, fn) {\n  const win = doc?.defaultView || window;\n  const onResize = () => {\n    fn?.(getViewportSize(win));\n  };\n  onResize();\n  return addDomEvent(win.visualViewport ?? win, \"resize\", onResize);\n}\nfunction getViewportSize(win) {\n  return {\n    width: win.visualViewport?.width || win.innerWidth,\n    height: win.visualViewport?.height || win.innerHeight\n  };\n}\n\n// src/visually-hidden.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0 0 0 0)\",\n  height: \"1px\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  padding: \"0\",\n  position: \"absolute\",\n  width: \"1px\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n};\nfunction setVisuallyHidden(el) {\n  Object.assign(el.style, visuallyHiddenStyle);\n}\n\n// src/wait-for.ts\nfunction waitForPromise(promise, controller, timeout) {\n  const { signal } = controller;\n  const wrappedPromise = new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(`Timeout of ${timeout}ms exceeded`));\n    }, timeout);\n    signal.addEventListener(\"abort\", () => {\n      clearTimeout(timeoutId);\n      reject(new Error(\"Promise aborted\"));\n    });\n    promise.then((result) => {\n      if (!signal.aborted) {\n        clearTimeout(timeoutId);\n        resolve(result);\n      }\n    }).catch((error) => {\n      if (!signal.aborted) {\n        clearTimeout(timeoutId);\n        reject(error);\n      }\n    });\n  });\n  const abort = () => controller.abort();\n  return [wrappedPromise, abort];\n}\nfunction waitForElement(target, options) {\n  const { timeout, rootNode } = options;\n  const win = getWindow(rootNode);\n  const doc = getDocument(rootNode);\n  const controller = new win.AbortController();\n  return waitForPromise(\n    new Promise((resolve) => {\n      const el = target();\n      if (el) {\n        resolve(el);\n        return;\n      }\n      const observer = new win.MutationObserver(() => {\n        const el2 = target();\n        if (el2 && el2.isConnected) {\n          observer.disconnect();\n          resolve(el2);\n        }\n      });\n      observer.observe(doc.body, {\n        childList: true,\n        subtree: true\n      });\n    }),\n    controller,\n    timeout\n  );\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/editable/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/editable/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/editable.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"editable\").parts(\n  \"root\",\n  \"area\",\n  \"label\",\n  \"preview\",\n  \"input\",\n  \"editTrigger\",\n  \"submitTrigger\",\n  \"cancelTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\n\n// src/editable.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `editable:${ctx.id}`;\nvar getAreaId = (ctx) => ctx.ids?.area ?? `editable:${ctx.id}:area`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `editable:${ctx.id}:label`;\nvar getPreviewId = (ctx) => ctx.ids?.preview ?? `editable:${ctx.id}:preview`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `editable:${ctx.id}:input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `editable:${ctx.id}:control`;\nvar getSubmitTriggerId = (ctx) => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`;\nvar getCancelTriggerId = (ctx) => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`;\nvar getEditTriggerId = (ctx) => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getPreviewEl = (ctx) => ctx.getById(getPreviewId(ctx));\nvar getSubmitTriggerEl = (ctx) => ctx.getById(getSubmitTriggerId(ctx));\nvar getCancelTriggerEl = (ctx) => ctx.getById(getCancelTriggerId(ctx));\nvar getEditTriggerEl = (ctx) => ctx.getById(getEditTriggerId(ctx));\n\n// src/editable.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, prop, scope, computed } = service;\n  const disabled = prop(\"disabled\");\n  const interactive = computed(\"isInteractive\");\n  const readOnly = prop(\"readOnly\");\n  const invalid = prop(\"invalid\");\n  const autoResize = prop(\"autoResize\");\n  const translations = prop(\"translations\");\n  const editing = state.matches(\"edit\");\n  const placeholderProp = prop(\"placeholder\");\n  const placeholder = typeof placeholderProp === \"string\" ? { edit: placeholderProp, preview: placeholderProp } : placeholderProp;\n  const value = context.get(\"value\");\n  const empty = value.trim() === \"\";\n  const valueText = empty ? placeholder?.preview ?? \"\" : value;\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2, src: \"setValue\" });\n    },\n    clearValue() {\n      send({ type: \"VALUE.SET\", value: \"\", src: \"clearValue\" });\n    },\n    edit() {\n      if (!interactive) return;\n      send({ type: \"EDIT\" });\n    },\n    cancel() {\n      if (!interactive) return;\n      send({ type: \"CANCEL\" });\n    },\n    submit() {\n      if (!interactive) return;\n      send({ type: \"SUBMIT\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: getAreaId(scope),\n        dir: prop(\"dir\"),\n        style: autoResize ? { display: \"inline-grid\" } : void 0,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: getLabelId(scope),\n        dir: prop(\"dir\"),\n        htmlFor: getInputId(scope),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        onClick() {\n          if (editing) return;\n          const previewEl = getPreviewEl(scope);\n          previewEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.input,\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        hidden: autoResize ? void 0 : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: prop(\"maxLength\"),\n        required: prop(\"required\"),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        defaultValue: value,\n        size: autoResize ? 1 : void 0,\n        onChange(event) {\n          send({\n            type: \"VALUE.SET\",\n            src: \"input.change\",\n            value: event.currentTarget.value\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const keyMap = {\n            Escape() {\n              send({ type: \"CANCEL\" });\n              event.preventDefault();\n            },\n            Enter(event2) {\n              if (!computed(\"submitOnEnter\")) return;\n              const { localName } = event2.currentTarget;\n              if (localName === \"textarea\") {\n                const submitMod = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isApple)() ? event2.metaKey : event2.ctrlKey;\n                if (!submitMod) return;\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                return;\n              }\n              if (localName === \"input\" && !event2.shiftKey && !event2.metaKey) {\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                event2.preventDefault();\n              }\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            exec(event);\n          }\n        },\n        style: autoResize ? {\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: !editing ? \"hidden\" : void 0\n        } : void 0\n      });\n    },\n    getPreviewProps() {\n      return normalize.element({\n        id: getPreviewId(scope),\n        ...parts.preview.attrs,\n        dir: prop(\"dir\"),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-label\": translations?.edit,\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        children: valueText,\n        hidden: autoResize ? void 0 : editing,\n        tabIndex: interactive ? 0 : void 0,\n        onClick() {\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"click\") return;\n          send({ type: \"EDIT\", src: \"click\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"focus\") return;\n          send({ type: \"EDIT\", src: \"focus\" });\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (prop(\"activationMode\") !== \"dblclick\") return;\n          send({ type: \"EDIT\", src: \"dblclick\" });\n        },\n        style: autoResize ? {\n          whiteSpace: \"pre\",\n          userSelect: \"none\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: editing ? \"hidden\" : void 0,\n          // in event the preview overflow's the parent element\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        } : void 0\n      });\n    },\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: getEditTriggerId(scope),\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"EDIT\", src: \"edit.click\" });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: getControlId(scope),\n        ...parts.control.attrs,\n        dir: prop(\"dir\")\n      });\n    },\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getSubmitTriggerId(scope),\n        \"aria-label\": translations?.submit,\n        hidden: !editing,\n        disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"SUBMIT\", src: \"submit.click\" });\n        }\n      });\n    },\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: prop(\"dir\"),\n        \"aria-label\": translations?.cancel,\n        id: getCancelTriggerId(scope),\n        hidden: !editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"CANCEL\", src: \"cancel.click\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      activationMode: \"focus\",\n      submitMode: \"both\",\n      defaultValue: \"\",\n      selectOnFocus: true,\n      ...props2,\n      translations: {\n        input: \"editable input\",\n        edit: \"edit\",\n        submit: \"submit\",\n        cancel: \"cancel\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const edit = prop(\"edit\") || prop(\"defaultEdit\");\n    return edit ? \"edit\" : \"preview\";\n  },\n  entry: [\"focusInputIfNeeded\"],\n  context: ({ bindable, prop }) => {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          return prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      previousValue: bindable(() => ({\n        defaultValue: \"\"\n      }))\n    };\n  },\n  watch({ track, action, context, prop }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"syncInputValue\"]);\n    });\n    track([() => prop(\"edit\")], () => {\n      action([\"toggleEditing\"]);\n    });\n  },\n  computed: {\n    submitOnEnter({ prop }) {\n      const submitMode = prop(\"submitMode\");\n      return submitMode === \"both\" || submitMode === \"enter\";\n    },\n    submitOnBlur({ prop }) {\n      const submitMode = prop(\"submitMode\");\n      return submitMode === \"both\" || submitMode === \"blur\";\n    },\n    isInteractive({ prop }) {\n      return !(prop(\"disabled\") || prop(\"readOnly\"));\n    }\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    }\n  },\n  states: {\n    preview: {\n      entry: [\"blurInputIfNeeded\"],\n      on: {\n        \"CONTROLLED.EDIT\": {\n          target: \"edit\",\n          actions: [\"setPreviousValue\", \"focusInput\"]\n        },\n        EDIT: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnEdit\"]\n          },\n          {\n            target: \"edit\",\n            actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"]\n          }\n        ]\n      }\n    },\n    edit: {\n      effects: [\"trackInteractOutside\"],\n      on: {\n        \"CONTROLLED.PREVIEW\": [\n          {\n            guard: \"isSubmitEvent\",\n            target: \"preview\",\n            actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n          }\n        ],\n        CANCEL: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnPreview\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\", \"invokeOnPreview\"]\n          }\n        ],\n        SUBMIT: [\n          {\n            guard: \"isEditControlled\",\n            actions: [\"invokeOnPreview\"]\n          },\n          {\n            target: \"preview\",\n            actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\", \"invokeOnPreview\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isEditControlled: ({ prop }) => prop(\"edit\") != void 0,\n      isSubmitEvent: ({ event }) => event.previousEvent?.type === \"SUBMIT\"\n    },\n    effects: {\n      trackInteractOutside({ send, scope, prop, computed }) {\n        return (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_3__.trackInteractOutside)(getInputEl(scope), {\n          exclude(target) {\n            const ignore = [getCancelTriggerEl(scope), getSubmitTriggerEl(scope)];\n            return ignore.some((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(el, target));\n          },\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            const { focusable } = event.detail;\n            send({\n              type: computed(\"submitOnBlur\") ? \"SUBMIT\" : \"CANCEL\",\n              src: \"interact-outside\",\n              focusable\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      restoreFocus({ event, scope, prop }) {\n        if (event.focusable) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const finalEl = prop(\"finalFocusEl\")?.() ?? getEditTriggerEl(scope);\n          finalEl?.focus({ preventScroll: true });\n        });\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      focusInputIfNeeded({ action, prop }) {\n        const edit = prop(\"edit\") || prop(\"defaultEdit\");\n        if (!edit) return;\n        action([\"focusInput\"]);\n      },\n      focusInput({ scope, prop }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const inputEl = getInputEl(scope);\n          if (!inputEl) return;\n          if (prop(\"selectOnFocus\")) {\n            inputEl.select();\n          } else {\n            inputEl.focus({ preventScroll: true });\n          }\n        });\n      },\n      invokeOnCancel({ prop, context }) {\n        const prev = context.get(\"previousValue\");\n        prop(\"onValueRevert\")?.({ value: prev });\n      },\n      invokeOnSubmit({ prop, context }) {\n        const value = context.get(\"value\");\n        prop(\"onValueCommit\")?.({ value });\n      },\n      invokeOnEdit({ prop }) {\n        prop(\"onEditChange\")?.({ edit: true });\n      },\n      invokeOnPreview({ prop }) {\n        prop(\"onEditChange\")?.({ edit: false });\n      },\n      toggleEditing({ prop, send, event }) {\n        send({\n          type: prop(\"edit\") ? \"CONTROLLED.EDIT\" : \"CONTROLLED.PREVIEW\",\n          previousEvent: event\n        });\n      },\n      syncInputValue({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, context.get(\"value\"));\n      },\n      setValue({ context, prop, event }) {\n        const max = prop(\"maxLength\");\n        const value = max != null ? event.value.slice(0, max) : event.value;\n        context.set(\"value\", value);\n      },\n      setPreviousValue({ context }) {\n        context.set(\"previousValue\", context.get(\"value\"));\n      },\n      revertValue({ context }) {\n        const value = context.get(\"previousValue\");\n        if (!value) return;\n        context.set(\"value\", value);\n      },\n      blurInputIfNeeded({ scope }) {\n        getInputEl(scope)?.blur();\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"activationMode\",\n  \"autoResize\",\n  \"dir\",\n  \"disabled\",\n  \"finalFocusEl\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"maxLength\",\n  \"name\",\n  \"onEditChange\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueCommit\",\n  \"onValueRevert\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"edit\",\n  \"defaultEdit\",\n  \"submitMode\",\n  \"translations\",\n  \"defaultValue\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/editable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/file-upload/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/file-utils */ \"(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/i18n-utils */ \"(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/file-upload.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"file-upload\").parts(\n  \"root\",\n  \"dropzone\",\n  \"item\",\n  \"itemDeleteTrigger\",\n  \"itemGroup\",\n  \"itemName\",\n  \"itemPreview\",\n  \"itemPreviewImage\",\n  \"itemSizeText\",\n  \"label\",\n  \"trigger\",\n  \"clearTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/file-upload.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `file:${ctx.id}`;\nvar getDropzoneId = (ctx) => ctx.ids?.dropzone ?? `file:${ctx.id}:dropzone`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `file:${ctx.id}:input`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `file:${ctx.id}:trigger`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `file:${ctx.id}:label`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `file:${ctx.id}:item:${id}`;\nvar getItemNameId = (ctx, id) => ctx.ids?.itemName?.(id) ?? `file:${ctx.id}:item-name:${id}`;\nvar getItemSizeTextId = (ctx, id) => ctx.ids?.itemSizeText?.(id) ?? `file:${ctx.id}:item-size:${id}`;\nvar getItemPreviewId = (ctx, id) => ctx.ids?.itemPreview?.(id) ?? `file:${ctx.id}:item-preview:${id}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar getDropzoneEl = (ctx) => ctx.getById(getDropzoneId(ctx));\nfunction isEventWithFiles(event) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n  if (!event.dataTransfer) return !!target && \"files\" in target;\n  return event.dataTransfer.types.some((type) => {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nfunction isFilesWithinRange(ctx, incomingCount, currentAcceptedFiles) {\n  const { prop, computed } = ctx;\n  if (!computed(\"multiple\") && incomingCount > 1) return false;\n  if (!computed(\"multiple\") && incomingCount + currentAcceptedFiles.length === 2) return true;\n  if (incomingCount + currentAcceptedFiles.length > prop(\"maxFiles\")) return false;\n  return true;\n}\nfunction getEventFiles(ctx, files, currentAcceptedFiles = [], currentRejectedFiles = []) {\n  const { prop, computed } = ctx;\n  const acceptedFiles = [];\n  const rejectedFiles = [];\n  const validateParams = {\n    acceptedFiles: currentAcceptedFiles,\n    rejectedFiles: currentRejectedFiles\n  };\n  files.forEach((file) => {\n    const [accepted, acceptError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileType)(file, computed(\"acceptAttr\"));\n    const [sizeMatch, sizeError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileSize)(file, prop(\"minFileSize\"), prop(\"maxFileSize\"));\n    const validateErrors = prop(\"validate\")?.(file, validateParams);\n    const valid = validateErrors ? validateErrors.length === 0 : true;\n    if (accepted && sizeMatch && valid) {\n      acceptedFiles.push(file);\n    } else {\n      const errors = [acceptError, sizeError];\n      if (!valid) errors.push(...validateErrors ?? []);\n      rejectedFiles.push({ file, errors: errors.filter(Boolean) });\n    }\n  });\n  if (!isFilesWithinRange(ctx, acceptedFiles.length, currentAcceptedFiles)) {\n    acceptedFiles.forEach((file) => {\n      rejectedFiles.push({ file, errors: [\"TOO_MANY_FILES\"] });\n    });\n    acceptedFiles.splice(0);\n  }\n  return {\n    acceptedFiles,\n    rejectedFiles\n  };\n}\nfunction setInputFiles(inputEl, files) {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(inputEl);\n  try {\n    if (\"DataTransfer\" in win) {\n      const dataTransfer = new win.DataTransfer();\n      files.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      inputEl.files = dataTransfer.files;\n    }\n  } catch {\n  }\n}\n\n// src/file-upload.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, computed, scope, context } = service;\n  const disabled = prop(\"disabled\");\n  const allowDrop = prop(\"allowDrop\");\n  const translations = prop(\"translations\");\n  const dragging = state.matches(\"dragging\");\n  const focused = state.matches(\"focused\") && !disabled;\n  return {\n    dragging,\n    focused,\n    disabled: !!disabled,\n    transforming: context.get(\"transforming\"),\n    openFilePicker() {\n      if (disabled) return;\n      send({ type: \"OPEN\" });\n    },\n    deleteFile(file) {\n      send({ type: \"FILE.DELETE\", file });\n    },\n    acceptedFiles: context.get(\"acceptedFiles\"),\n    rejectedFiles: context.get(\"rejectedFiles\"),\n    setFiles(files) {\n      send({ type: \"FILES.SET\", files, count: files.length });\n    },\n    clearRejectedFiles() {\n      send({ type: \"REJECTED_FILES.CLEAR\" });\n    },\n    clearFiles() {\n      send({ type: \"FILES.CLEAR\" });\n    },\n    getFileSize(file) {\n      return (0,_zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__.formatBytes)(file.size, prop(\"locale\"));\n    },\n    createFileUrl(file, cb) {\n      const win = scope.getWin();\n      const url = win.URL.createObjectURL(file);\n      cb(url);\n      return () => win.URL.revokeObjectURL(url);\n    },\n    setClipboardFiles(dt) {\n      if (disabled) return false;\n      const items = Array.from(dt?.items ?? []);\n      const files = items.reduce((acc, item) => {\n        if (item.kind !== \"file\") return acc;\n        const file = item.getAsFile();\n        if (!file) return acc;\n        return [...acc, file];\n      }, []);\n      if (!files.length) return false;\n      send({ type: \"FILES.SET\", files });\n      return true;\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging)\n      });\n    },\n    getDropzoneProps(props2 = {}) {\n      return normalize.element({\n        ...parts.dropzone.attrs,\n        dir: prop(\"dir\"),\n        id: getDropzoneId(scope),\n        tabIndex: disabled || props2.disableClick ? void 0 : 0,\n        role: props2.disableClick ? \"application\" : \"button\",\n        \"aria-label\": translations.dropzone,\n        \"aria-disabled\": disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onKeyDown(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (props2.disableClick) return;\n          if (event.key !== \"Enter\" && event.key !== \" \") return;\n          send({ type: \"DROPZONE.CLICK\", src: \"keydown\" });\n        },\n        onClick(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (props2.disableClick) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (event.currentTarget.localName === \"label\") {\n            event.preventDefault();\n          }\n          send({ type: \"DROPZONE.CLICK\" });\n        },\n        onDragOver(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          event.preventDefault();\n          event.stopPropagation();\n          try {\n            event.dataTransfer.dropEffect = \"copy\";\n          } catch {\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (!hasFiles) return;\n          const count = event.dataTransfer.items.length;\n          send({ type: \"DROPZONE.DRAG_OVER\", count });\n        },\n        onDragLeave(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"DROPZONE.DRAG_LEAVE\" });\n        },\n        onDrop(event) {\n          if (disabled) return;\n          if (allowDrop) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (disabled || !hasFiles) return;\n          (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getFileEntries)(event.dataTransfer.items, prop(\"directory\")).then((files) => {\n            send({ type: \"DROPZONE.DROP\", files: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.flatArray)(files) });\n          });\n        },\n        onFocus() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.FOCUS\" });\n        },\n        onBlur() {\n          if (disabled) return;\n          send({ type: \"DROPZONE.BLUR\" });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\")),\n        type: \"button\",\n        onClick(event) {\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getDropzoneEl(scope), event.currentTarget)) {\n            event.stopPropagation();\n          }\n          send({ type: \"OPEN\" });\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        tabIndex: -1,\n        disabled,\n        type: \"file\",\n        required: prop(\"required\"),\n        capture: prop(\"capture\"),\n        name: prop(\"name\"),\n        accept: computed(\"acceptAttr\"),\n        webkitdirectory: prop(\"directory\") ? \"\" : void 0,\n        multiple: computed(\"multiple\") || prop(\"maxFiles\") > 1,\n        onClick(event) {\n          event.stopPropagation();\n          event.currentTarget.value = \"\";\n        },\n        onInput(event) {\n          if (disabled) return;\n          const { files } = event.currentTarget;\n          send({ type: \"FILE.SELECT\", files: files ? Array.from(files) : [] });\n        },\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemNameProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemName.attrs,\n        dir: prop(\"dir\"),\n        id: getItemNameId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemSizeTextProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemSizeText.attrs,\n        dir: prop(\"dir\"),\n        id: getItemSizeTextId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        dir: prop(\"dir\"),\n        id: getItemPreviewId(scope, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewImageProps(props2) {\n      const { file, url } = props2;\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        throw new Error(\"Preview Image is only supported for image files\");\n      }\n      return normalize.img({\n        ...parts.itemPreviewImage.attrs,\n        alt: translations.itemPreview?.(file),\n        src: url,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const { file } = props2;\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-label\": translations.deleteFile?.(file),\n        onClick() {\n          if (disabled) return;\n          send({ type: \"FILE.DELETE\", file });\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled,\n        hidden: context.get(\"acceptedFiles\").length === 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: \"FILES.CLEAR\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      minFileSize: 0,\n      maxFileSize: Number.POSITIVE_INFINITY,\n      maxFiles: 1,\n      allowDrop: true,\n      preventDocumentDrop: true,\n      defaultAcceptedFiles: [],\n      ...props2,\n      translations: {\n        dropzone: \"dropzone\",\n        itemPreview: (file) => `preview of ${file.name}`,\n        deleteFile: (file) => `delete file ${file.name}`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      acceptedFiles: bindable(() => ({\n        defaultValue: prop(\"defaultAcceptedFiles\"),\n        value: prop(\"acceptedFiles\"),\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, b[i])),\n        hash(value) {\n          return value.map((file) => `${file.name}-${file.size}`).join(\",\");\n        },\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileAccept\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: value, rejectedFiles: ctx.get(\"rejectedFiles\") });\n        }\n      })),\n      rejectedFiles: bindable(() => ({\n        defaultValue: [],\n        isEqual: (a, b) => a.length === b?.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file.file, b[i].file)),\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFileReject\")?.({ files: value });\n          prop(\"onFileChange\")?.({ acceptedFiles: ctx.get(\"acceptedFiles\"), rejectedFiles: value });\n        }\n      })),\n      transforming: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    acceptAttr: ({ prop }) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getAcceptAttrString)(prop(\"accept\")),\n    multiple: ({ prop }) => prop(\"maxFiles\") > 1\n  },\n  watch({ track, context, action }) {\n    track([() => context.hash(\"acceptedFiles\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  on: {\n    \"FILES.SET\": {\n      actions: [\"setFiles\"]\n    },\n    \"FILE.SELECT\": {\n      actions: [\"setEventFiles\"]\n    },\n    \"FILE.DELETE\": {\n      actions: [\"removeFile\"]\n    },\n    \"FILES.CLEAR\": {\n      actions: [\"clearFiles\"]\n    },\n    \"REJECTED_FILES.CLEAR\": {\n      actions: [\"clearRejectedFiles\"]\n    }\n  },\n  effects: [\"preventDocumentDrop\"],\n  states: {\n    idle: {\n      on: {\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.FOCUS\": {\n          target: \"focused\"\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"DROPZONE.BLUR\": {\n          target: \"idle\"\n        },\n        OPEN: {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.CLICK\": {\n          actions: [\"openFilePicker\"]\n        },\n        \"DROPZONE.DRAG_OVER\": {\n          target: \"dragging\"\n        }\n      }\n    },\n    dragging: {\n      on: {\n        \"DROPZONE.DROP\": {\n          target: \"idle\",\n          actions: [\"setEventFiles\"]\n        },\n        \"DROPZONE.DRAG_LEAVE\": {\n          target: \"idle\"\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      preventDocumentDrop({ prop, scope }) {\n        if (!prop(\"preventDocumentDrop\")) return;\n        if (!prop(\"allowDrop\")) return;\n        if (prop(\"disabled\")) return;\n        const doc = scope.getDoc();\n        const onDragOver = (event) => {\n          event?.preventDefault();\n        };\n        const onDrop = (event) => {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getRootEl(scope), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event))) return;\n          event.preventDefault();\n        };\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"dragover\", onDragOver, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"drop\", onDrop, false));\n      }\n    },\n    actions: {\n      syncInputElement({ scope, context }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          if (!inputEl) return;\n          setInputFiles(inputEl, context.get(\"acceptedFiles\"));\n          const win = scope.getWin();\n          inputEl.dispatchEvent(new win.Event(\"change\", { bubbles: true }));\n        });\n      },\n      openFilePicker({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getHiddenInputEl(scope)?.click();\n        });\n      },\n      setFiles(params) {\n        const { computed, context, event } = params;\n        const { acceptedFiles, rejectedFiles } = getEventFiles(params, event.files);\n        context.set(\n          \"acceptedFiles\",\n          computed(\"multiple\") ? acceptedFiles : acceptedFiles.length > 0 ? [acceptedFiles[0]] : []\n        );\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      setEventFiles(params) {\n        const { computed, context, event, prop } = params;\n        const currentAcceptedFiles = context.get(\"acceptedFiles\");\n        const currentRejectedFiles = context.get(\"rejectedFiles\");\n        const { acceptedFiles, rejectedFiles } = getEventFiles(\n          params,\n          event.files,\n          currentAcceptedFiles,\n          currentRejectedFiles\n        );\n        const set = (files) => {\n          if (computed(\"multiple\")) {\n            context.set(\"acceptedFiles\", (prev) => [...prev, ...files]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (files.length) {\n            context.set(\"acceptedFiles\", [files[0]]);\n            context.set(\"rejectedFiles\", rejectedFiles);\n            return;\n          }\n          if (rejectedFiles.length) {\n            context.set(\"acceptedFiles\", context.get(\"acceptedFiles\"));\n            context.set(\"rejectedFiles\", rejectedFiles);\n          }\n        };\n        const transform = prop(\"transformFiles\");\n        if (transform) {\n          context.set(\"transforming\", true);\n          transform(acceptedFiles).then(set).catch((err) => {\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js/file-upload] error transforming files\n${err}`);\n          }).finally(() => {\n            context.set(\"transforming\", false);\n          });\n        } else {\n          set(acceptedFiles);\n        }\n      },\n      removeFile({ context, event }) {\n        const files = context.get(\"acceptedFiles\").filter((file) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, event.file));\n        const rejectedFiles = context.get(\"rejectedFiles\").filter((item) => !(0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(item.file, event.file));\n        context.set(\"acceptedFiles\", files);\n        context.set(\"rejectedFiles\", rejectedFiles);\n      },\n      clearRejectedFiles({ context }) {\n        context.set(\"rejectedFiles\", []);\n      },\n      clearFiles({ context }) {\n        context.set(\"acceptedFiles\", []);\n        context.set(\"rejectedFiles\", []);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"accept\",\n  \"acceptedFiles\",\n  \"allowDrop\",\n  \"capture\",\n  \"defaultAcceptedFiles\",\n  \"dir\",\n  \"directory\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"locale\",\n  \"maxFiles\",\n  \"maxFileSize\",\n  \"minFileSize\",\n  \"name\",\n  \"onFileAccept\",\n  \"onFileChange\",\n  \"onFileReject\",\n  \"preventDocumentDrop\",\n  \"required\",\n  \"transformFiles\",\n  \"translations\",\n  \"validate\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"file\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getFileEntries: () => (/* binding */ getFileEntries),\n/* harmony export */   getFileMimeType: () => (/* binding */ getFileMimeType),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-transfer.ts\nvar getItemEntry = (item) => typeof item.getAsEntry === \"function\" ? item.getAsEntry() : typeof item.webkitGetAsEntry === \"function\" ? item.webkitGetAsEntry() : null;\nvar isDirectoryEntry = (entry) => entry.isDirectory;\nvar isFileEntry = (entry) => entry.isFile;\nvar addRelativePath = (file, path) => {\n  Object.defineProperty(file, \"relativePath\", { value: path ? `${path}/${file.name}` : file.name });\n  return file;\n};\nvar getFileEntries = (items, traverseDirectories) => Promise.all(\n  Array.from(items).filter((item) => item.kind === \"file\").map((item) => {\n    const entry = getItemEntry(item);\n    if (!entry) return null;\n    if (isDirectoryEntry(entry) && traverseDirectories) {\n      return getDirectoryFiles(entry.createReader(), `${entry.name}`);\n    }\n    if (isFileEntry(entry) && typeof item.getAsFile === \"function\") {\n      const file = item.getAsFile();\n      return Promise.resolve(file ? addRelativePath(file, \"\") : null);\n    }\n    if (isFileEntry(entry)) {\n      return new Promise((resolve) => {\n        entry.file((file) => {\n          resolve(addRelativePath(file, \"\"));\n        });\n      });\n    }\n  }).filter((b) => b)\n);\nvar getDirectoryFiles = (reader, path = \"\") => new Promise((resolve) => {\n  const entryPromises = [];\n  const readDirectoryEntries = () => {\n    reader.readEntries((entries) => {\n      if (entries.length === 0) {\n        resolve(Promise.all(entryPromises).then((entries2) => entries2.flat()));\n        return;\n      }\n      const promises = entries.map((entry) => {\n        if (!entry) return null;\n        if (isDirectoryEntry(entry)) {\n          return getDirectoryFiles(entry.createReader(), `${path}${entry.name}`);\n        }\n        if (isFileEntry(entry)) {\n          return new Promise((resolve2) => {\n            entry.file((file) => {\n              resolve2(addRelativePath(file, path));\n            });\n          });\n        }\n      }).filter((b) => b);\n      entryPromises.push(Promise.all(promises));\n      readDirectoryEntries();\n    });\n  };\n  readDirectoryEntries();\n});\n\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nvar BOM_REGEX = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nvar MAC_REGEX = /Macintosh/;\nvar APPLE_WEBKIT_REGEX = /AppleWebKit/;\nvar SAFARI_REGEX = /Safari/;\nfunction getBlob(blobOrString, type, appendBOM) {\n  let blob = typeof blobOrString === \"string\" ? new Blob([blobOrString], { type }) : blobOrString;\n  if (appendBOM && BOM_REGEX.test(blob.type)) {\n    return new Blob([String.fromCharCode(65279), blob], { type: blob.type });\n  }\n  return blob;\n}\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction isWebView(win) {\n  return win.navigator && MAC_REGEX.test(win.navigator.userAgent) && APPLE_WEBKIT_REGEX.test(win.navigator.userAgent) && !SAFARI_REGEX.test(win.navigator.userAgent);\n}\nfunction downloadFile(options) {\n  const { file, win = window, type, name, appendBOM, revokeTimeout = 0 } = options;\n  const doc = win.document;\n  const blob = getBlob(file, type, appendBOM);\n  const fileName = (file instanceof File ? name || file.name : name) || \"file-download\";\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(blob, fileName);\n    return;\n  }\n  const isMacOSWebView = isWebView(win);\n  const anchor = doc.createElement(\"a\");\n  const canUseDownload = \"download\" in anchor && !isMacOSWebView;\n  if (canUseDownload) {\n    const url2 = win.URL.createObjectURL(blob);\n    anchor.href = url2;\n    anchor.rel = \"noopener\";\n    anchor.download = fileName;\n    anchor.style.display = \"none\";\n    doc.body.appendChild(anchor);\n    anchor.dispatchEvent(new win.MouseEvent(\"click\"));\n    setTimeout(() => {\n      win.URL.revokeObjectURL(url2);\n      anchor.remove();\n    }, revokeTimeout);\n    return;\n  }\n  const url = win.URL.createObjectURL(blob);\n  const popup = win.open(url, \"_blank\");\n  if (!popup) {\n    win.location.href = url;\n  }\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n  }, revokeTimeout);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (accept == null) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/mime-types.ts\nvar mimeTypes = \"3g2_video/3gpp2[3gp,3gpp_video/3gpp[3mf_model/3mf[7z_application/x-7z-compressed[aac_audio/aac[ac_application/pkix-attr-cert[adp_audio/adpcm[adts_audio/aac[ai_application/postscript[aml_application/automationml-aml+xml[amlx_application/automationml-amlx+zip[amr_audio/amr[apk_application/vnd.android.package-archive[apng_image/apng[appcache,manifest_text/cache-manifest[appinstaller_application/appinstaller[appx_application/appx[appxbundle_application/appxbundle[asc_application/pgp-keys[atom_application/atom+xml[atomcat_application/atomcat+xml[atomdeleted_application/atomdeleted+xml[atomsvc_application/atomsvc+xml[au,snd_audio/basic[avi_video/x-msvideo[avci_image/avci[avcs_image/avcs[avif_image/avif[aw_application/applixware[bdoc_application/bdoc[bin,bpk,buffer,deb,deploy,dist,distz,dll,dmg,dms,dump,elc,exe,img,iso,lrf,mar,msi,msm,msp,pkg,so_application/octet-stream[bmp,dib_image/bmp[btf,btif_image/prs.btif[bz2_application/x-bzip2[c_text/x-c[ccxml_application/ccxml+xml[cdfx_application/cdfx+xml[cdmia_application/cdmi-capability[cdmic_application/cdmi-container[cdmid_application/cdmi-domain[cdmio_application/cdmi-object[cdmiq_application/cdmi-queue[cer_application/pkix-cert[cgm_image/cgm[cjs_application/node[class_application/java-vm[coffee,litcoffee_text/coffeescript[conf,def,in,ini,list,log,text,txt_text/plain[cpp,cxx,cc_text/x-c++src[cpl_application/cpl+xml[cpt_application/mac-compactpro[crl_application/pkix-crl[css_text/css[csv_text/csv[cu_application/cu-seeme[cwl_application/cwl[cww_application/prs.cww[davmount_application/davmount+xml[dbk_application/docbook+xml[doc_application/msword[docx_application/vnd.openxmlformats-officedocument.wordprocessingml.document[dsc_text/prs.lines.tag[dssc_application/dssc+der[dtd_application/xml-dtd[dwd_application/atsc-dwd+xml[ear,jar,war_application/java-archive[ecma_application/ecmascript[emf_image/emf[eml,mime_message/rfc822[emma_application/emma+xml[emotionml_application/emotionml+xml[eot_application/vnd.ms-fontobject[eps,ps_application/postscript[epub_application/epub+zip[exi_application/exi[exp_application/express[exr_image/aces[ez_application/andrew-inset[fdf_application/fdf[fdt_application/fdt+xml[fits_image/fits[flac_audio/flac[flv_video/x-flv[g3_image/g3fax[geojson_application/geo+json[gif_image/gif[glb_model/gltf-binary[gltf_model/gltf+json[gml_application/gml+xml[go_text/x-go[gpx_application/gpx+xml[gz_application/gzip[h_text/x-h[h261_video/h261[h263_video/h263[h264_video/h264[heic_image/heic[heics_image/heic-sequence[heif_image/heif[heifs_image/heif-sequence[htm,html,shtml_text/html[ico_image/x-icon[icns_image/x-icns[ics,ifb_text/calendar[iges,igs_model/iges[ink,inkml_application/inkml+xml[ipa_application/octet-stream[java_text/x-java-source[jp2,jpg2_image/jp2[jpeg,jpe,jpg_image/jpeg[jpf,jpx_image/jpx[jpm,jpgm_image/jpm[jpgv_video/jpeg[jph_image/jph[js,mjs_text/javascript[json_application/json[json5_application/json5[jsonld_application/ld+json[jsx_text/jsx[jxl_image/jxl[jxr_image/jxr[ktx_image/ktx[ktx2_image/ktx2[less_text/less[m1v,m2v,mpe,mpeg,mpg_video/mpeg[m4a_audio/mp4[m4v_video/x-m4v[md,markdown_text/markdown[mid,midi,kar,rmi_audio/midi[mkv_video/x-matroska[mp2,mp2a,mp3,mpga,m3a,m2a_audio/mpeg[mp4,mp4v,mpg4_video/mp4[mp4a_audio/mp4[mp4s,m4p_application/mp4[odp_application/vnd.oasis.opendocument.presentation[oda_application/oda[ods_application/vnd.oasis.opendocument.spreadsheet[odt_application/vnd.oasis.opendocument.text[oga,ogg,opus,spx_audio/ogg[ogv_video/ogg[ogx_application/ogg[otf_font/otf[p12,pfx_application/x-pkcs12[pdf_application/pdf[pem_application/x-pem-file[php_text/x-php[png_image/png[ppt_application/vnd.ms-powerpoint[pptx_application/vnd.openxmlformats-officedocument.presentationml.presentation[pskcxml_application/pskc+xml[psd_image/vnd.adobe.photoshop[py_text/x-python[qt,mov_video/quicktime[rar_application/vnd.rar[rdf_application/rdf+xml[rtf_text/rtf[sass_text/x-sass[scss_text/x-scss[sgm,sgml_text/sgml[sh_application/x-sh[svg,svgz_image/svg+xml[swf_application/x-shockwave-flash[tar_application/x-tar[tif,tiff_image/tiff[toml_application/toml[ts_video/mp2t[tsx_text/tsx[tsv_text/tab-separated-values[ttc_font/collection[ttf_font/ttf[vtt_text/vtt[wasm_application/wasm[wav_audio/wav[weba_audio/webm[webm_video/webm[webmanifest_application/manifest+json[webp_image/webp[wma_audio/x-ms-wma[wmv_video/x-ms-wmv[woff_font/woff[woff2_font/woff2[xls_application/vnd.ms-excel[xlsx_application/vnd.openxmlformats-officedocument.spreadsheetml.sheet[xml_application/xml[xz_application/x-xz[yaml,yml_text/yaml[zip_application/zip\";\nvar mimeTypesMap = new Map(\n  mimeTypes.split(\"[\").flatMap((mime) => {\n    const [extensions, mimeType] = mime.split(\"_\");\n    return extensions.split(\",\").map((ext) => [ext, mimeType]);\n  })\n);\n\n// src/get-file-mime-type.ts\nfunction getFileMimeType(name) {\n  const extension = name.split(\".\").pop();\n  return extension ? mimeTypesMap.get(extension) || null : null;\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : typeof accept === \"string\" ? accept.split(\",\") : [];\n    if (types.length === 0) return true;\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || getFileMimeType(fileName) || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/focus-trap/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrap: () => (/* binding */ FocusTrap),\n/* harmony export */   trapFocus: () => (/* binding */ trapFocus)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar sharedTrapStack = [];\nvar FocusTrap = class {\n  constructor(elements, options) {\n    __publicField(this, \"trapStack\");\n    __publicField(this, \"config\");\n    __publicField(this, \"doc\");\n    __publicField(this, \"state\", {\n      containers: [],\n      containerGroups: [],\n      tabbableGroups: [],\n      nodeFocusedBeforeActivation: null,\n      mostRecentlyFocusedNode: null,\n      active: false,\n      paused: false,\n      delayInitialFocusTimer: void 0,\n      recentNavEvent: void 0\n    });\n    __publicField(this, \"listenerCleanups\", []);\n    __publicField(this, \"handleFocus\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      const targetContained = this.findContainerIndex(target, event) >= 0;\n      if (targetContained || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDocument)(target)) {\n        if (targetContained) {\n          this.state.mostRecentlyFocusedNode = target;\n        }\n      } else {\n        event.stopImmediatePropagation();\n        let nextNode;\n        let navAcrossContainers = true;\n        if (this.state.mostRecentlyFocusedNode) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(this.state.mostRecentlyFocusedNode) > 0) {\n            const mruContainerIdx = this.findContainerIndex(this.state.mostRecentlyFocusedNode);\n            const { tabbableNodes } = this.state.containerGroups[mruContainerIdx];\n            if (tabbableNodes.length > 0) {\n              const mruTabIdx = tabbableNodes.findIndex((node) => node === this.state.mostRecentlyFocusedNode);\n              if (mruTabIdx >= 0) {\n                if (this.config.isKeyForward(this.state.recentNavEvent)) {\n                  if (mruTabIdx + 1 < tabbableNodes.length) {\n                    nextNode = tabbableNodes[mruTabIdx + 1];\n                    navAcrossContainers = false;\n                  }\n                } else {\n                  if (mruTabIdx - 1 >= 0) {\n                    nextNode = tabbableNodes[mruTabIdx - 1];\n                    navAcrossContainers = false;\n                  }\n                }\n              }\n            }\n          } else {\n            if (!this.state.containerGroups.some((g) => g.tabbableNodes.some((n) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(n) > 0))) {\n              navAcrossContainers = false;\n            }\n          }\n        } else {\n          navAcrossContainers = false;\n        }\n        if (navAcrossContainers) {\n          nextNode = this.findNextNavNode({\n            // move FROM the MRU node, not event-related node (which will be the node that is\n            //  outside the trap causing the focus escape we're trying to fix)\n            target: this.state.mostRecentlyFocusedNode,\n            isBackward: this.config.isKeyBackward(this.state.recentNavEvent)\n          });\n        }\n        if (nextNode) {\n          this.tryFocus(nextNode);\n        } else {\n          this.tryFocus(this.state.mostRecentlyFocusedNode || this.getInitialFocusNode());\n        }\n      }\n      this.state.recentNavEvent = void 0;\n    });\n    __publicField(this, \"handlePointerDown\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        this.deactivate({ returnFocus: this.config.returnFocusOnDeactivate });\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n    });\n    __publicField(this, \"handleClick\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    __publicField(this, \"handleTabKey\", (event) => {\n      if (this.config.isKeyForward(event) || this.config.isKeyBackward(event)) {\n        this.state.recentNavEvent = event;\n        const isBackward = this.config.isKeyBackward(event);\n        const destinationNode = this.findNextNavNode({ event, isBackward });\n        if (!destinationNode) return;\n        if (isTabEvent(event)) {\n          event.preventDefault();\n        }\n        this.tryFocus(destinationNode);\n      }\n    });\n    __publicField(this, \"handleEscapeKey\", (event) => {\n      if (isEscapeEvent(event) && valueOrHandler(this.config.escapeDeactivates, event) !== false) {\n        event.preventDefault();\n        this.deactivate();\n      }\n    });\n    __publicField(this, \"_mutationObserver\");\n    __publicField(this, \"setupMutationObserver\", () => {\n      const win = this.doc.defaultView || window;\n      this._mutationObserver = new win.MutationObserver((mutations) => {\n        const isFocusedNodeRemoved = mutations.some((mutation) => {\n          const removedNodes = Array.from(mutation.removedNodes);\n          return removedNodes.some((node) => node === this.state.mostRecentlyFocusedNode);\n        });\n        if (isFocusedNodeRemoved) {\n          this.tryFocus(this.getInitialFocusNode());\n        }\n      });\n    });\n    __publicField(this, \"updateObservedNodes\", () => {\n      this._mutationObserver?.disconnect();\n      if (this.state.active && !this.state.paused) {\n        this.state.containers.map((container) => {\n          this._mutationObserver?.observe(container, { subtree: true, childList: true });\n        });\n      }\n    });\n    __publicField(this, \"getInitialFocusNode\", () => {\n      let node = this.getNodeForOption(\"initialFocus\", { hasFallback: true });\n      if (node === false) {\n        return false;\n      }\n      if (node === void 0 || node && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) {\n        if (this.findContainerIndex(this.doc.activeElement) >= 0) {\n          node = this.doc.activeElement;\n        } else {\n          const firstTabbableGroup = this.state.tabbableGroups[0];\n          const firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n          node = firstTabbableNode || this.getNodeForOption(\"fallbackFocus\");\n        }\n      } else if (node === null) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      if (!node) {\n        throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n      }\n      if (!node.isConnected) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return node;\n    });\n    __publicField(this, \"tryFocus\", (node) => {\n      if (node === false) return;\n      if (node === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getActiveElement)(this.doc)) return;\n      if (!node || !node.focus) {\n        this.tryFocus(this.getInitialFocusNode());\n        return;\n      }\n      node.focus({ preventScroll: !!this.config.preventScroll });\n      this.state.mostRecentlyFocusedNode = node;\n      if (isSelectableInput(node)) {\n        node.select();\n      }\n    });\n    __publicField(this, \"deactivate\", (deactivateOptions) => {\n      if (!this.state.active) return this;\n      const options = {\n        onDeactivate: this.config.onDeactivate,\n        onPostDeactivate: this.config.onPostDeactivate,\n        checkCanReturnFocus: this.config.checkCanReturnFocus,\n        ...deactivateOptions\n      };\n      clearTimeout(this.state.delayInitialFocusTimer);\n      this.state.delayInitialFocusTimer = void 0;\n      this.removeListeners();\n      this.state.active = false;\n      this.state.paused = false;\n      this.updateObservedNodes();\n      activeFocusTraps.deactivateTrap(this.trapStack, this);\n      const onDeactivate = this.getOption(options, \"onDeactivate\");\n      const onPostDeactivate = this.getOption(options, \"onPostDeactivate\");\n      const checkCanReturnFocus = this.getOption(options, \"checkCanReturnFocus\");\n      const returnFocus = this.getOption(options, \"returnFocus\", \"returnFocusOnDeactivate\");\n      onDeactivate?.();\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n            this.tryFocus(returnFocusNode);\n          }\n          onPostDeactivate?.();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n        checkCanReturnFocus(returnFocusNode).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    });\n    __publicField(this, \"pause\", (pauseOptions) => {\n      if (this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onPause = this.getOption(pauseOptions, \"onPause\");\n      const onPostPause = this.getOption(pauseOptions, \"onPostPause\");\n      this.state.paused = true;\n      onPause?.();\n      this.removeListeners();\n      this.updateObservedNodes();\n      onPostPause?.();\n      return this;\n    });\n    __publicField(this, \"unpause\", (unpauseOptions) => {\n      if (!this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onUnpause = this.getOption(unpauseOptions, \"onUnpause\");\n      const onPostUnpause = this.getOption(unpauseOptions, \"onPostUnpause\");\n      this.state.paused = false;\n      onUnpause?.();\n      this.updateTabbableNodes();\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostUnpause?.();\n      return this;\n    });\n    __publicField(this, \"updateContainerElements\", (containerElements) => {\n      this.state.containers = Array.isArray(containerElements) ? containerElements.filter(Boolean) : [containerElements].filter(Boolean);\n      if (this.state.active) {\n        this.updateTabbableNodes();\n      }\n      this.updateObservedNodes();\n      return this;\n    });\n    __publicField(this, \"getReturnFocusNode\", (previousActiveElement) => {\n      const node = this.getNodeForOption(\"setReturnFocus\", {\n        params: [previousActiveElement]\n      });\n      return node ? node : node === false ? false : previousActiveElement;\n    });\n    __publicField(this, \"getOption\", (configOverrideOptions, optionName, configOptionName) => {\n      return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : (\n        // @ts-expect-error\n        this.config[configOptionName || optionName]\n      );\n    });\n    __publicField(this, \"getNodeForOption\", (optionName, { hasFallback = false, params = [] } = {}) => {\n      let optionValue = this.config[optionName];\n      if (typeof optionValue === \"function\") optionValue = optionValue(...params);\n      if (optionValue === true) optionValue = void 0;\n      if (!optionValue) {\n        if (optionValue === void 0 || optionValue === false) {\n          return optionValue;\n        }\n        throw new Error(`\\`${optionName}\\` was specified but was not a node, or did not return a node`);\n      }\n      let node = optionValue;\n      if (typeof optionValue === \"string\") {\n        try {\n          node = this.doc.querySelector(optionValue);\n        } catch (err) {\n          throw new Error(`\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`);\n        }\n        if (!node) {\n          if (!hasFallback) {\n            throw new Error(`\\`${optionName}\\` as selector refers to no known node`);\n          }\n        }\n      }\n      return node;\n    });\n    __publicField(this, \"findNextNavNode\", (opts) => {\n      const { event, isBackward = false } = opts;\n      const target = opts.target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      this.updateTabbableNodes();\n      let destinationNode = null;\n      if (this.state.tabbableGroups.length > 0) {\n        const containerIndex = this.findContainerIndex(target, event);\n        const containerGroup = containerIndex >= 0 ? this.state.containerGroups[containerIndex] : void 0;\n        if (containerIndex < 0) {\n          if (isBackward) {\n            destinationNode = this.state.tabbableGroups[this.state.tabbableGroups.length - 1].lastTabbableNode;\n          } else {\n            destinationNode = this.state.tabbableGroups[0].firstTabbableNode;\n          }\n        } else if (isBackward) {\n          let startOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ firstTabbableNode }) => target === firstTabbableNode\n          );\n          if (startOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target, false))) {\n            startOfGroupIndex = containerIndex;\n          }\n          if (startOfGroupIndex >= 0) {\n            const destinationGroupIndex = startOfGroupIndex === 0 ? this.state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target, false);\n          }\n        } else {\n          let lastOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ lastTabbableNode }) => target === lastTabbableNode\n          );\n          if (lastOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target))) {\n            lastOfGroupIndex = containerIndex;\n          }\n          if (lastOfGroupIndex >= 0) {\n            const destinationGroupIndex = lastOfGroupIndex === this.state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.firstTabbableNode : destinationGroup.firstDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target);\n          }\n        }\n      } else {\n        destinationNode = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return destinationNode;\n    });\n    this.trapStack = options.trapStack || sharedTrapStack;\n    const config = {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true,\n      delayInitialFocus: true,\n      isKeyForward(e) {\n        return isTabEvent(e) && !e.shiftKey;\n      },\n      isKeyBackward(e) {\n        return isTabEvent(e) && e.shiftKey;\n      },\n      ...options\n    };\n    this.doc = config.document || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(Array.isArray(elements) ? elements[0] : elements);\n    this.config = config;\n    this.updateContainerElements(elements);\n    this.setupMutationObserver();\n  }\n  get active() {\n    return this.state.active;\n  }\n  get paused() {\n    return this.state.paused;\n  }\n  findContainerIndex(element, event) {\n    const composedPath = typeof event?.composedPath === \"function\" ? event.composedPath() : void 0;\n    return this.state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) => container.contains(element) || composedPath?.includes(container) || tabbableNodes.find((node) => node === element)\n    );\n  }\n  updateTabbableNodes() {\n    this.state.containerGroups = this.state.containers.map((container) => {\n      const tabbableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabbables)(container);\n      const focusableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getFocusables)(container);\n      const firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;\n      const lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;\n      const firstDomTabbableNode = focusableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const lastDomTabbableNode = focusableNodes.slice().reverse().find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const posTabIndexesFound = !!tabbableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(node) > 0);\n      function nextTabbableNode(node, forward = true) {\n        const nodeIdx = tabbableNodes.indexOf(node);\n        if (nodeIdx < 0) {\n          if (forward) {\n            return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n          }\n          return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n        }\n        return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n      }\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        posTabIndexesFound,\n        firstTabbableNode,\n        lastTabbableNode,\n        firstDomTabbableNode,\n        lastDomTabbableNode,\n        nextTabbableNode\n      };\n    });\n    this.state.tabbableGroups = this.state.containerGroups.filter((group) => group.tabbableNodes.length > 0);\n    if (this.state.tabbableGroups.length <= 0 && !this.getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\n        \"Your focus-trap must have at least one container with at least one tabbable node in it at all times\"\n      );\n    }\n    if (this.state.containerGroups.find((g) => g.posTabIndexesFound) && this.state.containerGroups.length > 1) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  }\n  addListeners() {\n    if (!this.state.active) return;\n    activeFocusTraps.activateTrap(this.trapStack, this);\n    this.state.delayInitialFocusTimer = this.config.delayInitialFocus ? delay(() => {\n      this.tryFocus(this.getInitialFocusNode());\n    }) : this.tryFocus(this.getInitialFocusNode());\n    this.listenerCleanups.push(\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"focusin\", this.handleFocus, true),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"mousedown\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"touchstart\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"click\", this.handleClick, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleTabKey, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleEscapeKey)\n    );\n    return this;\n  }\n  removeListeners() {\n    if (!this.state.active) return;\n    this.listenerCleanups.forEach((cleanup) => cleanup());\n    this.listenerCleanups = [];\n    return this;\n  }\n  activate(activateOptions) {\n    if (this.state.active) {\n      return this;\n    }\n    const onActivate = this.getOption(activateOptions, \"onActivate\");\n    const onPostActivate = this.getOption(activateOptions, \"onPostActivate\");\n    const checkCanFocusTrap = this.getOption(activateOptions, \"checkCanFocusTrap\");\n    if (!checkCanFocusTrap) {\n      this.updateTabbableNodes();\n    }\n    this.state.active = true;\n    this.state.paused = false;\n    this.state.nodeFocusedBeforeActivation = this.doc.activeElement || null;\n    onActivate?.();\n    const finishActivation = () => {\n      if (checkCanFocusTrap) {\n        this.updateTabbableNodes();\n      }\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostActivate?.();\n    };\n    if (checkCanFocusTrap) {\n      checkCanFocusTrap(this.state.containers.concat()).then(finishActivation, finishActivation);\n      return this;\n    }\n    finishActivation();\n    return this;\n  }\n};\nvar isTabEvent = (event) => event.key === \"Tab\";\nvar valueOrHandler = (value, ...params) => typeof value === \"function\" ? value(...params) : value;\nvar isEscapeEvent = (event) => !event.isComposing && event.key === \"Escape\";\nvar delay = (fn) => setTimeout(fn, 0);\nvar isSelectableInput = (node) => node.localName === \"input\" && \"select\" in node && typeof node.select === \"function\";\n\n// src/index.ts\nfunction trapFocus(el, options = {}) {\n  let trap;\n  const cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf)(() => {\n    const contentEl = typeof el === \"function\" ? el() : el;\n    if (!contentEl) return;\n    trap = new FocusTrap(contentEl, {\n      escapeDeactivates: false,\n      allowOutsideClick: true,\n      preventScroll: true,\n      returnFocusOnDeactivate: true,\n      delayInitialFocus: false,\n      fallbackFocus: contentEl,\n      ...options,\n      document: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(contentEl)\n    });\n    try {\n      trap.activate();\n    } catch {\n    }\n  });\n  return function destroy() {\n    trap?.deactivate();\n    cleanup();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9mb2N1cy10cmFwL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtTDs7QUFFbkw7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCLGlFQUFjO0FBQ25DO0FBQ0EsNkJBQTZCLDZEQUFVO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQVc7QUFDekI7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osb0ZBQW9GLDhEQUFXO0FBQy9GO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHFCQUFxQixpRUFBYztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrREFBa0Q7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EscUJBQXFCLGlFQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsbUJBQW1CO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsZ0NBQWdDO0FBQ3ZGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLHlEQUF5RCxtQkFBbUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDhEQUFXO0FBQ2pEO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIsbUVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDRDQUE0QztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkRBQTJELG1DQUFtQyxJQUFJO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLFdBQVc7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDViwrQkFBK0IsV0FBVyxzQ0FBc0MsU0FBUyxZQUFZO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxXQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUMsb0NBQW9DLGlFQUFjO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0EsZ0ZBQWdGLDhEQUFXLGFBQWEsNkRBQVU7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw4REFBVztBQUN6QyxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0EsK0VBQStFLDhEQUFXLGFBQWEsNkRBQVU7QUFDakg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw4REFBVztBQUN6QyxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxrQ0FBa0MsOERBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDBCQUEwQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrREFBWTtBQUN4Qyw2QkFBNkIsZ0VBQWE7QUFDMUM7QUFDQTtBQUNBLGlFQUFpRSw2REFBVTtBQUMzRSxrRkFBa0YsNkRBQVU7QUFDNUYsZ0VBQWdFLDhEQUFXO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUZBQXVGLDZEQUFVO0FBQ2pHO0FBQ0EsOEZBQThGLDZEQUFVO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLE1BQU0sOERBQVc7QUFDakIsTUFBTSw4REFBVyxrREFBa0QsK0JBQStCO0FBQ2xHLE1BQU0sOERBQVcsbURBQW1ELCtCQUErQjtBQUNuRyxNQUFNLDhEQUFXLHdDQUF3QywrQkFBK0I7QUFDeEYsTUFBTSw4REFBVywyQ0FBMkMsK0JBQStCO0FBQzNGLE1BQU0sOERBQVc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLGtCQUFrQixzREFBRztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4REFBVztBQUMzQixLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvZm9jdXMtdHJhcC9kaXN0L2luZGV4Lm1qcz8zNDIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERvY3VtZW50LCBnZXRUYWJiYWJsZXMsIGdldEZvY3VzYWJsZXMsIGlzVGFiYmFibGUsIGdldFRhYkluZGV4LCBhZGREb21FdmVudCwgcmFmLCBnZXRFdmVudFRhcmdldCwgaXNEb2N1bWVudCwgaXNGb2N1c2FibGUsIGdldEFjdGl2ZUVsZW1lbnQgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5cbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG52YXIgYWN0aXZlRm9jdXNUcmFwcyA9IHtcbiAgYWN0aXZhdGVUcmFwKHRyYXBTdGFjaywgdHJhcCkge1xuICAgIGlmICh0cmFwU3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgYWN0aXZlVHJhcCA9IHRyYXBTdGFja1t0cmFwU3RhY2subGVuZ3RoIC0gMV07XG4gICAgICBpZiAoYWN0aXZlVHJhcCAhPT0gdHJhcCkge1xuICAgICAgICBhY3RpdmVUcmFwLnBhdXNlKCk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHRyYXBJbmRleCA9IHRyYXBTdGFjay5pbmRleE9mKHRyYXApO1xuICAgIGlmICh0cmFwSW5kZXggPT09IC0xKSB7XG4gICAgICB0cmFwU3RhY2sucHVzaCh0cmFwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhcFN0YWNrLnNwbGljZSh0cmFwSW5kZXgsIDEpO1xuICAgICAgdHJhcFN0YWNrLnB1c2godHJhcCk7XG4gICAgfVxuICB9LFxuICBkZWFjdGl2YXRlVHJhcCh0cmFwU3RhY2ssIHRyYXApIHtcbiAgICBjb25zdCB0cmFwSW5kZXggPSB0cmFwU3RhY2suaW5kZXhPZih0cmFwKTtcbiAgICBpZiAodHJhcEluZGV4ICE9PSAtMSkge1xuICAgICAgdHJhcFN0YWNrLnNwbGljZSh0cmFwSW5kZXgsIDEpO1xuICAgIH1cbiAgICBpZiAodHJhcFN0YWNrLmxlbmd0aCA+IDApIHtcbiAgICAgIHRyYXBTdGFja1t0cmFwU3RhY2subGVuZ3RoIC0gMV0udW5wYXVzZSgpO1xuICAgIH1cbiAgfVxufTtcbnZhciBzaGFyZWRUcmFwU3RhY2sgPSBbXTtcbnZhciBGb2N1c1RyYXAgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRzLCBvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYXBTdGFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uZmlnXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJkb2NcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXRlXCIsIHtcbiAgICAgIGNvbnRhaW5lcnM6IFtdLFxuICAgICAgY29udGFpbmVyR3JvdXBzOiBbXSxcbiAgICAgIHRhYmJhYmxlR3JvdXBzOiBbXSxcbiAgICAgIG5vZGVGb2N1c2VkQmVmb3JlQWN0aXZhdGlvbjogbnVsbCxcbiAgICAgIG1vc3RSZWNlbnRseUZvY3VzZWROb2RlOiBudWxsLFxuICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgIHBhdXNlZDogZmFsc2UsXG4gICAgICBkZWxheUluaXRpYWxGb2N1c1RpbWVyOiB2b2lkIDAsXG4gICAgICByZWNlbnROYXZFdmVudDogdm9pZCAwXG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxpc3RlbmVyQ2xlYW51cHNcIiwgW10pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoYW5kbGVGb2N1c1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50KTtcbiAgICAgIGNvbnN0IHRhcmdldENvbnRhaW5lZCA9IHRoaXMuZmluZENvbnRhaW5lckluZGV4KHRhcmdldCwgZXZlbnQpID49IDA7XG4gICAgICBpZiAodGFyZ2V0Q29udGFpbmVkIHx8IGlzRG9jdW1lbnQodGFyZ2V0KSkge1xuICAgICAgICBpZiAodGFyZ2V0Q29udGFpbmVkKSB7XG4gICAgICAgICAgdGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSA9IHRhcmdldDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGxldCBuZXh0Tm9kZTtcbiAgICAgICAgbGV0IG5hdkFjcm9zc0NvbnRhaW5lcnMgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSkge1xuICAgICAgICAgIGlmIChnZXRUYWJJbmRleCh0aGlzLnN0YXRlLm1vc3RSZWNlbnRseUZvY3VzZWROb2RlKSA+IDApIHtcbiAgICAgICAgICAgIGNvbnN0IG1ydUNvbnRhaW5lcklkeCA9IHRoaXMuZmluZENvbnRhaW5lckluZGV4KHRoaXMuc3RhdGUubW9zdFJlY2VudGx5Rm9jdXNlZE5vZGUpO1xuICAgICAgICAgICAgY29uc3QgeyB0YWJiYWJsZU5vZGVzIH0gPSB0aGlzLnN0YXRlLmNvbnRhaW5lckdyb3Vwc1ttcnVDb250YWluZXJJZHhdO1xuICAgICAgICAgICAgaWYgKHRhYmJhYmxlTm9kZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBjb25zdCBtcnVUYWJJZHggPSB0YWJiYWJsZU5vZGVzLmZpbmRJbmRleCgobm9kZSkgPT4gbm9kZSA9PT0gdGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSk7XG4gICAgICAgICAgICAgIGlmIChtcnVUYWJJZHggPj0gMCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5pc0tleUZvcndhcmQodGhpcy5zdGF0ZS5yZWNlbnROYXZFdmVudCkpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChtcnVUYWJJZHggKyAxIDwgdGFiYmFibGVOb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dE5vZGUgPSB0YWJiYWJsZU5vZGVzW21ydVRhYklkeCArIDFdO1xuICAgICAgICAgICAgICAgICAgICBuYXZBY3Jvc3NDb250YWluZXJzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGlmIChtcnVUYWJJZHggLSAxID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dE5vZGUgPSB0YWJiYWJsZU5vZGVzW21ydVRhYklkeCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICBuYXZBY3Jvc3NDb250YWluZXJzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5zdGF0ZS5jb250YWluZXJHcm91cHMuc29tZSgoZykgPT4gZy50YWJiYWJsZU5vZGVzLnNvbWUoKG4pID0+IGdldFRhYkluZGV4KG4pID4gMCkpKSB7XG4gICAgICAgICAgICAgIG5hdkFjcm9zc0NvbnRhaW5lcnMgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmF2QWNyb3NzQ29udGFpbmVycyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuYXZBY3Jvc3NDb250YWluZXJzKSB7XG4gICAgICAgICAgbmV4dE5vZGUgPSB0aGlzLmZpbmROZXh0TmF2Tm9kZSh7XG4gICAgICAgICAgICAvLyBtb3ZlIEZST00gdGhlIE1SVSBub2RlLCBub3QgZXZlbnQtcmVsYXRlZCBub2RlICh3aGljaCB3aWxsIGJlIHRoZSBub2RlIHRoYXQgaXNcbiAgICAgICAgICAgIC8vICBvdXRzaWRlIHRoZSB0cmFwIGNhdXNpbmcgdGhlIGZvY3VzIGVzY2FwZSB3ZSdyZSB0cnlpbmcgdG8gZml4KVxuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLnN0YXRlLm1vc3RSZWNlbnRseUZvY3VzZWROb2RlLFxuICAgICAgICAgICAgaXNCYWNrd2FyZDogdGhpcy5jb25maWcuaXNLZXlCYWNrd2FyZCh0aGlzLnN0YXRlLnJlY2VudE5hdkV2ZW50KVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuZXh0Tm9kZSkge1xuICAgICAgICAgIHRoaXMudHJ5Rm9jdXMobmV4dE5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudHJ5Rm9jdXModGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSB8fCB0aGlzLmdldEluaXRpYWxGb2N1c05vZGUoKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuc3RhdGUucmVjZW50TmF2RXZlbnQgPSB2b2lkIDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImhhbmRsZVBvaW50ZXJEb3duXCIsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZXZlbnQpO1xuICAgICAgaWYgKHRoaXMuZmluZENvbnRhaW5lckluZGV4KHRhcmdldCwgZXZlbnQpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlT3JIYW5kbGVyKHRoaXMuY29uZmlnLmNsaWNrT3V0c2lkZURlYWN0aXZhdGVzLCBldmVudCkpIHtcbiAgICAgICAgdGhpcy5kZWFjdGl2YXRlKHsgcmV0dXJuRm9jdXM6IHRoaXMuY29uZmlnLnJldHVybkZvY3VzT25EZWFjdGl2YXRlIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodmFsdWVPckhhbmRsZXIodGhpcy5jb25maWcuYWxsb3dPdXRzaWRlQ2xpY2ssIGV2ZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoYW5kbGVDbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50KTtcbiAgICAgIGlmICh0aGlzLmZpbmRDb250YWluZXJJbmRleCh0YXJnZXQsIGV2ZW50KSA+PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZU9ySGFuZGxlcih0aGlzLmNvbmZpZy5jbGlja091dHNpZGVEZWFjdGl2YXRlcywgZXZlbnQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZU9ySGFuZGxlcih0aGlzLmNvbmZpZy5hbGxvd091dHNpZGVDbGljaywgZXZlbnQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaGFuZGxlVGFiS2V5XCIsIChldmVudCkgPT4ge1xuICAgICAgaWYgKHRoaXMuY29uZmlnLmlzS2V5Rm9yd2FyZChldmVudCkgfHwgdGhpcy5jb25maWcuaXNLZXlCYWNrd2FyZChldmVudCkpIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5yZWNlbnROYXZFdmVudCA9IGV2ZW50O1xuICAgICAgICBjb25zdCBpc0JhY2t3YXJkID0gdGhpcy5jb25maWcuaXNLZXlCYWNrd2FyZChldmVudCk7XG4gICAgICAgIGNvbnN0IGRlc3RpbmF0aW9uTm9kZSA9IHRoaXMuZmluZE5leHROYXZOb2RlKHsgZXZlbnQsIGlzQmFja3dhcmQgfSk7XG4gICAgICAgIGlmICghZGVzdGluYXRpb25Ob2RlKSByZXR1cm47XG4gICAgICAgIGlmIChpc1RhYkV2ZW50KGV2ZW50KSkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50cnlGb2N1cyhkZXN0aW5hdGlvbk5vZGUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJoYW5kbGVFc2NhcGVLZXlcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoaXNFc2NhcGVFdmVudChldmVudCkgJiYgdmFsdWVPckhhbmRsZXIodGhpcy5jb25maWcuZXNjYXBlRGVhY3RpdmF0ZXMsIGV2ZW50KSAhPT0gZmFsc2UpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5kZWFjdGl2YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9tdXRhdGlvbk9ic2VydmVyXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXR1cE11dGF0aW9uT2JzZXJ2ZXJcIiwgKCkgPT4ge1xuICAgICAgY29uc3Qgd2luID0gdGhpcy5kb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICAgICAgdGhpcy5fbXV0YXRpb25PYnNlcnZlciA9IG5ldyB3aW4uTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zKSA9PiB7XG4gICAgICAgIGNvbnN0IGlzRm9jdXNlZE5vZGVSZW1vdmVkID0gbXV0YXRpb25zLnNvbWUoKG11dGF0aW9uKSA9PiB7XG4gICAgICAgICAgY29uc3QgcmVtb3ZlZE5vZGVzID0gQXJyYXkuZnJvbShtdXRhdGlvbi5yZW1vdmVkTm9kZXMpO1xuICAgICAgICAgIHJldHVybiByZW1vdmVkTm9kZXMuc29tZSgobm9kZSkgPT4gbm9kZSA9PT0gdGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaXNGb2N1c2VkTm9kZVJlbW92ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyeUZvY3VzKHRoaXMuZ2V0SW5pdGlhbEZvY3VzTm9kZSgpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInVwZGF0ZU9ic2VydmVkTm9kZXNcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5fbXV0YXRpb25PYnNlcnZlcj8uZGlzY29ubmVjdCgpO1xuICAgICAgaWYgKHRoaXMuc3RhdGUuYWN0aXZlICYmICF0aGlzLnN0YXRlLnBhdXNlZCkge1xuICAgICAgICB0aGlzLnN0YXRlLmNvbnRhaW5lcnMubWFwKChjb250YWluZXIpID0+IHtcbiAgICAgICAgICB0aGlzLl9tdXRhdGlvbk9ic2VydmVyPy5vYnNlcnZlKGNvbnRhaW5lciwgeyBzdWJ0cmVlOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRJbml0aWFsRm9jdXNOb2RlXCIsICgpID0+IHtcbiAgICAgIGxldCBub2RlID0gdGhpcy5nZXROb2RlRm9yT3B0aW9uKFwiaW5pdGlhbEZvY3VzXCIsIHsgaGFzRmFsbGJhY2s6IHRydWUgfSk7XG4gICAgICBpZiAobm9kZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKG5vZGUgPT09IHZvaWQgMCB8fCBub2RlICYmICFpc0ZvY3VzYWJsZShub2RlKSkge1xuICAgICAgICBpZiAodGhpcy5maW5kQ29udGFpbmVySW5kZXgodGhpcy5kb2MuYWN0aXZlRWxlbWVudCkgPj0gMCkge1xuICAgICAgICAgIG5vZGUgPSB0aGlzLmRvYy5hY3RpdmVFbGVtZW50O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IGZpcnN0VGFiYmFibGVHcm91cCA9IHRoaXMuc3RhdGUudGFiYmFibGVHcm91cHNbMF07XG4gICAgICAgICAgY29uc3QgZmlyc3RUYWJiYWJsZU5vZGUgPSBmaXJzdFRhYmJhYmxlR3JvdXAgJiYgZmlyc3RUYWJiYWJsZUdyb3VwLmZpcnN0VGFiYmFibGVOb2RlO1xuICAgICAgICAgIG5vZGUgPSBmaXJzdFRhYmJhYmxlTm9kZSB8fCB0aGlzLmdldE5vZGVGb3JPcHRpb24oXCJmYWxsYmFja0ZvY3VzXCIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG5vZGUgPT09IG51bGwpIHtcbiAgICAgICAgbm9kZSA9IHRoaXMuZ2V0Tm9kZUZvck9wdGlvbihcImZhbGxiYWNrRm9jdXNcIik7XG4gICAgICB9XG4gICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91ciBmb2N1cy10cmFwIG5lZWRzIHRvIGhhdmUgYXQgbGVhc3Qgb25lIGZvY3VzYWJsZSBlbGVtZW50XCIpO1xuICAgICAgfVxuICAgICAgaWYgKCFub2RlLmlzQ29ubmVjdGVkKSB7XG4gICAgICAgIG5vZGUgPSB0aGlzLmdldE5vZGVGb3JPcHRpb24oXCJmYWxsYmFja0ZvY3VzXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyeUZvY3VzXCIsIChub2RlKSA9PiB7XG4gICAgICBpZiAobm9kZSA9PT0gZmFsc2UpIHJldHVybjtcbiAgICAgIGlmIChub2RlID09PSBnZXRBY3RpdmVFbGVtZW50KHRoaXMuZG9jKSkgcmV0dXJuO1xuICAgICAgaWYgKCFub2RlIHx8ICFub2RlLmZvY3VzKSB7XG4gICAgICAgIHRoaXMudHJ5Rm9jdXModGhpcy5nZXRJbml0aWFsRm9jdXNOb2RlKCkpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBub2RlLmZvY3VzKHsgcHJldmVudFNjcm9sbDogISF0aGlzLmNvbmZpZy5wcmV2ZW50U2Nyb2xsIH0pO1xuICAgICAgdGhpcy5zdGF0ZS5tb3N0UmVjZW50bHlGb2N1c2VkTm9kZSA9IG5vZGU7XG4gICAgICBpZiAoaXNTZWxlY3RhYmxlSW5wdXQobm9kZSkpIHtcbiAgICAgICAgbm9kZS5zZWxlY3QoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZGVhY3RpdmF0ZVwiLCAoZGVhY3RpdmF0ZU9wdGlvbnMpID0+IHtcbiAgICAgIGlmICghdGhpcy5zdGF0ZS5hY3RpdmUpIHJldHVybiB0aGlzO1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgb25EZWFjdGl2YXRlOiB0aGlzLmNvbmZpZy5vbkRlYWN0aXZhdGUsXG4gICAgICAgIG9uUG9zdERlYWN0aXZhdGU6IHRoaXMuY29uZmlnLm9uUG9zdERlYWN0aXZhdGUsXG4gICAgICAgIGNoZWNrQ2FuUmV0dXJuRm9jdXM6IHRoaXMuY29uZmlnLmNoZWNrQ2FuUmV0dXJuRm9jdXMsXG4gICAgICAgIC4uLmRlYWN0aXZhdGVPcHRpb25zXG4gICAgICB9O1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc3RhdGUuZGVsYXlJbml0aWFsRm9jdXNUaW1lcik7XG4gICAgICB0aGlzLnN0YXRlLmRlbGF5SW5pdGlhbEZvY3VzVGltZXIgPSB2b2lkIDA7XG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgdGhpcy5zdGF0ZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc3RhdGUucGF1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLnVwZGF0ZU9ic2VydmVkTm9kZXMoKTtcbiAgICAgIGFjdGl2ZUZvY3VzVHJhcHMuZGVhY3RpdmF0ZVRyYXAodGhpcy50cmFwU3RhY2ssIHRoaXMpO1xuICAgICAgY29uc3Qgb25EZWFjdGl2YXRlID0gdGhpcy5nZXRPcHRpb24ob3B0aW9ucywgXCJvbkRlYWN0aXZhdGVcIik7XG4gICAgICBjb25zdCBvblBvc3REZWFjdGl2YXRlID0gdGhpcy5nZXRPcHRpb24ob3B0aW9ucywgXCJvblBvc3REZWFjdGl2YXRlXCIpO1xuICAgICAgY29uc3QgY2hlY2tDYW5SZXR1cm5Gb2N1cyA9IHRoaXMuZ2V0T3B0aW9uKG9wdGlvbnMsIFwiY2hlY2tDYW5SZXR1cm5Gb2N1c1wiKTtcbiAgICAgIGNvbnN0IHJldHVybkZvY3VzID0gdGhpcy5nZXRPcHRpb24ob3B0aW9ucywgXCJyZXR1cm5Gb2N1c1wiLCBcInJldHVybkZvY3VzT25EZWFjdGl2YXRlXCIpO1xuICAgICAgb25EZWFjdGl2YXRlPy4oKTtcbiAgICAgIGNvbnN0IGZpbmlzaERlYWN0aXZhdGlvbiA9ICgpID0+IHtcbiAgICAgICAgZGVsYXkoKCkgPT4ge1xuICAgICAgICAgIGlmIChyZXR1cm5Gb2N1cykge1xuICAgICAgICAgICAgY29uc3QgcmV0dXJuRm9jdXNOb2RlID0gdGhpcy5nZXRSZXR1cm5Gb2N1c05vZGUodGhpcy5zdGF0ZS5ub2RlRm9jdXNlZEJlZm9yZUFjdGl2YXRpb24pO1xuICAgICAgICAgICAgdGhpcy50cnlGb2N1cyhyZXR1cm5Gb2N1c05vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvblBvc3REZWFjdGl2YXRlPy4oKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgICAgaWYgKHJldHVybkZvY3VzICYmIGNoZWNrQ2FuUmV0dXJuRm9jdXMpIHtcbiAgICAgICAgY29uc3QgcmV0dXJuRm9jdXNOb2RlID0gdGhpcy5nZXRSZXR1cm5Gb2N1c05vZGUodGhpcy5zdGF0ZS5ub2RlRm9jdXNlZEJlZm9yZUFjdGl2YXRpb24pO1xuICAgICAgICBjaGVja0NhblJldHVybkZvY3VzKHJldHVybkZvY3VzTm9kZSkudGhlbihmaW5pc2hEZWFjdGl2YXRpb24sIGZpbmlzaERlYWN0aXZhdGlvbik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgZmluaXNoRGVhY3RpdmF0aW9uKCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGF1c2VcIiwgKHBhdXNlT3B0aW9ucykgPT4ge1xuICAgICAgaWYgKHRoaXMuc3RhdGUucGF1c2VkIHx8ICF0aGlzLnN0YXRlLmFjdGl2ZSkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGNvbnN0IG9uUGF1c2UgPSB0aGlzLmdldE9wdGlvbihwYXVzZU9wdGlvbnMsIFwib25QYXVzZVwiKTtcbiAgICAgIGNvbnN0IG9uUG9zdFBhdXNlID0gdGhpcy5nZXRPcHRpb24ocGF1c2VPcHRpb25zLCBcIm9uUG9zdFBhdXNlXCIpO1xuICAgICAgdGhpcy5zdGF0ZS5wYXVzZWQgPSB0cnVlO1xuICAgICAgb25QYXVzZT8uKCk7XG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgdGhpcy51cGRhdGVPYnNlcnZlZE5vZGVzKCk7XG4gICAgICBvblBvc3RQYXVzZT8uKCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidW5wYXVzZVwiLCAodW5wYXVzZU9wdGlvbnMpID0+IHtcbiAgICAgIGlmICghdGhpcy5zdGF0ZS5wYXVzZWQgfHwgIXRoaXMuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgY29uc3Qgb25VbnBhdXNlID0gdGhpcy5nZXRPcHRpb24odW5wYXVzZU9wdGlvbnMsIFwib25VbnBhdXNlXCIpO1xuICAgICAgY29uc3Qgb25Qb3N0VW5wYXVzZSA9IHRoaXMuZ2V0T3B0aW9uKHVucGF1c2VPcHRpb25zLCBcIm9uUG9zdFVucGF1c2VcIik7XG4gICAgICB0aGlzLnN0YXRlLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgb25VbnBhdXNlPy4oKTtcbiAgICAgIHRoaXMudXBkYXRlVGFiYmFibGVOb2RlcygpO1xuICAgICAgdGhpcy5hZGRMaXN0ZW5lcnMoKTtcbiAgICAgIHRoaXMudXBkYXRlT2JzZXJ2ZWROb2RlcygpO1xuICAgICAgb25Qb3N0VW5wYXVzZT8uKCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidXBkYXRlQ29udGFpbmVyRWxlbWVudHNcIiwgKGNvbnRhaW5lckVsZW1lbnRzKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlLmNvbnRhaW5lcnMgPSBBcnJheS5pc0FycmF5KGNvbnRhaW5lckVsZW1lbnRzKSA/IGNvbnRhaW5lckVsZW1lbnRzLmZpbHRlcihCb29sZWFuKSA6IFtjb250YWluZXJFbGVtZW50c10uZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgaWYgKHRoaXMuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlVGFiYmFibGVOb2RlcygpO1xuICAgICAgfVxuICAgICAgdGhpcy51cGRhdGVPYnNlcnZlZE5vZGVzKCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0UmV0dXJuRm9jdXNOb2RlXCIsIChwcmV2aW91c0FjdGl2ZUVsZW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmdldE5vZGVGb3JPcHRpb24oXCJzZXRSZXR1cm5Gb2N1c1wiLCB7XG4gICAgICAgIHBhcmFtczogW3ByZXZpb3VzQWN0aXZlRWxlbWVudF1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5vZGUgPyBub2RlIDogbm9kZSA9PT0gZmFsc2UgPyBmYWxzZSA6IHByZXZpb3VzQWN0aXZlRWxlbWVudDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0T3B0aW9uXCIsIChjb25maWdPdmVycmlkZU9wdGlvbnMsIG9wdGlvbk5hbWUsIGNvbmZpZ09wdGlvbk5hbWUpID0+IHtcbiAgICAgIHJldHVybiBjb25maWdPdmVycmlkZU9wdGlvbnMgJiYgY29uZmlnT3ZlcnJpZGVPcHRpb25zW29wdGlvbk5hbWVdICE9PSB2b2lkIDAgPyBjb25maWdPdmVycmlkZU9wdGlvbnNbb3B0aW9uTmFtZV0gOiAoXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgICAgdGhpcy5jb25maWdbY29uZmlnT3B0aW9uTmFtZSB8fCBvcHRpb25OYW1lXVxuICAgICAgKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0Tm9kZUZvck9wdGlvblwiLCAob3B0aW9uTmFtZSwgeyBoYXNGYWxsYmFjayA9IGZhbHNlLCBwYXJhbXMgPSBbXSB9ID0ge30pID0+IHtcbiAgICAgIGxldCBvcHRpb25WYWx1ZSA9IHRoaXMuY29uZmlnW29wdGlvbk5hbWVdO1xuICAgICAgaWYgKHR5cGVvZiBvcHRpb25WYWx1ZSA9PT0gXCJmdW5jdGlvblwiKSBvcHRpb25WYWx1ZSA9IG9wdGlvblZhbHVlKC4uLnBhcmFtcyk7XG4gICAgICBpZiAob3B0aW9uVmFsdWUgPT09IHRydWUpIG9wdGlvblZhbHVlID0gdm9pZCAwO1xuICAgICAgaWYgKCFvcHRpb25WYWx1ZSkge1xuICAgICAgICBpZiAob3B0aW9uVmFsdWUgPT09IHZvaWQgMCB8fCBvcHRpb25WYWx1ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICByZXR1cm4gb3B0aW9uVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGAke29wdGlvbk5hbWV9XFxgIHdhcyBzcGVjaWZpZWQgYnV0IHdhcyBub3QgYSBub2RlLCBvciBkaWQgbm90IHJldHVybiBhIG5vZGVgKTtcbiAgICAgIH1cbiAgICAgIGxldCBub2RlID0gb3B0aW9uVmFsdWU7XG4gICAgICBpZiAodHlwZW9mIG9wdGlvblZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbm9kZSA9IHRoaXMuZG9jLnF1ZXJ5U2VsZWN0b3Iob3B0aW9uVmFsdWUpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7b3B0aW9uTmFtZX1cXGAgYXBwZWFycyB0byBiZSBhbiBpbnZhbGlkIHNlbGVjdG9yOyBlcnJvcj1cIiR7ZXJyLm1lc3NhZ2V9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgICBpZiAoIWhhc0ZhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFxcYCR7b3B0aW9uTmFtZX1cXGAgYXMgc2VsZWN0b3IgcmVmZXJzIHRvIG5vIGtub3duIG5vZGVgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJmaW5kTmV4dE5hdk5vZGVcIiwgKG9wdHMpID0+IHtcbiAgICAgIGNvbnN0IHsgZXZlbnQsIGlzQmFja3dhcmQgPSBmYWxzZSB9ID0gb3B0cztcbiAgICAgIGNvbnN0IHRhcmdldCA9IG9wdHMudGFyZ2V0IHx8IGdldEV2ZW50VGFyZ2V0KGV2ZW50KTtcbiAgICAgIHRoaXMudXBkYXRlVGFiYmFibGVOb2RlcygpO1xuICAgICAgbGV0IGRlc3RpbmF0aW9uTm9kZSA9IG51bGw7XG4gICAgICBpZiAodGhpcy5zdGF0ZS50YWJiYWJsZUdyb3Vwcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lckluZGV4ID0gdGhpcy5maW5kQ29udGFpbmVySW5kZXgodGFyZ2V0LCBldmVudCk7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lckdyb3VwID0gY29udGFpbmVySW5kZXggPj0gMCA/IHRoaXMuc3RhdGUuY29udGFpbmVyR3JvdXBzW2NvbnRhaW5lckluZGV4XSA6IHZvaWQgMDtcbiAgICAgICAgaWYgKGNvbnRhaW5lckluZGV4IDwgMCkge1xuICAgICAgICAgIGlmIChpc0JhY2t3YXJkKSB7XG4gICAgICAgICAgICBkZXN0aW5hdGlvbk5vZGUgPSB0aGlzLnN0YXRlLnRhYmJhYmxlR3JvdXBzW3RoaXMuc3RhdGUudGFiYmFibGVHcm91cHMubGVuZ3RoIC0gMV0ubGFzdFRhYmJhYmxlTm9kZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVzdGluYXRpb25Ob2RlID0gdGhpcy5zdGF0ZS50YWJiYWJsZUdyb3Vwc1swXS5maXJzdFRhYmJhYmxlTm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCYWNrd2FyZCkge1xuICAgICAgICAgIGxldCBzdGFydE9mR3JvdXBJbmRleCA9IHRoaXMuc3RhdGUudGFiYmFibGVHcm91cHMuZmluZEluZGV4KFxuICAgICAgICAgICAgKHsgZmlyc3RUYWJiYWJsZU5vZGUgfSkgPT4gdGFyZ2V0ID09PSBmaXJzdFRhYmJhYmxlTm9kZVxuICAgICAgICAgICk7XG4gICAgICAgICAgaWYgKHN0YXJ0T2ZHcm91cEluZGV4IDwgMCAmJiAoY29udGFpbmVyR3JvdXA/LmNvbnRhaW5lciA9PT0gdGFyZ2V0IHx8IGlzRm9jdXNhYmxlKHRhcmdldCkgJiYgIWlzVGFiYmFibGUodGFyZ2V0KSAmJiAhY29udGFpbmVyR3JvdXA/Lm5leHRUYWJiYWJsZU5vZGUodGFyZ2V0LCBmYWxzZSkpKSB7XG4gICAgICAgICAgICBzdGFydE9mR3JvdXBJbmRleCA9IGNvbnRhaW5lckluZGV4O1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc3RhcnRPZkdyb3VwSW5kZXggPj0gMCkge1xuICAgICAgICAgICAgY29uc3QgZGVzdGluYXRpb25Hcm91cEluZGV4ID0gc3RhcnRPZkdyb3VwSW5kZXggPT09IDAgPyB0aGlzLnN0YXRlLnRhYmJhYmxlR3JvdXBzLmxlbmd0aCAtIDEgOiBzdGFydE9mR3JvdXBJbmRleCAtIDE7XG4gICAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbkdyb3VwID0gdGhpcy5zdGF0ZS50YWJiYWJsZUdyb3Vwc1tkZXN0aW5hdGlvbkdyb3VwSW5kZXhdO1xuICAgICAgICAgICAgZGVzdGluYXRpb25Ob2RlID0gZ2V0VGFiSW5kZXgodGFyZ2V0KSA+PSAwID8gZGVzdGluYXRpb25Hcm91cC5sYXN0VGFiYmFibGVOb2RlIDogZGVzdGluYXRpb25Hcm91cC5sYXN0RG9tVGFiYmFibGVOb2RlO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIWlzVGFiRXZlbnQoZXZlbnQpKSB7XG4gICAgICAgICAgICBkZXN0aW5hdGlvbk5vZGUgPSBjb250YWluZXJHcm91cD8ubmV4dFRhYmJhYmxlTm9kZSh0YXJnZXQsIGZhbHNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGV0IGxhc3RPZkdyb3VwSW5kZXggPSB0aGlzLnN0YXRlLnRhYmJhYmxlR3JvdXBzLmZpbmRJbmRleChcbiAgICAgICAgICAgICh7IGxhc3RUYWJiYWJsZU5vZGUgfSkgPT4gdGFyZ2V0ID09PSBsYXN0VGFiYmFibGVOb2RlXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAobGFzdE9mR3JvdXBJbmRleCA8IDAgJiYgKGNvbnRhaW5lckdyb3VwPy5jb250YWluZXIgPT09IHRhcmdldCB8fCBpc0ZvY3VzYWJsZSh0YXJnZXQpICYmICFpc1RhYmJhYmxlKHRhcmdldCkgJiYgIWNvbnRhaW5lckdyb3VwPy5uZXh0VGFiYmFibGVOb2RlKHRhcmdldCkpKSB7XG4gICAgICAgICAgICBsYXN0T2ZHcm91cEluZGV4ID0gY29udGFpbmVySW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChsYXN0T2ZHcm91cEluZGV4ID49IDApIHtcbiAgICAgICAgICAgIGNvbnN0IGRlc3RpbmF0aW9uR3JvdXBJbmRleCA9IGxhc3RPZkdyb3VwSW5kZXggPT09IHRoaXMuc3RhdGUudGFiYmFibGVHcm91cHMubGVuZ3RoIC0gMSA/IDAgOiBsYXN0T2ZHcm91cEluZGV4ICsgMTtcbiAgICAgICAgICAgIGNvbnN0IGRlc3RpbmF0aW9uR3JvdXAgPSB0aGlzLnN0YXRlLnRhYmJhYmxlR3JvdXBzW2Rlc3RpbmF0aW9uR3JvdXBJbmRleF07XG4gICAgICAgICAgICBkZXN0aW5hdGlvbk5vZGUgPSBnZXRUYWJJbmRleCh0YXJnZXQpID49IDAgPyBkZXN0aW5hdGlvbkdyb3VwLmZpcnN0VGFiYmFibGVOb2RlIDogZGVzdGluYXRpb25Hcm91cC5maXJzdERvbVRhYmJhYmxlTm9kZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKCFpc1RhYkV2ZW50KGV2ZW50KSkge1xuICAgICAgICAgICAgZGVzdGluYXRpb25Ob2RlID0gY29udGFpbmVyR3JvdXA/Lm5leHRUYWJiYWJsZU5vZGUodGFyZ2V0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlc3RpbmF0aW9uTm9kZSA9IHRoaXMuZ2V0Tm9kZUZvck9wdGlvbihcImZhbGxiYWNrRm9jdXNcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGVzdGluYXRpb25Ob2RlO1xuICAgIH0pO1xuICAgIHRoaXMudHJhcFN0YWNrID0gb3B0aW9ucy50cmFwU3RhY2sgfHwgc2hhcmVkVHJhcFN0YWNrO1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgIHJldHVybkZvY3VzT25EZWFjdGl2YXRlOiB0cnVlLFxuICAgICAgZXNjYXBlRGVhY3RpdmF0ZXM6IHRydWUsXG4gICAgICBkZWxheUluaXRpYWxGb2N1czogdHJ1ZSxcbiAgICAgIGlzS2V5Rm9yd2FyZChlKSB7XG4gICAgICAgIHJldHVybiBpc1RhYkV2ZW50KGUpICYmICFlLnNoaWZ0S2V5O1xuICAgICAgfSxcbiAgICAgIGlzS2V5QmFja3dhcmQoZSkge1xuICAgICAgICByZXR1cm4gaXNUYWJFdmVudChlKSAmJiBlLnNoaWZ0S2V5O1xuICAgICAgfSxcbiAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuICAgIHRoaXMuZG9jID0gY29uZmlnLmRvY3VtZW50IHx8IGdldERvY3VtZW50KEFycmF5LmlzQXJyYXkoZWxlbWVudHMpID8gZWxlbWVudHNbMF0gOiBlbGVtZW50cyk7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgdGhpcy51cGRhdGVDb250YWluZXJFbGVtZW50cyhlbGVtZW50cyk7XG4gICAgdGhpcy5zZXR1cE11dGF0aW9uT2JzZXJ2ZXIoKTtcbiAgfVxuICBnZXQgYWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmFjdGl2ZTtcbiAgfVxuICBnZXQgcGF1c2VkKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnBhdXNlZDtcbiAgfVxuICBmaW5kQ29udGFpbmVySW5kZXgoZWxlbWVudCwgZXZlbnQpIHtcbiAgICBjb25zdCBjb21wb3NlZFBhdGggPSB0eXBlb2YgZXZlbnQ/LmNvbXBvc2VkUGF0aCA9PT0gXCJmdW5jdGlvblwiID8gZXZlbnQuY29tcG9zZWRQYXRoKCkgOiB2b2lkIDA7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUuY29udGFpbmVyR3JvdXBzLmZpbmRJbmRleChcbiAgICAgICh7IGNvbnRhaW5lciwgdGFiYmFibGVOb2RlcyB9KSA9PiBjb250YWluZXIuY29udGFpbnMoZWxlbWVudCkgfHwgY29tcG9zZWRQYXRoPy5pbmNsdWRlcyhjb250YWluZXIpIHx8IHRhYmJhYmxlTm9kZXMuZmluZCgobm9kZSkgPT4gbm9kZSA9PT0gZWxlbWVudClcbiAgICApO1xuICB9XG4gIHVwZGF0ZVRhYmJhYmxlTm9kZXMoKSB7XG4gICAgdGhpcy5zdGF0ZS5jb250YWluZXJHcm91cHMgPSB0aGlzLnN0YXRlLmNvbnRhaW5lcnMubWFwKChjb250YWluZXIpID0+IHtcbiAgICAgIGNvbnN0IHRhYmJhYmxlTm9kZXMgPSBnZXRUYWJiYWJsZXMoY29udGFpbmVyKTtcbiAgICAgIGNvbnN0IGZvY3VzYWJsZU5vZGVzID0gZ2V0Rm9jdXNhYmxlcyhjb250YWluZXIpO1xuICAgICAgY29uc3QgZmlyc3RUYWJiYWJsZU5vZGUgPSB0YWJiYWJsZU5vZGVzLmxlbmd0aCA+IDAgPyB0YWJiYWJsZU5vZGVzWzBdIDogdm9pZCAwO1xuICAgICAgY29uc3QgbGFzdFRhYmJhYmxlTm9kZSA9IHRhYmJhYmxlTm9kZXMubGVuZ3RoID4gMCA/IHRhYmJhYmxlTm9kZXNbdGFiYmFibGVOb2Rlcy5sZW5ndGggLSAxXSA6IHZvaWQgMDtcbiAgICAgIGNvbnN0IGZpcnN0RG9tVGFiYmFibGVOb2RlID0gZm9jdXNhYmxlTm9kZXMuZmluZCgobm9kZSkgPT4gaXNUYWJiYWJsZShub2RlKSk7XG4gICAgICBjb25zdCBsYXN0RG9tVGFiYmFibGVOb2RlID0gZm9jdXNhYmxlTm9kZXMuc2xpY2UoKS5yZXZlcnNlKCkuZmluZCgobm9kZSkgPT4gaXNUYWJiYWJsZShub2RlKSk7XG4gICAgICBjb25zdCBwb3NUYWJJbmRleGVzRm91bmQgPSAhIXRhYmJhYmxlTm9kZXMuZmluZCgobm9kZSkgPT4gZ2V0VGFiSW5kZXgobm9kZSkgPiAwKTtcbiAgICAgIGZ1bmN0aW9uIG5leHRUYWJiYWJsZU5vZGUobm9kZSwgZm9yd2FyZCA9IHRydWUpIHtcbiAgICAgICAgY29uc3Qgbm9kZUlkeCA9IHRhYmJhYmxlTm9kZXMuaW5kZXhPZihub2RlKTtcbiAgICAgICAgaWYgKG5vZGVJZHggPCAwKSB7XG4gICAgICAgICAgaWYgKGZvcndhcmQpIHtcbiAgICAgICAgICAgIHJldHVybiBmb2N1c2FibGVOb2Rlcy5zbGljZShmb2N1c2FibGVOb2Rlcy5pbmRleE9mKG5vZGUpICsgMSkuZmluZCgoZWwpID0+IGlzVGFiYmFibGUoZWwpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZvY3VzYWJsZU5vZGVzLnNsaWNlKDAsIGZvY3VzYWJsZU5vZGVzLmluZGV4T2Yobm9kZSkpLnJldmVyc2UoKS5maW5kKChlbCkgPT4gaXNUYWJiYWJsZShlbCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0YWJiYWJsZU5vZGVzW25vZGVJZHggKyAoZm9yd2FyZCA/IDEgOiAtMSldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29udGFpbmVyLFxuICAgICAgICB0YWJiYWJsZU5vZGVzLFxuICAgICAgICBmb2N1c2FibGVOb2RlcyxcbiAgICAgICAgcG9zVGFiSW5kZXhlc0ZvdW5kLFxuICAgICAgICBmaXJzdFRhYmJhYmxlTm9kZSxcbiAgICAgICAgbGFzdFRhYmJhYmxlTm9kZSxcbiAgICAgICAgZmlyc3REb21UYWJiYWJsZU5vZGUsXG4gICAgICAgIGxhc3REb21UYWJiYWJsZU5vZGUsXG4gICAgICAgIG5leHRUYWJiYWJsZU5vZGVcbiAgICAgIH07XG4gICAgfSk7XG4gICAgdGhpcy5zdGF0ZS50YWJiYWJsZUdyb3VwcyA9IHRoaXMuc3RhdGUuY29udGFpbmVyR3JvdXBzLmZpbHRlcigoZ3JvdXApID0+IGdyb3VwLnRhYmJhYmxlTm9kZXMubGVuZ3RoID4gMCk7XG4gICAgaWYgKHRoaXMuc3RhdGUudGFiYmFibGVHcm91cHMubGVuZ3RoIDw9IDAgJiYgIXRoaXMuZ2V0Tm9kZUZvck9wdGlvbihcImZhbGxiYWNrRm9jdXNcIikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJZb3VyIGZvY3VzLXRyYXAgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBjb250YWluZXIgd2l0aCBhdCBsZWFzdCBvbmUgdGFiYmFibGUgbm9kZSBpbiBpdCBhdCBhbGwgdGltZXNcIlxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RhdGUuY29udGFpbmVyR3JvdXBzLmZpbmQoKGcpID0+IGcucG9zVGFiSW5kZXhlc0ZvdW5kKSAmJiB0aGlzLnN0YXRlLmNvbnRhaW5lckdyb3Vwcy5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiQXQgbGVhc3Qgb25lIG5vZGUgd2l0aCBhIHBvc2l0aXZlIHRhYmluZGV4IHdhcyBmb3VuZCBpbiBvbmUgb2YgeW91ciBmb2N1cy10cmFwJ3MgbXVsdGlwbGUgY29udGFpbmVycy4gUG9zaXRpdmUgdGFiaW5kZXhlcyBhcmUgb25seSBzdXBwb3J0ZWQgaW4gc2luZ2xlLWNvbnRhaW5lciBmb2N1cy10cmFwcy5cIlxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgYWRkTGlzdGVuZXJzKCkge1xuICAgIGlmICghdGhpcy5zdGF0ZS5hY3RpdmUpIHJldHVybjtcbiAgICBhY3RpdmVGb2N1c1RyYXBzLmFjdGl2YXRlVHJhcCh0aGlzLnRyYXBTdGFjaywgdGhpcyk7XG4gICAgdGhpcy5zdGF0ZS5kZWxheUluaXRpYWxGb2N1c1RpbWVyID0gdGhpcy5jb25maWcuZGVsYXlJbml0aWFsRm9jdXMgPyBkZWxheSgoKSA9PiB7XG4gICAgICB0aGlzLnRyeUZvY3VzKHRoaXMuZ2V0SW5pdGlhbEZvY3VzTm9kZSgpKTtcbiAgICB9KSA6IHRoaXMudHJ5Rm9jdXModGhpcy5nZXRJbml0aWFsRm9jdXNOb2RlKCkpO1xuICAgIHRoaXMubGlzdGVuZXJDbGVhbnVwcy5wdXNoKFxuICAgICAgYWRkRG9tRXZlbnQodGhpcy5kb2MsIFwiZm9jdXNpblwiLCB0aGlzLmhhbmRsZUZvY3VzLCB0cnVlKSxcbiAgICAgIGFkZERvbUV2ZW50KHRoaXMuZG9jLCBcIm1vdXNlZG93blwiLCB0aGlzLmhhbmRsZVBvaW50ZXJEb3duLCB7IGNhcHR1cmU6IHRydWUsIHBhc3NpdmU6IGZhbHNlIH0pLFxuICAgICAgYWRkRG9tRXZlbnQodGhpcy5kb2MsIFwidG91Y2hzdGFydFwiLCB0aGlzLmhhbmRsZVBvaW50ZXJEb3duLCB7IGNhcHR1cmU6IHRydWUsIHBhc3NpdmU6IGZhbHNlIH0pLFxuICAgICAgYWRkRG9tRXZlbnQodGhpcy5kb2MsIFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVDbGljaywgeyBjYXB0dXJlOiB0cnVlLCBwYXNzaXZlOiBmYWxzZSB9KSxcbiAgICAgIGFkZERvbUV2ZW50KHRoaXMuZG9jLCBcImtleWRvd25cIiwgdGhpcy5oYW5kbGVUYWJLZXksIHsgY2FwdHVyZTogdHJ1ZSwgcGFzc2l2ZTogZmFsc2UgfSksXG4gICAgICBhZGREb21FdmVudCh0aGlzLmRvYywgXCJrZXlkb3duXCIsIHRoaXMuaGFuZGxlRXNjYXBlS2V5KVxuICAgICk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgIGlmICghdGhpcy5zdGF0ZS5hY3RpdmUpIHJldHVybjtcbiAgICB0aGlzLmxpc3RlbmVyQ2xlYW51cHMuZm9yRWFjaCgoY2xlYW51cCkgPT4gY2xlYW51cCgpKTtcbiAgICB0aGlzLmxpc3RlbmVyQ2xlYW51cHMgPSBbXTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBhY3RpdmF0ZShhY3RpdmF0ZU9wdGlvbnMpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5hY3RpdmUpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBjb25zdCBvbkFjdGl2YXRlID0gdGhpcy5nZXRPcHRpb24oYWN0aXZhdGVPcHRpb25zLCBcIm9uQWN0aXZhdGVcIik7XG4gICAgY29uc3Qgb25Qb3N0QWN0aXZhdGUgPSB0aGlzLmdldE9wdGlvbihhY3RpdmF0ZU9wdGlvbnMsIFwib25Qb3N0QWN0aXZhdGVcIik7XG4gICAgY29uc3QgY2hlY2tDYW5Gb2N1c1RyYXAgPSB0aGlzLmdldE9wdGlvbihhY3RpdmF0ZU9wdGlvbnMsIFwiY2hlY2tDYW5Gb2N1c1RyYXBcIik7XG4gICAgaWYgKCFjaGVja0NhbkZvY3VzVHJhcCkge1xuICAgICAgdGhpcy51cGRhdGVUYWJiYWJsZU5vZGVzKCk7XG4gICAgfVxuICAgIHRoaXMuc3RhdGUuYWN0aXZlID0gdHJ1ZTtcbiAgICB0aGlzLnN0YXRlLnBhdXNlZCA9IGZhbHNlO1xuICAgIHRoaXMuc3RhdGUubm9kZUZvY3VzZWRCZWZvcmVBY3RpdmF0aW9uID0gdGhpcy5kb2MuYWN0aXZlRWxlbWVudCB8fCBudWxsO1xuICAgIG9uQWN0aXZhdGU/LigpO1xuICAgIGNvbnN0IGZpbmlzaEFjdGl2YXRpb24gPSAoKSA9PiB7XG4gICAgICBpZiAoY2hlY2tDYW5Gb2N1c1RyYXApIHtcbiAgICAgICAgdGhpcy51cGRhdGVUYWJiYWJsZU5vZGVzKCk7XG4gICAgICB9XG4gICAgICB0aGlzLmFkZExpc3RlbmVycygpO1xuICAgICAgdGhpcy51cGRhdGVPYnNlcnZlZE5vZGVzKCk7XG4gICAgICBvblBvc3RBY3RpdmF0ZT8uKCk7XG4gICAgfTtcbiAgICBpZiAoY2hlY2tDYW5Gb2N1c1RyYXApIHtcbiAgICAgIGNoZWNrQ2FuRm9jdXNUcmFwKHRoaXMuc3RhdGUuY29udGFpbmVycy5jb25jYXQoKSkudGhlbihmaW5pc2hBY3RpdmF0aW9uLCBmaW5pc2hBY3RpdmF0aW9uKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBmaW5pc2hBY3RpdmF0aW9uKCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn07XG52YXIgaXNUYWJFdmVudCA9IChldmVudCkgPT4gZXZlbnQua2V5ID09PSBcIlRhYlwiO1xudmFyIHZhbHVlT3JIYW5kbGVyID0gKHZhbHVlLCAuLi5wYXJhbXMpID0+IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gdmFsdWUoLi4ucGFyYW1zKSA6IHZhbHVlO1xudmFyIGlzRXNjYXBlRXZlbnQgPSAoZXZlbnQpID0+ICFldmVudC5pc0NvbXBvc2luZyAmJiBldmVudC5rZXkgPT09IFwiRXNjYXBlXCI7XG52YXIgZGVsYXkgPSAoZm4pID0+IHNldFRpbWVvdXQoZm4sIDApO1xudmFyIGlzU2VsZWN0YWJsZUlucHV0ID0gKG5vZGUpID0+IG5vZGUubG9jYWxOYW1lID09PSBcImlucHV0XCIgJiYgXCJzZWxlY3RcIiBpbiBub2RlICYmIHR5cGVvZiBub2RlLnNlbGVjdCA9PT0gXCJmdW5jdGlvblwiO1xuXG4vLyBzcmMvaW5kZXgudHNcbmZ1bmN0aW9uIHRyYXBGb2N1cyhlbCwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCB0cmFwO1xuICBjb25zdCBjbGVhbnVwID0gcmFmKCgpID0+IHtcbiAgICBjb25zdCBjb250ZW50RWwgPSB0eXBlb2YgZWwgPT09IFwiZnVuY3Rpb25cIiA/IGVsKCkgOiBlbDtcbiAgICBpZiAoIWNvbnRlbnRFbCkgcmV0dXJuO1xuICAgIHRyYXAgPSBuZXcgRm9jdXNUcmFwKGNvbnRlbnRFbCwge1xuICAgICAgZXNjYXBlRGVhY3RpdmF0ZXM6IGZhbHNlLFxuICAgICAgYWxsb3dPdXRzaWRlQ2xpY2s6IHRydWUsXG4gICAgICBwcmV2ZW50U2Nyb2xsOiB0cnVlLFxuICAgICAgcmV0dXJuRm9jdXNPbkRlYWN0aXZhdGU6IHRydWUsXG4gICAgICBkZWxheUluaXRpYWxGb2N1czogZmFsc2UsXG4gICAgICBmYWxsYmFja0ZvY3VzOiBjb250ZW50RWwsXG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgZG9jdW1lbnQ6IGdldERvY3VtZW50KGNvbnRlbnRFbClcbiAgICB9KTtcbiAgICB0cnkge1xuICAgICAgdHJhcC5hY3RpdmF0ZSgpO1xuICAgIH0gY2F0Y2gge1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHRyYXA/LmRlYWN0aXZhdGUoKTtcbiAgICBjbGVhbnVwKCk7XG4gIH07XG59XG5cbmV4cG9ydCB7IEZvY3VzVHJhcCwgdHJhcEZvY3VzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   isFocusVisible: () => (/* binding */ isFocusVisible),\n/* harmony export */   listenerMap: () => (/* binding */ listenerMap),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nfunction isValidKey(e) {\n  return !(e.metaKey || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */ new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e) : null;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */ new Set();\nvar listenerMap = /* @__PURE__ */ new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isVirtualClick)(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e);\n  if (target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target) || target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root))) {\n    return;\n  }\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  let focus = win.HTMLElement.prototype.focus;\n  function patchedFocus() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  }\n  Object.defineProperty(win.HTMLElement.prototype, \"focus\", {\n    configurable: true,\n    value: patchedFocus\n  });\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\n    \"beforeunload\",\n    () => {\n      tearDownWindowFocusTracking(root);\n    },\n    { once: true }\n  );\n  listenerMap.set(win, { focus });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const { onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange({ modality: currentModality });\n  const handler = () => onChange({ modality: currentModality });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const { isTextInput, autoFocus, onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({ isFocusVisible: autoFocus || isFocusVisible(), modality: currentModality });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({ isFocusVisible: isFocusVisible(), modality });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/highlight-word/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@zag-js/highlight-word/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   highlightWord: () => (/* binding */ highlightWord)\n/* harmony export */ });\n// src/normalize-span.ts\nvar normalizeSpan = (spans, len) => {\n  const result = [];\n  const append = (start, end, match) => {\n    if (end - start > 0) result.push({ start, end, match });\n  };\n  if (spans.length === 0) {\n    append(0, len, false);\n  } else {\n    let lastIndex = 0;\n    for (const chunk of spans) {\n      append(lastIndex, chunk.start, false);\n      append(chunk.start, chunk.end, true);\n      lastIndex = chunk.end;\n    }\n    append(lastIndex, len, false);\n  }\n  return result;\n};\n\n// src/escape-regex.ts\nvar escapeRegex = (term) => term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, (char) => `\\\\${char}`);\n\n// src/highlight-first.ts\nfunction highlightFirst(props) {\n  const { text, query, ignoreCase, exactMatch } = props;\n  if (exactMatch) {\n    const escapedQuery = escapeRegex(query);\n    const regex = new RegExp(`\\\\b(${escapedQuery})\\\\b`, ignoreCase ? \"i\" : \"\");\n    const match = text.match(regex);\n    if (!match || match.index === void 0) {\n      return [{ text, match: false }];\n    }\n    const start2 = match.index;\n    const end2 = start2 + match[0].length;\n    const spans2 = [{ start: start2, end: end2 }];\n    return normalizeSpan(spans2, text.length).map((chunk) => ({\n      text: text.slice(chunk.start, chunk.end),\n      match: !!chunk.match\n    }));\n  }\n  const searchText = ignoreCase ? text.toLowerCase() : text;\n  const searchQuery = ignoreCase ? typeof query === \"string\" ? query.toLowerCase() : query : query;\n  const start = typeof searchText === \"string\" ? searchText.indexOf(searchQuery) : -1;\n  if (start === -1) {\n    return [{ text, match: false }];\n  }\n  const end = start + searchQuery.length;\n  const spans = [{ start, end }];\n  return normalizeSpan(spans, text.length).map((chunk) => ({\n    text: text.slice(chunk.start, chunk.end),\n    match: !!chunk.match\n  }));\n}\n\n// src/highlight-multiple.ts\nvar buildRegex = (queryProp, flags, exactMatch) => {\n  const query = queryProp.filter(Boolean).map((text) => escapeRegex(text));\n  const pattern = exactMatch ? `\\\\b(${query.join(\"|\")})\\\\b` : `(${query.join(\"|\")})`;\n  return new RegExp(pattern, flags);\n};\nvar getRegexFlags = (ignoreCase, matchAll = true) => `${ignoreCase ? \"i\" : \"\"}${matchAll ? \"g\" : \"\"}`;\nfunction highlightMultiple(props) {\n  const { text, query, ignoreCase, matchAll, exactMatch } = props;\n  if (query.length === 0) {\n    return [{ text, match: false }];\n  }\n  const flags = getRegexFlags(ignoreCase, matchAll);\n  const regex = buildRegex(Array.isArray(query) ? query : [query], flags, exactMatch);\n  const spans = [...text.matchAll(regex)].map((match) => ({\n    start: match.index || 0,\n    end: (match.index || 0) + match[0].length\n  }));\n  return normalizeSpan(spans, props.text.length).map((chunk) => ({\n    text: props.text.slice(chunk.start, chunk.end),\n    match: !!chunk.match\n  }));\n}\n\n// src/highlight.ts\nvar highlightWord = (props) => {\n  if (props.matchAll == null) {\n    props.matchAll = Array.isArray(props.query);\n  }\n  if (!props.matchAll && Array.isArray(props.query)) {\n    throw new Error(\"matchAll must be true when using multiple queries\");\n  }\n  return props.matchAll ? highlightMultiple(props) : highlightFirst(props);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9oaWdobGlnaHQtd29yZC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsbUJBQW1CO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdEQUFnRCxnQ0FBZ0MsS0FBSzs7QUFFckY7QUFDQTtBQUNBLFVBQVUsc0NBQXNDO0FBQ2hEO0FBQ0E7QUFDQSxvQ0FBb0MsYUFBYTtBQUNqRDtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMEJBQTBCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEM7QUFDQTtBQUNBLG1CQUFtQixZQUFZO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsZ0JBQWdCLFlBQVksZ0JBQWdCO0FBQ2xGO0FBQ0E7QUFDQSx3REFBd0Qsc0JBQXNCLEVBQUUsb0JBQW9CO0FBQ3BHO0FBQ0EsVUFBVSxnREFBZ0Q7QUFDMUQ7QUFDQSxjQUFjLG9CQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvaGlnaGxpZ2h0LXdvcmQvZGlzdC9pbmRleC5tanM/M2JkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbm9ybWFsaXplLXNwYW4udHNcbnZhciBub3JtYWxpemVTcGFuID0gKHNwYW5zLCBsZW4pID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGNvbnN0IGFwcGVuZCA9IChzdGFydCwgZW5kLCBtYXRjaCkgPT4ge1xuICAgIGlmIChlbmQgLSBzdGFydCA+IDApIHJlc3VsdC5wdXNoKHsgc3RhcnQsIGVuZCwgbWF0Y2ggfSk7XG4gIH07XG4gIGlmIChzcGFucy5sZW5ndGggPT09IDApIHtcbiAgICBhcHBlbmQoMCwgbGVuLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgbGV0IGxhc3RJbmRleCA9IDA7XG4gICAgZm9yIChjb25zdCBjaHVuayBvZiBzcGFucykge1xuICAgICAgYXBwZW5kKGxhc3RJbmRleCwgY2h1bmsuc3RhcnQsIGZhbHNlKTtcbiAgICAgIGFwcGVuZChjaHVuay5zdGFydCwgY2h1bmsuZW5kLCB0cnVlKTtcbiAgICAgIGxhc3RJbmRleCA9IGNodW5rLmVuZDtcbiAgICB9XG4gICAgYXBwZW5kKGxhc3RJbmRleCwgbGVuLCBmYWxzZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIHNyYy9lc2NhcGUtcmVnZXgudHNcbnZhciBlc2NhcGVSZWdleCA9ICh0ZXJtKSA9PiB0ZXJtLnJlcGxhY2UoL1t8XFxcXHt9KClbXFxdXiQrKj8uLV0vZywgKGNoYXIpID0+IGBcXFxcJHtjaGFyfWApO1xuXG4vLyBzcmMvaGlnaGxpZ2h0LWZpcnN0LnRzXG5mdW5jdGlvbiBoaWdobGlnaHRGaXJzdChwcm9wcykge1xuICBjb25zdCB7IHRleHQsIHF1ZXJ5LCBpZ25vcmVDYXNlLCBleGFjdE1hdGNoIH0gPSBwcm9wcztcbiAgaWYgKGV4YWN0TWF0Y2gpIHtcbiAgICBjb25zdCBlc2NhcGVkUXVlcnkgPSBlc2NhcGVSZWdleChxdWVyeSk7XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBcXFxcYigke2VzY2FwZWRRdWVyeX0pXFxcXGJgLCBpZ25vcmVDYXNlID8gXCJpXCIgOiBcIlwiKTtcbiAgICBjb25zdCBtYXRjaCA9IHRleHQubWF0Y2gocmVnZXgpO1xuICAgIGlmICghbWF0Y2ggfHwgbWF0Y2guaW5kZXggPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIFt7IHRleHQsIG1hdGNoOiBmYWxzZSB9XTtcbiAgICB9XG4gICAgY29uc3Qgc3RhcnQyID0gbWF0Y2guaW5kZXg7XG4gICAgY29uc3QgZW5kMiA9IHN0YXJ0MiArIG1hdGNoWzBdLmxlbmd0aDtcbiAgICBjb25zdCBzcGFuczIgPSBbeyBzdGFydDogc3RhcnQyLCBlbmQ6IGVuZDIgfV07XG4gICAgcmV0dXJuIG5vcm1hbGl6ZVNwYW4oc3BhbnMyLCB0ZXh0Lmxlbmd0aCkubWFwKChjaHVuaykgPT4gKHtcbiAgICAgIHRleHQ6IHRleHQuc2xpY2UoY2h1bmsuc3RhcnQsIGNodW5rLmVuZCksXG4gICAgICBtYXRjaDogISFjaHVuay5tYXRjaFxuICAgIH0pKTtcbiAgfVxuICBjb25zdCBzZWFyY2hUZXh0ID0gaWdub3JlQ2FzZSA/IHRleHQudG9Mb3dlckNhc2UoKSA6IHRleHQ7XG4gIGNvbnN0IHNlYXJjaFF1ZXJ5ID0gaWdub3JlQ2FzZSA/IHR5cGVvZiBxdWVyeSA9PT0gXCJzdHJpbmdcIiA/IHF1ZXJ5LnRvTG93ZXJDYXNlKCkgOiBxdWVyeSA6IHF1ZXJ5O1xuICBjb25zdCBzdGFydCA9IHR5cGVvZiBzZWFyY2hUZXh0ID09PSBcInN0cmluZ1wiID8gc2VhcmNoVGV4dC5pbmRleE9mKHNlYXJjaFF1ZXJ5KSA6IC0xO1xuICBpZiAoc3RhcnQgPT09IC0xKSB7XG4gICAgcmV0dXJuIFt7IHRleHQsIG1hdGNoOiBmYWxzZSB9XTtcbiAgfVxuICBjb25zdCBlbmQgPSBzdGFydCArIHNlYXJjaFF1ZXJ5Lmxlbmd0aDtcbiAgY29uc3Qgc3BhbnMgPSBbeyBzdGFydCwgZW5kIH1dO1xuICByZXR1cm4gbm9ybWFsaXplU3BhbihzcGFucywgdGV4dC5sZW5ndGgpLm1hcCgoY2h1bmspID0+ICh7XG4gICAgdGV4dDogdGV4dC5zbGljZShjaHVuay5zdGFydCwgY2h1bmsuZW5kKSxcbiAgICBtYXRjaDogISFjaHVuay5tYXRjaFxuICB9KSk7XG59XG5cbi8vIHNyYy9oaWdobGlnaHQtbXVsdGlwbGUudHNcbnZhciBidWlsZFJlZ2V4ID0gKHF1ZXJ5UHJvcCwgZmxhZ3MsIGV4YWN0TWF0Y2gpID0+IHtcbiAgY29uc3QgcXVlcnkgPSBxdWVyeVByb3AuZmlsdGVyKEJvb2xlYW4pLm1hcCgodGV4dCkgPT4gZXNjYXBlUmVnZXgodGV4dCkpO1xuICBjb25zdCBwYXR0ZXJuID0gZXhhY3RNYXRjaCA/IGBcXFxcYigke3F1ZXJ5LmpvaW4oXCJ8XCIpfSlcXFxcYmAgOiBgKCR7cXVlcnkuam9pbihcInxcIil9KWA7XG4gIHJldHVybiBuZXcgUmVnRXhwKHBhdHRlcm4sIGZsYWdzKTtcbn07XG52YXIgZ2V0UmVnZXhGbGFncyA9IChpZ25vcmVDYXNlLCBtYXRjaEFsbCA9IHRydWUpID0+IGAke2lnbm9yZUNhc2UgPyBcImlcIiA6IFwiXCJ9JHttYXRjaEFsbCA/IFwiZ1wiIDogXCJcIn1gO1xuZnVuY3Rpb24gaGlnaGxpZ2h0TXVsdGlwbGUocHJvcHMpIHtcbiAgY29uc3QgeyB0ZXh0LCBxdWVyeSwgaWdub3JlQ2FzZSwgbWF0Y2hBbGwsIGV4YWN0TWF0Y2ggfSA9IHByb3BzO1xuICBpZiAocXVlcnkubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFt7IHRleHQsIG1hdGNoOiBmYWxzZSB9XTtcbiAgfVxuICBjb25zdCBmbGFncyA9IGdldFJlZ2V4RmxhZ3MoaWdub3JlQ2FzZSwgbWF0Y2hBbGwpO1xuICBjb25zdCByZWdleCA9IGJ1aWxkUmVnZXgoQXJyYXkuaXNBcnJheShxdWVyeSkgPyBxdWVyeSA6IFtxdWVyeV0sIGZsYWdzLCBleGFjdE1hdGNoKTtcbiAgY29uc3Qgc3BhbnMgPSBbLi4udGV4dC5tYXRjaEFsbChyZWdleCldLm1hcCgobWF0Y2gpID0+ICh7XG4gICAgc3RhcnQ6IG1hdGNoLmluZGV4IHx8IDAsXG4gICAgZW5kOiAobWF0Y2guaW5kZXggfHwgMCkgKyBtYXRjaFswXS5sZW5ndGhcbiAgfSkpO1xuICByZXR1cm4gbm9ybWFsaXplU3BhbihzcGFucywgcHJvcHMudGV4dC5sZW5ndGgpLm1hcCgoY2h1bmspID0+ICh7XG4gICAgdGV4dDogcHJvcHMudGV4dC5zbGljZShjaHVuay5zdGFydCwgY2h1bmsuZW5kKSxcbiAgICBtYXRjaDogISFjaHVuay5tYXRjaFxuICB9KSk7XG59XG5cbi8vIHNyYy9oaWdobGlnaHQudHNcbnZhciBoaWdobGlnaHRXb3JkID0gKHByb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5tYXRjaEFsbCA9PSBudWxsKSB7XG4gICAgcHJvcHMubWF0Y2hBbGwgPSBBcnJheS5pc0FycmF5KHByb3BzLnF1ZXJ5KTtcbiAgfVxuICBpZiAoIXByb3BzLm1hdGNoQWxsICYmIEFycmF5LmlzQXJyYXkocHJvcHMucXVlcnkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwibWF0Y2hBbGwgbXVzdCBiZSB0cnVlIHdoZW4gdXNpbmcgbXVsdGlwbGUgcXVlcmllc1wiKTtcbiAgfVxuICByZXR1cm4gcHJvcHMubWF0Y2hBbGwgPyBoaWdobGlnaHRNdWx0aXBsZShwcm9wcykgOiBoaWdobGlnaHRGaXJzdChwcm9wcyk7XG59O1xuXG5leHBvcnQgeyBoaWdobGlnaHRXb3JkIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/highlight-word/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/hover-card/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/hover-card.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"hoverCard\").parts(\"arrow\", \"arrowTip\", \"trigger\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/hover-card.dom.ts\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `hover-card:${ctx.id}:trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `hover-card:${ctx.id}:content`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `hover-card:${ctx.id}:popper`;\nvar getArrowId = (ctx) => ctx.ids?.arrow ?? `hover-card:${ctx.id}:arrow`;\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\n\n// src/hover-card.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, context, scope } = service;\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      if (prop(\"disabled\")) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        \"data-placement\": context.get(\"currentPlacement\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"POINTER_ENTER\", src: \"trigger\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"POINTER_LEAVE\", src: \"trigger\" });\n        },\n        onFocus() {\n          if (prop(\"disabled\")) return;\n          send({ type: \"TRIGGER_FOCUS\" });\n        },\n        onBlur() {\n          if (prop(\"disabled\")) return;\n          send({ type: \"TRIGGER_BLUR\" });\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        hidden: !open,\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"POINTER_ENTER\", src: \"content\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"POINTER_LEAVE\", src: \"content\" });\n        }\n      });\n    }\n  };\n}\nvar { not, and } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      disabled: false,\n      openDelay: 700,\n      closeDelay: 300,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ prop, bindable }) {\n    return {\n      open: bindable(() => ({\n        defaultValue: prop(\"defaultOpen\"),\n        value: prop(\"open\"),\n        onChange(value) {\n          prop(\"onOpenChange\")?.({ open: value });\n        }\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      isPointer: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  watch({ track, context, action, prop, send }) {\n    track([() => prop(\"disabled\")], () => {\n      if (prop(\"disabled\")) {\n        send({ type: \"CLOSE\", src: \"disabled.change\" });\n      }\n    });\n    track([() => context.get(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      entry: [\"clearIsPointer\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        POINTER_ENTER: {\n          target: \"opening\",\n          actions: [\"setIsPointer\"]\n        },\n        TRIGGER_FOCUS: {\n          target: \"opening\"\n        },\n        OPEN: {\n          target: \"opening\"\n        }\n      }\n    },\n    opening: {\n      tags: [\"closed\"],\n      effects: [\"waitForOpenDelay\"],\n      on: {\n        OPEN_DELAY: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        POINTER_LEAVE: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_BLUR: [\n          {\n            guard: and(\"isOpenControlled\", not(\"isPointer\")),\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            guard: not(\"isPointer\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackDismissableElement\", \"trackPositioning\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        POINTER_ENTER: {\n          actions: [\"setIsPointer\"]\n        },\n        POINTER_LEAVE: {\n          target: \"closing\"\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_BLUR: [\n          {\n            guard: and(\"isOpenControlled\", not(\"isPointer\")),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: not(\"isPointer\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      tags: [\"open\"],\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        CLOSE_DELAY: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        POINTER_ENTER: {\n          target: \"open\",\n          // no need to invokeOnOpen here because it's still open (but about to close)\n          actions: [\"setIsPointer\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isPointer: ({ context }) => !!context.get(\"isPointer\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") != null\n    },\n    effects: {\n      waitForOpenDelay({ send, prop }) {\n        const id = setTimeout(() => {\n          send({ type: \"OPEN_DELAY\" });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay({ send, prop }) {\n        const id = setTimeout(() => {\n          send({ type: \"CLOSE_DELAY\" });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      },\n      trackPositioning({ context, prop, scope }) {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ send, scope, prop }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_3__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          exclude: [getTriggerEl(scope)],\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\" });\n          },\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside(event) {\n            event.preventDefault();\n            prop(\"onFocusOutside\")?.(event);\n          }\n        });\n      }\n    },\n    actions: {\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      setIsPointer({ context }) {\n        context.set(\"isPointer\", true);\n      },\n      clearIsPointer({ context }) {\n        context.set(\"isPointer\", false);\n      },\n      reposition({ context, prop, scope, event }) {\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility({ prop, event, send }) {\n        queueMicrotask(() => {\n          send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"closeDelay\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"disabled\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onFocusOutside\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/i18n-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCollator: () => (/* binding */ createCollator),\n/* harmony export */   createFilter: () => (/* binding */ createFilter),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatList: () => (/* binding */ formatList),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   getDefaultLocale: () => (/* binding */ getDefaultLocale),\n/* harmony export */   getLocaleDir: () => (/* binding */ getLocaleDir),\n/* harmony export */   isRTL: () => (/* binding */ isRTL),\n/* harmony export */   trackLocale: () => (/* binding */ trackLocale)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/cache.ts\nfunction i18nCache(Ins) {\n  const formatterCache = /* @__PURE__ */ new Map();\n  return function create(locale, options) {\n    const cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : \"\");\n    if (formatterCache.has(cacheKey)) {\n      return formatterCache.get(cacheKey);\n    }\n    let formatter = new Ins(locale, options);\n    formatterCache.set(cacheKey, formatter);\n    return formatter;\n  };\n}\n\n// src/collator.ts\nvar getCollator = i18nCache(Intl.Collator);\nfunction createCollator(locale = \"en-US\", options = {}) {\n  return getCollator(locale, options);\n}\n\n// src/filter.ts\nvar collatorCache = i18nCache(Intl.Collator);\nfunction createFilter(options) {\n  const { locale, ...rest } = options || {};\n  const collator = collatorCache(locale || \"en-US\", { usage: \"search\", ...rest });\n  function normalize(string) {\n    string = string.normalize(\"NFC\");\n    if (collator.resolvedOptions().ignorePunctuation) {\n      string = string.replace(/\\p{P}/gu, \"\");\n    }\n    return string;\n  }\n  function startsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }\n  function endsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }\n  function contains(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return {\n    startsWith,\n    endsWith,\n    contains\n  };\n}\n\n// src/format-number.ts\nvar getNumberFormatter = i18nCache(Intl.NumberFormat);\nfunction formatNumber(v, locale, options = {}) {\n  const formatter = getNumberFormatter(locale, options);\n  return formatter.format(v);\n}\n\n// src/format-bytes.ts\nvar bitPrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\"];\nvar bytePrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\"];\nvar formatBytes = (bytes, locale = \"en-US\", options = {}) => {\n  if (isNaN(bytes)) return \"\";\n  if (bytes === 0) return \"0 B\";\n  const { unit = \"byte\", unitDisplay = \"short\" } = options;\n  const prefix = unit === \"bit\" ? bitPrefixes : bytePrefixes;\n  const index = Math.max(0, Math.min(Math.floor(Math.log10(bytes) / 3), prefix.length - 1));\n  const _unit = prefix[index] + unit;\n  const _unitDisplay = unitDisplay || \"short\";\n  const v = parseFloat((bytes / Math.pow(1e3, index)).toPrecision(3));\n  return formatNumber(v, locale, {\n    style: \"unit\",\n    unit: _unit,\n    unitDisplay: _unitDisplay\n  });\n};\n\n// src/format-date.ts\nvar symbols = \"\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;\";\nfunction createRegEx(sign) {\n  return new RegExp(\"(^|>|\" + symbols + \")(\" + sign + \")($|<|\" + symbols + \")\", \"g\");\n}\nvar FORMATS = [\n  \"G\",\n  \"GG\",\n  \"GGG\",\n  \"GGGG\",\n  \"GGGGG\",\n  \"y\",\n  \"yo\",\n  \"yy\",\n  \"yyy\",\n  \"yyyy\",\n  \"Y\",\n  \"Yo\",\n  \"YY\",\n  \"YYY\",\n  \"YYYY\",\n  \"Q\",\n  \"Qo\",\n  \"QQ\",\n  \"QQQ\",\n  \"QQQQ\",\n  \"QQQQQ\",\n  \"M\",\n  \"Mo\",\n  \"MM\",\n  \"MMM\",\n  \"MMMM\",\n  \"MMMMM\",\n  \"E\",\n  \"EE\",\n  \"EEE\",\n  \"EEEE\",\n  \"EEEEE\",\n  \"EEEEEE\",\n  \"a\",\n  \"aa\",\n  \"aaa\",\n  \"aaaa\",\n  \"aaaaa\",\n  \"d\",\n  \"do\",\n  \"dd\",\n  \"D\",\n  \"Do\",\n  \"DD\",\n  \"DDD\",\n  \"w\",\n  \"wo\",\n  \"ww\",\n  \"s\",\n  \"so\",\n  \"ss\",\n  \"m\",\n  \"mo\",\n  \"mm\",\n  \"h\",\n  \"ho\",\n  \"hh\",\n  \"H\",\n  \"Ho\",\n  \"HH\",\n  \"z\",\n  \"zz\",\n  \"zzz\",\n  \"zzzz\",\n  \"T\"\n];\nfunction ordinal(num) {\n  const n = typeof num === \"string\" ? parseFloat(num) : num;\n  let suffix = \"th\";\n  if (n % 10 === 1 && n % 100 !== 11) {\n    suffix = \"st\";\n  } else if (n % 10 === 2 && n % 100 !== 12) {\n    suffix = \"nd\";\n  } else if (n % 10 === 3 && n % 100 !== 13) {\n    suffix = \"rd\";\n  }\n  return `${n}${suffix}`;\n}\nfunction pad(num, length) {\n  return String(num).padStart(length, \"0\");\n}\nfunction zone(str) {\n  return str.split(/AM|PM/)[1].trim();\n}\nfunction getFormat(date, options) {\n  const { locale, format, timeZone } = options;\n  switch (format) {\n    // era\n    case \"G\":\n    case \"GG\":\n    case \"GGG\":\n      return date.toLocaleString(locale, { era: \"short\" });\n    case \"GGGG\":\n      return date.toLocaleString(locale, { era: \"long\" });\n    case \"GGGGG\":\n      return date.toLocaleString(locale, { era: \"narrow\" });\n    // year\n    case \"y\":\n    case \"Y\":\n      return date.getFullYear();\n    case \"yo\":\n    case \"Yo\":\n      return ordinal(date.toLocaleString(locale, { year: \"numeric\" }));\n    case \"yy\":\n    case \"YY\":\n      return date.toLocaleString(locale, { year: \"2-digit\" });\n    case \"yyy\":\n    case \"YYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(3, \"0\");\n    case \"yyyy\":\n    case \"YYYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(4, \"0\");\n    // quarter\n    case \"Q\":\n    case \"QQQQQ\":\n      return Math.ceil((date.getMonth() + 1) / 3);\n    case \"Qo\":\n      return ordinal(Math.ceil((date.getMonth() + 1) / 3));\n    case \"QQ\":\n      return pad(Math.ceil((date.getMonth() + 1) / 3), 2);\n    case \"QQQ\":\n      return `Q${Math.ceil((date.getMonth() + 1) / 3)}`;\n    case \"QQQQ\": {\n      const base = ordinal(String(Math.ceil((date.getMonth() + 1) / 3)));\n      return `${base} quarter`;\n    }\n    // month\n    case \"M\":\n      return date.getMonth() + 1;\n    case \"Mo\":\n      return ordinal(date.getMonth() + 1);\n    case \"MM\":\n      return date.toLocaleString(locale, { month: \"2-digit\" });\n    case \"MMM\":\n      return date.toLocaleString(locale, { month: \"short\" });\n    case \"MMMM\":\n      return date.toLocaleString(locale, { month: \"long\" });\n    case \"MMMMM\":\n      return date.toLocaleString(locale, { month: \"narrow\" });\n    // week\n    case \"w\":\n      return Math.ceil(date.getDate() / 7);\n    case \"wo\":\n      return ordinal(Math.ceil(date.getDate() / 7));\n    case \"ww\":\n      return pad(Math.ceil(date.getDate() / 7), 2);\n    // day\n    case \"d\":\n    case \"D\":\n      return date.getDate();\n    case \"do\":\n    case \"Do\":\n      return ordinal(date.getDate());\n    case \"dd\":\n    case \"DD\":\n      return date.toLocaleString(locale, { day: \"2-digit\" });\n    case \"DDD\":\n      return pad(date.getDate(), 3);\n    // weekday\n    case \"E\":\n    case \"EE\":\n    case \"EEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" });\n    case \"EEEE\":\n      return date.toLocaleString(locale, { weekday: \"long\" });\n    case \"EEEEE\":\n      return date.toLocaleString(locale, { weekday: \"narrow\" });\n    case \"EEEEEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" }).slice(0, 2);\n    // hour\n    case \"h\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true });\n    case \"ho\":\n      return ordinal(date.toLocaleString(locale, { hour: \"2-digit\", hour12: true }));\n    case \"hh\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: true });\n    case \"H\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: false });\n    case \"Ho\":\n      return ordinal(+date.toLocaleString(locale, { hour: \"numeric\", hour12: false }));\n    case \"HH\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: false });\n    // minute\n    case \"m\":\n      return date.toLocaleString(locale, { minute: \"numeric\" });\n    case \"mo\":\n      return ordinal(date.toLocaleString(locale, { minute: \"numeric\" }));\n    case \"mm\":\n      return date.toLocaleString(locale, { minute: \"2-digit\" });\n    // second\n    case \"s\":\n      return date.toLocaleString(locale, { second: \"numeric\" });\n    case \"so\":\n      return ordinal(date.toLocaleString(locale, { second: \"numeric\" }));\n    case \"ss\":\n      return date.toLocaleString(locale, { second: \"2-digit\" });\n    // timestamp\n    case \"T\":\n      return date.getTime();\n    // day period\n    case \"a\":\n    case \"aa\":\n    case \"aaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleUpperCase();\n    case \"aaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleLowerCase();\n    case \"aaaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).charAt(0);\n    // TODO:Revise this\n    case \"z\":\n    case \"zz\":\n    case \"zzz\": {\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"shortOffset\" }));\n    }\n    case \"zzzz\":\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"longOffset\" }));\n    default:\n      throw new Error(`Unknown format: ${format}`);\n  }\n}\nfunction formatDate(date, format, locale, timeZone) {\n  let result = format;\n  for (const key of FORMATS) {\n    const res = getFormat(date, { locale, format: key, timeZone });\n    result = result.replace(createRegEx(key), \"$1\" + res + \"$3\");\n  }\n  return result;\n}\n\n// src/format-list.ts\nvar getListFormatter = i18nCache(Intl.ListFormat);\nfunction formatList(list, locale, options = {}) {\n  const formatter = getListFormatter(locale, options);\n  return formatter.format(list);\n}\n\n// src/format-relative-time.ts\nvar getRelativeTimeFormatter = i18nCache(Intl.RelativeTimeFormat);\nfunction formatRelativeTime(value, locale, options = {}) {\n  const rtf = getRelativeTimeFormatter(locale, options);\n  const now = /* @__PURE__ */ new Date();\n  const diff = getDistance(now, value);\n  if (diff.years > 0) return rtf.format(diff.years * diff.sign, \"year\");\n  if (diff.months > 0) return rtf.format(diff.months * diff.sign, \"month\");\n  if (diff.weeks > 0) return rtf.format(diff.weeks * diff.sign, \"week\");\n  if (diff.days > 0) return rtf.format(diff.days * diff.sign, \"day\");\n  if (diff.hours > 0) return rtf.format(diff.hours * diff.sign, \"hour\");\n  if (diff.minutes > 0) return rtf.format(diff.minutes * diff.sign, \"minute\");\n  return rtf.format(diff.seconds * diff.sign, \"second\");\n}\nvar SECOND_TO_MS = 1e3;\nvar MINUTE_TO_MS = 1e3 * 60;\nvar HOUR_TO_MS = 1e3 * 60 * 60;\nvar DAY_TO_MS = 1e3 * 60 * 60 * 24;\nvar WEEK_TO_MS = 1e3 * 60 * 60 * 24 * 7;\nvar MONTH_TO_MS = 1e3 * 60 * 60 * 24 * 30;\nvar YEAR_TO_MS = 1e3 * 60 * 60 * 24 * 365;\nfunction getDistance(startDate, endDate) {\n  const endTime = endDate.getTime();\n  const startTime = startDate.getTime();\n  const distance = Math.abs(endTime - startTime);\n  return {\n    sign: Math.sign(endTime - startTime),\n    days: Math.floor(distance / DAY_TO_MS),\n    hours: Math.floor(distance % DAY_TO_MS / HOUR_TO_MS),\n    minutes: Math.floor(distance % HOUR_TO_MS / MINUTE_TO_MS),\n    seconds: Math.floor(distance % MINUTE_TO_MS / SECOND_TO_MS),\n    weeks: Math.floor(distance / WEEK_TO_MS),\n    months: Math.floor(distance / MONTH_TO_MS),\n    years: Math.floor(distance / YEAR_TO_MS)\n  };\n}\n\n// src/is-rtl.ts\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n  \"Avst\",\n  \"Arab\",\n  \"Armi\",\n  \"Syrc\",\n  \"Samr\",\n  \"Mand\",\n  \"Thaa\",\n  \"Mend\",\n  \"Nkoo\",\n  \"Adlm\",\n  \"Rohg\",\n  \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n  \"ae\",\n  \"ar\",\n  \"arc\",\n  \"bcc\",\n  \"bqi\",\n  \"ckb\",\n  \"dv\",\n  \"fa\",\n  \"glk\",\n  \"he\",\n  \"ku\",\n  \"mzn\",\n  \"nqo\",\n  \"pnb\",\n  \"ps\",\n  \"sd\",\n  \"ug\",\n  \"ur\",\n  \"yi\"\n]);\nfunction isRTL(locale) {\n  if (Intl.Locale) {\n    const script = new Intl.Locale(locale).maximize().script ?? \"\";\n    return RTL_SCRIPTS.has(script);\n  }\n  const lang = locale.split(\"-\")[0];\n  return RTL_LANGS.has(lang);\n}\nfunction getLocaleDir(locale) {\n  return isRTL(locale) ? \"rtl\" : \"ltr\";\n}\n\n// src/locale.ts\nfunction getDefaultLocale() {\n  let locale = typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n  return {\n    locale,\n    dir: isRTL(locale) ? \"rtl\" : \"ltr\"\n  };\n}\nfunction trackLocale(options = {}) {\n  const { getRootNode, onLocaleChange } = options;\n  onLocaleChange?.(getDefaultLocale());\n  const handleLocaleChange = () => {\n    onLocaleChange?.(getDefaultLocale());\n  };\n  const win = getRootNode ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(getRootNode()) : window;\n  win.addEventListener(\"languagechange\", handleLocaleChange);\n  return () => {\n    win.removeEventListener(\"languagechange\", handleLocaleChange);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9pMThuLXV0aWxzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUE4Qzs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsa0JBQWtCO0FBQzVCLHNEQUFzRCwwQkFBMEI7QUFDaEY7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEVBQUU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQ0FBa0M7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQSxVQUFVLHVDQUF1QztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQSxpREFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxZQUFZLEVBQUUsRUFBRSxPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDJCQUEyQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGNBQWM7QUFDekQ7QUFDQSwyQ0FBMkMsYUFBYTtBQUN4RDtBQUNBLDJDQUEyQyxlQUFlO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxpQkFBaUI7QUFDcEU7QUFDQTtBQUNBLDJDQUEyQyxpQkFBaUI7QUFDNUQ7QUFDQTtBQUNBLDJDQUEyQyxpQkFBaUI7QUFDNUQ7QUFDQTtBQUNBLDJDQUEyQyxpQkFBaUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFDQUFxQztBQUN0RDtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCO0FBQzdEO0FBQ0EsMkNBQTJDLGdCQUFnQjtBQUMzRDtBQUNBLDJDQUEyQyxlQUFlO0FBQzFEO0FBQ0EsMkNBQTJDLGlCQUFpQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnQkFBZ0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGtCQUFrQjtBQUM3RDtBQUNBLDJDQUEyQyxpQkFBaUI7QUFDNUQ7QUFDQSwyQ0FBMkMsbUJBQW1CO0FBQzlEO0FBQ0EsMkNBQTJDLGtCQUFrQjtBQUM3RDtBQUNBO0FBQ0EsMkNBQTJDLCtCQUErQjtBQUMxRTtBQUNBLG1EQUFtRCwrQkFBK0I7QUFDbEY7QUFDQSwyQ0FBMkMsK0JBQStCO0FBQzFFO0FBQ0EsMkNBQTJDLGdDQUFnQztBQUMzRTtBQUNBLG9EQUFvRCxnQ0FBZ0M7QUFDcEY7QUFDQSwyQ0FBMkMsZ0NBQWdDO0FBQzNFO0FBQ0E7QUFDQSwyQ0FBMkMsbUJBQW1CO0FBQzlEO0FBQ0EsbURBQW1ELG1CQUFtQjtBQUN0RTtBQUNBLDJDQUEyQyxtQkFBbUI7QUFDOUQ7QUFDQTtBQUNBLDJDQUEyQyxtQkFBbUI7QUFDOUQ7QUFDQSxtREFBbUQsbUJBQW1CO0FBQ3RFO0FBQ0EsMkNBQTJDLG1CQUFtQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywrQkFBK0I7QUFDMUU7QUFDQSwyQ0FBMkMsK0JBQStCO0FBQzFFO0FBQ0EsMkNBQTJDLCtCQUErQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCx1Q0FBdUM7QUFDdkY7QUFDQTtBQUNBLGdEQUFnRCxzQ0FBc0M7QUFDdEY7QUFDQSx5Q0FBeUMsT0FBTztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLCtCQUErQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsVUFBVSw4QkFBOEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNERBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AemFnLWpzL2kxOG4tdXRpbHMvZGlzdC9pbmRleC5tanM/N2Q4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5cbi8vIHNyYy9jYWNoZS50c1xuZnVuY3Rpb24gaTE4bkNhY2hlKElucykge1xuICBjb25zdCBmb3JtYXR0ZXJDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIHJldHVybiBmdW5jdGlvbiBjcmVhdGUobG9jYWxlLCBvcHRpb25zKSB7XG4gICAgY29uc3QgY2FjaGVLZXkgPSBsb2NhbGUgKyAob3B0aW9ucyA/IE9iamVjdC5lbnRyaWVzKG9wdGlvbnMpLnNvcnQoKGEsIGIpID0+IGFbMF0gPCBiWzBdID8gLTEgOiAxKS5qb2luKCkgOiBcIlwiKTtcbiAgICBpZiAoZm9ybWF0dGVyQ2FjaGUuaGFzKGNhY2hlS2V5KSkge1xuICAgICAgcmV0dXJuIGZvcm1hdHRlckNhY2hlLmdldChjYWNoZUtleSk7XG4gICAgfVxuICAgIGxldCBmb3JtYXR0ZXIgPSBuZXcgSW5zKGxvY2FsZSwgb3B0aW9ucyk7XG4gICAgZm9ybWF0dGVyQ2FjaGUuc2V0KGNhY2hlS2V5LCBmb3JtYXR0ZXIpO1xuICAgIHJldHVybiBmb3JtYXR0ZXI7XG4gIH07XG59XG5cbi8vIHNyYy9jb2xsYXRvci50c1xudmFyIGdldENvbGxhdG9yID0gaTE4bkNhY2hlKEludGwuQ29sbGF0b3IpO1xuZnVuY3Rpb24gY3JlYXRlQ29sbGF0b3IobG9jYWxlID0gXCJlbi1VU1wiLCBvcHRpb25zID0ge30pIHtcbiAgcmV0dXJuIGdldENvbGxhdG9yKGxvY2FsZSwgb3B0aW9ucyk7XG59XG5cbi8vIHNyYy9maWx0ZXIudHNcbnZhciBjb2xsYXRvckNhY2hlID0gaTE4bkNhY2hlKEludGwuQ29sbGF0b3IpO1xuZnVuY3Rpb24gY3JlYXRlRmlsdGVyKG9wdGlvbnMpIHtcbiAgY29uc3QgeyBsb2NhbGUsIC4uLnJlc3QgfSA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IGNvbGxhdG9yID0gY29sbGF0b3JDYWNoZShsb2NhbGUgfHwgXCJlbi1VU1wiLCB7IHVzYWdlOiBcInNlYXJjaFwiLCAuLi5yZXN0IH0pO1xuICBmdW5jdGlvbiBub3JtYWxpemUoc3RyaW5nKSB7XG4gICAgc3RyaW5nID0gc3RyaW5nLm5vcm1hbGl6ZShcIk5GQ1wiKTtcbiAgICBpZiAoY29sbGF0b3IucmVzb2x2ZWRPcHRpb25zKCkuaWdub3JlUHVuY3R1YXRpb24pIHtcbiAgICAgIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC9cXHB7UH0vZ3UsIFwiXCIpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG4gIGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc3RyaW5nLCBzdWJzdHJpbmcpIHtcbiAgICBpZiAoc3Vic3RyaW5nLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRydWU7XG4gICAgc3RyaW5nID0gbm9ybWFsaXplKHN0cmluZyk7XG4gICAgc3Vic3RyaW5nID0gbm9ybWFsaXplKHN1YnN0cmluZyk7XG4gICAgcmV0dXJuIGNvbGxhdG9yLmNvbXBhcmUoc3RyaW5nLnNsaWNlKDAsIHN1YnN0cmluZy5sZW5ndGgpLCBzdWJzdHJpbmcpID09PSAwO1xuICB9XG4gIGZ1bmN0aW9uIGVuZHNXaXRoKHN0cmluZywgc3Vic3RyaW5nKSB7XG4gICAgaWYgKHN1YnN0cmluZy5sZW5ndGggPT09IDApIHJldHVybiB0cnVlO1xuICAgIHN0cmluZyA9IG5vcm1hbGl6ZShzdHJpbmcpO1xuICAgIHN1YnN0cmluZyA9IG5vcm1hbGl6ZShzdWJzdHJpbmcpO1xuICAgIHJldHVybiBjb2xsYXRvci5jb21wYXJlKHN0cmluZy5zbGljZSgtc3Vic3RyaW5nLmxlbmd0aCksIHN1YnN0cmluZykgPT09IDA7XG4gIH1cbiAgZnVuY3Rpb24gY29udGFpbnMoc3RyaW5nLCBzdWJzdHJpbmcpIHtcbiAgICBpZiAoc3Vic3RyaW5nLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRydWU7XG4gICAgc3RyaW5nID0gbm9ybWFsaXplKHN0cmluZyk7XG4gICAgc3Vic3RyaW5nID0gbm9ybWFsaXplKHN1YnN0cmluZyk7XG4gICAgbGV0IHNjYW4gPSAwO1xuICAgIGxldCBzbGljZUxlbiA9IHN1YnN0cmluZy5sZW5ndGg7XG4gICAgZm9yICg7IHNjYW4gKyBzbGljZUxlbiA8PSBzdHJpbmcubGVuZ3RoOyBzY2FuKyspIHtcbiAgICAgIGxldCBzbGljZSA9IHN0cmluZy5zbGljZShzY2FuLCBzY2FuICsgc2xpY2VMZW4pO1xuICAgICAgaWYgKGNvbGxhdG9yLmNvbXBhcmUoc3Vic3RyaW5nLCBzbGljZSkgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHN0YXJ0c1dpdGgsXG4gICAgZW5kc1dpdGgsXG4gICAgY29udGFpbnNcbiAgfTtcbn1cblxuLy8gc3JjL2Zvcm1hdC1udW1iZXIudHNcbnZhciBnZXROdW1iZXJGb3JtYXR0ZXIgPSBpMThuQ2FjaGUoSW50bC5OdW1iZXJGb3JtYXQpO1xuZnVuY3Rpb24gZm9ybWF0TnVtYmVyKHYsIGxvY2FsZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IGZvcm1hdHRlciA9IGdldE51bWJlckZvcm1hdHRlcihsb2NhbGUsIG9wdGlvbnMpO1xuICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdCh2KTtcbn1cblxuLy8gc3JjL2Zvcm1hdC1ieXRlcy50c1xudmFyIGJpdFByZWZpeGVzID0gW1wiXCIsIFwia2lsb1wiLCBcIm1lZ2FcIiwgXCJnaWdhXCIsIFwidGVyYVwiXTtcbnZhciBieXRlUHJlZml4ZXMgPSBbXCJcIiwgXCJraWxvXCIsIFwibWVnYVwiLCBcImdpZ2FcIiwgXCJ0ZXJhXCIsIFwicGV0YVwiXTtcbnZhciBmb3JtYXRCeXRlcyA9IChieXRlcywgbG9jYWxlID0gXCJlbi1VU1wiLCBvcHRpb25zID0ge30pID0+IHtcbiAgaWYgKGlzTmFOKGJ5dGVzKSkgcmV0dXJuIFwiXCI7XG4gIGlmIChieXRlcyA9PT0gMCkgcmV0dXJuIFwiMCBCXCI7XG4gIGNvbnN0IHsgdW5pdCA9IFwiYnl0ZVwiLCB1bml0RGlzcGxheSA9IFwic2hvcnRcIiB9ID0gb3B0aW9ucztcbiAgY29uc3QgcHJlZml4ID0gdW5pdCA9PT0gXCJiaXRcIiA/IGJpdFByZWZpeGVzIDogYnl0ZVByZWZpeGVzO1xuICBjb25zdCBpbmRleCA9IE1hdGgubWF4KDAsIE1hdGgubWluKE1hdGguZmxvb3IoTWF0aC5sb2cxMChieXRlcykgLyAzKSwgcHJlZml4Lmxlbmd0aCAtIDEpKTtcbiAgY29uc3QgX3VuaXQgPSBwcmVmaXhbaW5kZXhdICsgdW5pdDtcbiAgY29uc3QgX3VuaXREaXNwbGF5ID0gdW5pdERpc3BsYXkgfHwgXCJzaG9ydFwiO1xuICBjb25zdCB2ID0gcGFyc2VGbG9hdCgoYnl0ZXMgLyBNYXRoLnBvdygxZTMsIGluZGV4KSkudG9QcmVjaXNpb24oMykpO1xuICByZXR1cm4gZm9ybWF0TnVtYmVyKHYsIGxvY2FsZSwge1xuICAgIHN0eWxlOiBcInVuaXRcIixcbiAgICB1bml0OiBfdW5pdCxcbiAgICB1bml0RGlzcGxheTogX3VuaXREaXNwbGF5XG4gIH0pO1xufTtcblxuLy8gc3JjL2Zvcm1hdC1kYXRlLnRzXG52YXIgc3ltYm9scyA9IFwiXFxcXHN8XFxcXC58LXwvfFxcXFxcXFxcfCx8XFxcXCR8XFxcXCF8XFxcXD98Onw7XCI7XG5mdW5jdGlvbiBjcmVhdGVSZWdFeChzaWduKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiKF58PnxcIiArIHN5bWJvbHMgKyBcIikoXCIgKyBzaWduICsgXCIpKCR8PHxcIiArIHN5bWJvbHMgKyBcIilcIiwgXCJnXCIpO1xufVxudmFyIEZPUk1BVFMgPSBbXG4gIFwiR1wiLFxuICBcIkdHXCIsXG4gIFwiR0dHXCIsXG4gIFwiR0dHR1wiLFxuICBcIkdHR0dHXCIsXG4gIFwieVwiLFxuICBcInlvXCIsXG4gIFwieXlcIixcbiAgXCJ5eXlcIixcbiAgXCJ5eXl5XCIsXG4gIFwiWVwiLFxuICBcIllvXCIsXG4gIFwiWVlcIixcbiAgXCJZWVlcIixcbiAgXCJZWVlZXCIsXG4gIFwiUVwiLFxuICBcIlFvXCIsXG4gIFwiUVFcIixcbiAgXCJRUVFcIixcbiAgXCJRUVFRXCIsXG4gIFwiUVFRUVFcIixcbiAgXCJNXCIsXG4gIFwiTW9cIixcbiAgXCJNTVwiLFxuICBcIk1NTVwiLFxuICBcIk1NTU1cIixcbiAgXCJNTU1NTVwiLFxuICBcIkVcIixcbiAgXCJFRVwiLFxuICBcIkVFRVwiLFxuICBcIkVFRUVcIixcbiAgXCJFRUVFRVwiLFxuICBcIkVFRUVFRVwiLFxuICBcImFcIixcbiAgXCJhYVwiLFxuICBcImFhYVwiLFxuICBcImFhYWFcIixcbiAgXCJhYWFhYVwiLFxuICBcImRcIixcbiAgXCJkb1wiLFxuICBcImRkXCIsXG4gIFwiRFwiLFxuICBcIkRvXCIsXG4gIFwiRERcIixcbiAgXCJERERcIixcbiAgXCJ3XCIsXG4gIFwid29cIixcbiAgXCJ3d1wiLFxuICBcInNcIixcbiAgXCJzb1wiLFxuICBcInNzXCIsXG4gIFwibVwiLFxuICBcIm1vXCIsXG4gIFwibW1cIixcbiAgXCJoXCIsXG4gIFwiaG9cIixcbiAgXCJoaFwiLFxuICBcIkhcIixcbiAgXCJIb1wiLFxuICBcIkhIXCIsXG4gIFwielwiLFxuICBcInp6XCIsXG4gIFwienp6XCIsXG4gIFwienp6elwiLFxuICBcIlRcIlxuXTtcbmZ1bmN0aW9uIG9yZGluYWwobnVtKSB7XG4gIGNvbnN0IG4gPSB0eXBlb2YgbnVtID09PSBcInN0cmluZ1wiID8gcGFyc2VGbG9hdChudW0pIDogbnVtO1xuICBsZXQgc3VmZml4ID0gXCJ0aFwiO1xuICBpZiAobiAlIDEwID09PSAxICYmIG4gJSAxMDAgIT09IDExKSB7XG4gICAgc3VmZml4ID0gXCJzdFwiO1xuICB9IGVsc2UgaWYgKG4gJSAxMCA9PT0gMiAmJiBuICUgMTAwICE9PSAxMikge1xuICAgIHN1ZmZpeCA9IFwibmRcIjtcbiAgfSBlbHNlIGlmIChuICUgMTAgPT09IDMgJiYgbiAlIDEwMCAhPT0gMTMpIHtcbiAgICBzdWZmaXggPSBcInJkXCI7XG4gIH1cbiAgcmV0dXJuIGAke259JHtzdWZmaXh9YDtcbn1cbmZ1bmN0aW9uIHBhZChudW0sIGxlbmd0aCkge1xuICByZXR1cm4gU3RyaW5nKG51bSkucGFkU3RhcnQobGVuZ3RoLCBcIjBcIik7XG59XG5mdW5jdGlvbiB6b25lKHN0cikge1xuICByZXR1cm4gc3RyLnNwbGl0KC9BTXxQTS8pWzFdLnRyaW0oKTtcbn1cbmZ1bmN0aW9uIGdldEZvcm1hdChkYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgbG9jYWxlLCBmb3JtYXQsIHRpbWVab25lIH0gPSBvcHRpb25zO1xuICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgIC8vIGVyYVxuICAgIGNhc2UgXCJHXCI6XG4gICAgY2FzZSBcIkdHXCI6XG4gICAgY2FzZSBcIkdHR1wiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IGVyYTogXCJzaG9ydFwiIH0pO1xuICAgIGNhc2UgXCJHR0dHXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgZXJhOiBcImxvbmdcIiB9KTtcbiAgICBjYXNlIFwiR0dHR0dcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBlcmE6IFwibmFycm93XCIgfSk7XG4gICAgLy8geWVhclxuICAgIGNhc2UgXCJ5XCI6XG4gICAgY2FzZSBcIllcIjpcbiAgICAgIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgY2FzZSBcInlvXCI6XG4gICAgY2FzZSBcIllvXCI6XG4gICAgICByZXR1cm4gb3JkaW5hbChkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB5ZWFyOiBcIm51bWVyaWNcIiB9KSk7XG4gICAgY2FzZSBcInl5XCI6XG4gICAgY2FzZSBcIllZXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgeWVhcjogXCIyLWRpZ2l0XCIgfSk7XG4gICAgY2FzZSBcInl5eVwiOlxuICAgIGNhc2UgXCJZWVlcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB5ZWFyOiBcIm51bWVyaWNcIiB9KS5wYWRTdGFydCgzLCBcIjBcIik7XG4gICAgY2FzZSBcInl5eXlcIjpcbiAgICBjYXNlIFwiWVlZWVwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IHllYXI6IFwibnVtZXJpY1wiIH0pLnBhZFN0YXJ0KDQsIFwiMFwiKTtcbiAgICAvLyBxdWFydGVyXG4gICAgY2FzZSBcIlFcIjpcbiAgICBjYXNlIFwiUVFRUVFcIjpcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoKGRhdGUuZ2V0TW9udGgoKSArIDEpIC8gMyk7XG4gICAgY2FzZSBcIlFvXCI6XG4gICAgICByZXR1cm4gb3JkaW5hbChNYXRoLmNlaWwoKGRhdGUuZ2V0TW9udGgoKSArIDEpIC8gMykpO1xuICAgIGNhc2UgXCJRUVwiOlxuICAgICAgcmV0dXJuIHBhZChNYXRoLmNlaWwoKGRhdGUuZ2V0TW9udGgoKSArIDEpIC8gMyksIDIpO1xuICAgIGNhc2UgXCJRUVFcIjpcbiAgICAgIHJldHVybiBgUSR7TWF0aC5jZWlsKChkYXRlLmdldE1vbnRoKCkgKyAxKSAvIDMpfWA7XG4gICAgY2FzZSBcIlFRUVFcIjoge1xuICAgICAgY29uc3QgYmFzZSA9IG9yZGluYWwoU3RyaW5nKE1hdGguY2VpbCgoZGF0ZS5nZXRNb250aCgpICsgMSkgLyAzKSkpO1xuICAgICAgcmV0dXJuIGAke2Jhc2V9IHF1YXJ0ZXJgO1xuICAgIH1cbiAgICAvLyBtb250aFxuICAgIGNhc2UgXCJNXCI6XG4gICAgICByZXR1cm4gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICBjYXNlIFwiTW9cIjpcbiAgICAgIHJldHVybiBvcmRpbmFsKGRhdGUuZ2V0TW9udGgoKSArIDEpO1xuICAgIGNhc2UgXCJNTVwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IG1vbnRoOiBcIjItZGlnaXRcIiB9KTtcbiAgICBjYXNlIFwiTU1NXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgbW9udGg6IFwic2hvcnRcIiB9KTtcbiAgICBjYXNlIFwiTU1NTVwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IG1vbnRoOiBcImxvbmdcIiB9KTtcbiAgICBjYXNlIFwiTU1NTU1cIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBtb250aDogXCJuYXJyb3dcIiB9KTtcbiAgICAvLyB3ZWVrXG4gICAgY2FzZSBcIndcIjpcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoZGF0ZS5nZXREYXRlKCkgLyA3KTtcbiAgICBjYXNlIFwid29cIjpcbiAgICAgIHJldHVybiBvcmRpbmFsKE1hdGguY2VpbChkYXRlLmdldERhdGUoKSAvIDcpKTtcbiAgICBjYXNlIFwid3dcIjpcbiAgICAgIHJldHVybiBwYWQoTWF0aC5jZWlsKGRhdGUuZ2V0RGF0ZSgpIC8gNyksIDIpO1xuICAgIC8vIGRheVxuICAgIGNhc2UgXCJkXCI6XG4gICAgY2FzZSBcIkRcIjpcbiAgICAgIHJldHVybiBkYXRlLmdldERhdGUoKTtcbiAgICBjYXNlIFwiZG9cIjpcbiAgICBjYXNlIFwiRG9cIjpcbiAgICAgIHJldHVybiBvcmRpbmFsKGRhdGUuZ2V0RGF0ZSgpKTtcbiAgICBjYXNlIFwiZGRcIjpcbiAgICBjYXNlIFwiRERcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBkYXk6IFwiMi1kaWdpdFwiIH0pO1xuICAgIGNhc2UgXCJERERcIjpcbiAgICAgIHJldHVybiBwYWQoZGF0ZS5nZXREYXRlKCksIDMpO1xuICAgIC8vIHdlZWtkYXlcbiAgICBjYXNlIFwiRVwiOlxuICAgIGNhc2UgXCJFRVwiOlxuICAgIGNhc2UgXCJFRUVcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB3ZWVrZGF5OiBcInNob3J0XCIgfSk7XG4gICAgY2FzZSBcIkVFRUVcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB3ZWVrZGF5OiBcImxvbmdcIiB9KTtcbiAgICBjYXNlIFwiRUVFRUVcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB3ZWVrZGF5OiBcIm5hcnJvd1wiIH0pO1xuICAgIGNhc2UgXCJFRUVFRUVcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB3ZWVrZGF5OiBcInNob3J0XCIgfSkuc2xpY2UoMCwgMik7XG4gICAgLy8gaG91clxuICAgIGNhc2UgXCJoXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgaG91cjogXCJudW1lcmljXCIsIGhvdXIxMjogdHJ1ZSB9KTtcbiAgICBjYXNlIFwiaG9cIjpcbiAgICAgIHJldHVybiBvcmRpbmFsKGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IGhvdXI6IFwiMi1kaWdpdFwiLCBob3VyMTI6IHRydWUgfSkpO1xuICAgIGNhc2UgXCJoaFwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IGhvdXI6IFwiMi1kaWdpdFwiLCBob3VyMTI6IHRydWUgfSk7XG4gICAgY2FzZSBcIkhcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBob3VyOiBcIm51bWVyaWNcIiwgaG91cjEyOiBmYWxzZSB9KTtcbiAgICBjYXNlIFwiSG9cIjpcbiAgICAgIHJldHVybiBvcmRpbmFsKCtkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBob3VyOiBcIm51bWVyaWNcIiwgaG91cjEyOiBmYWxzZSB9KSk7XG4gICAgY2FzZSBcIkhIXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgaG91cjogXCIyLWRpZ2l0XCIsIGhvdXIxMjogZmFsc2UgfSk7XG4gICAgLy8gbWludXRlXG4gICAgY2FzZSBcIm1cIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBtaW51dGU6IFwibnVtZXJpY1wiIH0pO1xuICAgIGNhc2UgXCJtb1wiOlxuICAgICAgcmV0dXJuIG9yZGluYWwoZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgbWludXRlOiBcIm51bWVyaWNcIiB9KSk7XG4gICAgY2FzZSBcIm1tXCI6XG4gICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHsgbWludXRlOiBcIjItZGlnaXRcIiB9KTtcbiAgICAvLyBzZWNvbmRcbiAgICBjYXNlIFwic1wiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IHNlY29uZDogXCJudW1lcmljXCIgfSk7XG4gICAgY2FzZSBcInNvXCI6XG4gICAgICByZXR1cm4gb3JkaW5hbChkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBzZWNvbmQ6IFwibnVtZXJpY1wiIH0pKTtcbiAgICBjYXNlIFwic3NcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBzZWNvbmQ6IFwiMi1kaWdpdFwiIH0pO1xuICAgIC8vIHRpbWVzdGFtcFxuICAgIGNhc2UgXCJUXCI6XG4gICAgICByZXR1cm4gZGF0ZS5nZXRUaW1lKCk7XG4gICAgLy8gZGF5IHBlcmlvZFxuICAgIGNhc2UgXCJhXCI6XG4gICAgY2FzZSBcImFhXCI6XG4gICAgY2FzZSBcImFhYVwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IGhvdXI6IFwibnVtZXJpY1wiLCBob3VyMTI6IHRydWUgfSkudG9Mb2NhbGVVcHBlckNhc2UoKTtcbiAgICBjYXNlIFwiYWFhYVwiOlxuICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IGhvdXI6IFwibnVtZXJpY1wiLCBob3VyMTI6IHRydWUgfSkudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICBjYXNlIFwiYWFhYWFcIjpcbiAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyBob3VyOiBcIm51bWVyaWNcIiwgaG91cjEyOiB0cnVlIH0pLmNoYXJBdCgwKTtcbiAgICAvLyBUT0RPOlJldmlzZSB0aGlzXG4gICAgY2FzZSBcInpcIjpcbiAgICBjYXNlIFwienpcIjpcbiAgICBjYXNlIFwienp6XCI6IHtcbiAgICAgIHJldHVybiB6b25lKGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7IHRpbWVab25lLCB0aW1lWm9uZU5hbWU6IFwic2hvcnRPZmZzZXRcIiB9KSk7XG4gICAgfVxuICAgIGNhc2UgXCJ6enp6XCI6XG4gICAgICByZXR1cm4gem9uZShkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwgeyB0aW1lWm9uZSwgdGltZVpvbmVOYW1lOiBcImxvbmdPZmZzZXRcIiB9KSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBmb3JtYXQ6ICR7Zm9ybWF0fWApO1xuICB9XG59XG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUsIGZvcm1hdCwgbG9jYWxlLCB0aW1lWm9uZSkge1xuICBsZXQgcmVzdWx0ID0gZm9ybWF0O1xuICBmb3IgKGNvbnN0IGtleSBvZiBGT1JNQVRTKSB7XG4gICAgY29uc3QgcmVzID0gZ2V0Rm9ybWF0KGRhdGUsIHsgbG9jYWxlLCBmb3JtYXQ6IGtleSwgdGltZVpvbmUgfSk7XG4gICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoY3JlYXRlUmVnRXgoa2V5KSwgXCIkMVwiICsgcmVzICsgXCIkM1wiKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLyBzcmMvZm9ybWF0LWxpc3QudHNcbnZhciBnZXRMaXN0Rm9ybWF0dGVyID0gaTE4bkNhY2hlKEludGwuTGlzdEZvcm1hdCk7XG5mdW5jdGlvbiBmb3JtYXRMaXN0KGxpc3QsIGxvY2FsZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IGZvcm1hdHRlciA9IGdldExpc3RGb3JtYXR0ZXIobG9jYWxlLCBvcHRpb25zKTtcbiAgcmV0dXJuIGZvcm1hdHRlci5mb3JtYXQobGlzdCk7XG59XG5cbi8vIHNyYy9mb3JtYXQtcmVsYXRpdmUtdGltZS50c1xudmFyIGdldFJlbGF0aXZlVGltZUZvcm1hdHRlciA9IGkxOG5DYWNoZShJbnRsLlJlbGF0aXZlVGltZUZvcm1hdCk7XG5mdW5jdGlvbiBmb3JtYXRSZWxhdGl2ZVRpbWUodmFsdWUsIGxvY2FsZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHJ0ZiA9IGdldFJlbGF0aXZlVGltZUZvcm1hdHRlcihsb2NhbGUsIG9wdGlvbnMpO1xuICBjb25zdCBub3cgPSAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKTtcbiAgY29uc3QgZGlmZiA9IGdldERpc3RhbmNlKG5vdywgdmFsdWUpO1xuICBpZiAoZGlmZi55ZWFycyA+IDApIHJldHVybiBydGYuZm9ybWF0KGRpZmYueWVhcnMgKiBkaWZmLnNpZ24sIFwieWVhclwiKTtcbiAgaWYgKGRpZmYubW9udGhzID4gMCkgcmV0dXJuIHJ0Zi5mb3JtYXQoZGlmZi5tb250aHMgKiBkaWZmLnNpZ24sIFwibW9udGhcIik7XG4gIGlmIChkaWZmLndlZWtzID4gMCkgcmV0dXJuIHJ0Zi5mb3JtYXQoZGlmZi53ZWVrcyAqIGRpZmYuc2lnbiwgXCJ3ZWVrXCIpO1xuICBpZiAoZGlmZi5kYXlzID4gMCkgcmV0dXJuIHJ0Zi5mb3JtYXQoZGlmZi5kYXlzICogZGlmZi5zaWduLCBcImRheVwiKTtcbiAgaWYgKGRpZmYuaG91cnMgPiAwKSByZXR1cm4gcnRmLmZvcm1hdChkaWZmLmhvdXJzICogZGlmZi5zaWduLCBcImhvdXJcIik7XG4gIGlmIChkaWZmLm1pbnV0ZXMgPiAwKSByZXR1cm4gcnRmLmZvcm1hdChkaWZmLm1pbnV0ZXMgKiBkaWZmLnNpZ24sIFwibWludXRlXCIpO1xuICByZXR1cm4gcnRmLmZvcm1hdChkaWZmLnNlY29uZHMgKiBkaWZmLnNpZ24sIFwic2Vjb25kXCIpO1xufVxudmFyIFNFQ09ORF9UT19NUyA9IDFlMztcbnZhciBNSU5VVEVfVE9fTVMgPSAxZTMgKiA2MDtcbnZhciBIT1VSX1RPX01TID0gMWUzICogNjAgKiA2MDtcbnZhciBEQVlfVE9fTVMgPSAxZTMgKiA2MCAqIDYwICogMjQ7XG52YXIgV0VFS19UT19NUyA9IDFlMyAqIDYwICogNjAgKiAyNCAqIDc7XG52YXIgTU9OVEhfVE9fTVMgPSAxZTMgKiA2MCAqIDYwICogMjQgKiAzMDtcbnZhciBZRUFSX1RPX01TID0gMWUzICogNjAgKiA2MCAqIDI0ICogMzY1O1xuZnVuY3Rpb24gZ2V0RGlzdGFuY2Uoc3RhcnREYXRlLCBlbmREYXRlKSB7XG4gIGNvbnN0IGVuZFRpbWUgPSBlbmREYXRlLmdldFRpbWUoKTtcbiAgY29uc3Qgc3RhcnRUaW1lID0gc3RhcnREYXRlLmdldFRpbWUoKTtcbiAgY29uc3QgZGlzdGFuY2UgPSBNYXRoLmFicyhlbmRUaW1lIC0gc3RhcnRUaW1lKTtcbiAgcmV0dXJuIHtcbiAgICBzaWduOiBNYXRoLnNpZ24oZW5kVGltZSAtIHN0YXJ0VGltZSksXG4gICAgZGF5czogTWF0aC5mbG9vcihkaXN0YW5jZSAvIERBWV9UT19NUyksXG4gICAgaG91cnM6IE1hdGguZmxvb3IoZGlzdGFuY2UgJSBEQVlfVE9fTVMgLyBIT1VSX1RPX01TKSxcbiAgICBtaW51dGVzOiBNYXRoLmZsb29yKGRpc3RhbmNlICUgSE9VUl9UT19NUyAvIE1JTlVURV9UT19NUyksXG4gICAgc2Vjb25kczogTWF0aC5mbG9vcihkaXN0YW5jZSAlIE1JTlVURV9UT19NUyAvIFNFQ09ORF9UT19NUyksXG4gICAgd2Vla3M6IE1hdGguZmxvb3IoZGlzdGFuY2UgLyBXRUVLX1RPX01TKSxcbiAgICBtb250aHM6IE1hdGguZmxvb3IoZGlzdGFuY2UgLyBNT05USF9UT19NUyksXG4gICAgeWVhcnM6IE1hdGguZmxvb3IoZGlzdGFuY2UgLyBZRUFSX1RPX01TKVxuICB9O1xufVxuXG4vLyBzcmMvaXMtcnRsLnRzXG52YXIgUlRMX1NDUklQVFMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXG4gIFwiQXZzdFwiLFxuICBcIkFyYWJcIixcbiAgXCJBcm1pXCIsXG4gIFwiU3lyY1wiLFxuICBcIlNhbXJcIixcbiAgXCJNYW5kXCIsXG4gIFwiVGhhYVwiLFxuICBcIk1lbmRcIixcbiAgXCJOa29vXCIsXG4gIFwiQWRsbVwiLFxuICBcIlJvaGdcIixcbiAgXCJIZWJyXCJcbl0pO1xudmFyIFJUTF9MQU5HUyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcbiAgXCJhZVwiLFxuICBcImFyXCIsXG4gIFwiYXJjXCIsXG4gIFwiYmNjXCIsXG4gIFwiYnFpXCIsXG4gIFwiY2tiXCIsXG4gIFwiZHZcIixcbiAgXCJmYVwiLFxuICBcImdsa1wiLFxuICBcImhlXCIsXG4gIFwia3VcIixcbiAgXCJtem5cIixcbiAgXCJucW9cIixcbiAgXCJwbmJcIixcbiAgXCJwc1wiLFxuICBcInNkXCIsXG4gIFwidWdcIixcbiAgXCJ1clwiLFxuICBcInlpXCJcbl0pO1xuZnVuY3Rpb24gaXNSVEwobG9jYWxlKSB7XG4gIGlmIChJbnRsLkxvY2FsZSkge1xuICAgIGNvbnN0IHNjcmlwdCA9IG5ldyBJbnRsLkxvY2FsZShsb2NhbGUpLm1heGltaXplKCkuc2NyaXB0ID8/IFwiXCI7XG4gICAgcmV0dXJuIFJUTF9TQ1JJUFRTLmhhcyhzY3JpcHQpO1xuICB9XG4gIGNvbnN0IGxhbmcgPSBsb2NhbGUuc3BsaXQoXCItXCIpWzBdO1xuICByZXR1cm4gUlRMX0xBTkdTLmhhcyhsYW5nKTtcbn1cbmZ1bmN0aW9uIGdldExvY2FsZURpcihsb2NhbGUpIHtcbiAgcmV0dXJuIGlzUlRMKGxvY2FsZSkgPyBcInJ0bFwiIDogXCJsdHJcIjtcbn1cblxuLy8gc3JjL2xvY2FsZS50c1xuZnVuY3Rpb24gZ2V0RGVmYXVsdExvY2FsZSgpIHtcbiAgbGV0IGxvY2FsZSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgKG5hdmlnYXRvci5sYW5ndWFnZSB8fCBuYXZpZ2F0b3IudXNlckxhbmd1YWdlKSB8fCBcImVuLVVTXCI7XG4gIHJldHVybiB7XG4gICAgbG9jYWxlLFxuICAgIGRpcjogaXNSVEwobG9jYWxlKSA/IFwicnRsXCIgOiBcImx0clwiXG4gIH07XG59XG5mdW5jdGlvbiB0cmFja0xvY2FsZShvcHRpb25zID0ge30pIHtcbiAgY29uc3QgeyBnZXRSb290Tm9kZSwgb25Mb2NhbGVDaGFuZ2UgfSA9IG9wdGlvbnM7XG4gIG9uTG9jYWxlQ2hhbmdlPy4oZ2V0RGVmYXVsdExvY2FsZSgpKTtcbiAgY29uc3QgaGFuZGxlTG9jYWxlQ2hhbmdlID0gKCkgPT4ge1xuICAgIG9uTG9jYWxlQ2hhbmdlPy4oZ2V0RGVmYXVsdExvY2FsZSgpKTtcbiAgfTtcbiAgY29uc3Qgd2luID0gZ2V0Um9vdE5vZGUgPyBnZXRXaW5kb3coZ2V0Um9vdE5vZGUoKSkgOiB3aW5kb3c7XG4gIHdpbi5hZGRFdmVudExpc3RlbmVyKFwibGFuZ3VhZ2VjaGFuZ2VcIiwgaGFuZGxlTG9jYWxlQ2hhbmdlKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICB3aW4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxhbmd1YWdlY2hhbmdlXCIsIGhhbmRsZUxvY2FsZUNoYW5nZSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUNvbGxhdG9yLCBjcmVhdGVGaWx0ZXIsIGZvcm1hdEJ5dGVzLCBmb3JtYXREYXRlLCBmb3JtYXRMaXN0LCBmb3JtYXROdW1iZXIsIGZvcm1hdFJlbGF0aXZlVGltZSwgZ2V0RGVmYXVsdExvY2FsZSwgZ2V0TG9jYWxlRGlyLCBpc1JUTCwgdHJhY2tMb2NhbGUgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@zag-js/interact-outside/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackInteractOutside: () => (/* binding */ trackInteractOutside)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n// src/index.ts\n\n// src/frame-utils.ts\nfunction getWindowFrames(win) {\n  const frames = {\n    each(cb) {\n      for (let i = 0; i < win.frames?.length; i += 1) {\n        const frame = win.frames[i];\n        if (frame) cb(frame);\n      }\n    },\n    addEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.addEventListener(event, listener, options);\n        } catch {\n        }\n      });\n      return () => {\n        try {\n          frames.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.removeEventListener(event, listener, options);\n        } catch {\n        }\n      });\n    }\n  };\n  return frames;\n}\nfunction getParentWindow(win) {\n  const parent = win.frameElement != null ? win.parent : null;\n  return {\n    addEventListener: (event, listener, options) => {\n      try {\n        parent?.addEventListener(event, listener, options);\n      } catch {\n      }\n      return () => {\n        try {\n          parent?.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener: (event, listener, options) => {\n      try {\n        parent?.removeEventListener(event, listener, options);\n      } catch {\n      }\n    }\n  };\n}\n\n// src/index.ts\nvar POINTER_OUTSIDE_EVENT = \"pointerdown.outside\";\nvar FOCUS_OUTSIDE_EVENT = \"focus.outside\";\nfunction isComposedPathFocusable(composedPath) {\n  for (const node of composedPath) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(node) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) return true;\n  }\n  return false;\n}\nvar isPointerEvent = (event) => \"clientY\" in event;\nfunction isEventPointWithin(node, event) {\n  if (!isPointerEvent(event) || !node) return false;\n  const rect = node.getBoundingClientRect();\n  if (rect.width === 0 || rect.height === 0) return false;\n  return rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n}\nfunction isPointInRect(rect, point) {\n  return rect.y <= point.y && point.y <= rect.y + rect.height && rect.x <= point.x && point.x <= rect.x + rect.width;\n}\nfunction isEventWithinScrollbar(event, ancestor) {\n  if (!ancestor || !isPointerEvent(event)) return false;\n  const isScrollableY = ancestor.scrollHeight > ancestor.clientHeight;\n  const onScrollbarY = isScrollableY && event.clientX > ancestor.offsetLeft + ancestor.clientWidth;\n  const isScrollableX = ancestor.scrollWidth > ancestor.clientWidth;\n  const onScrollbarX = isScrollableX && event.clientY > ancestor.offsetTop + ancestor.clientHeight;\n  const rect = {\n    x: ancestor.offsetLeft,\n    y: ancestor.offsetTop,\n    width: ancestor.clientWidth + (isScrollableY ? 16 : 0),\n    height: ancestor.clientHeight + (isScrollableX ? 16 : 0)\n  };\n  const point = {\n    x: event.clientX,\n    y: event.clientY\n  };\n  if (!isPointInRect(rect, point)) return false;\n  return onScrollbarY || onScrollbarX;\n}\nfunction trackInteractOutsideImpl(node, options) {\n  const { exclude, onFocusOutside, onPointerDownOutside, onInteractOutside, defer } = options;\n  if (!node) return;\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(node);\n  const frames = getWindowFrames(win);\n  const parentWin = getParentWindow(win);\n  function isEventOutside(event, target) {\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(target)) return false;\n    if (!target.isConnected) return false;\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node, target)) return false;\n    if (isEventPointWithin(node, event)) return false;\n    const triggerEl = doc.querySelector(`[aria-controls=\"${node.id}\"]`);\n    if (triggerEl) {\n      const triggerAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(triggerEl);\n      if (isEventWithinScrollbar(event, triggerAncestor)) return false;\n    }\n    const nodeAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(node);\n    if (isEventWithinScrollbar(event, nodeAncestor)) return false;\n    return !exclude?.(target);\n  }\n  const pointerdownCleanups = /* @__PURE__ */ new Set();\n  const isInShadowRoot = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(node?.getRootNode());\n  function onPointerDown(event) {\n    function handler(clickEvent) {\n      const func = defer && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)() ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n      const evt = clickEvent ?? event;\n      const composedPath = evt?.composedPath?.() ?? [evt?.target];\n      func(() => {\n        const target = isInShadowRoot ? composedPath[0] : (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n        if (!node || !isEventOutside(event, target)) return;\n        if (onPointerDownOutside || onInteractOutside) {\n          const handler2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onPointerDownOutside, onInteractOutside);\n          node.addEventListener(POINTER_OUTSIDE_EVENT, handler2, { once: true });\n        }\n        fireCustomEvent(node, POINTER_OUTSIDE_EVENT, {\n          bubbles: false,\n          cancelable: true,\n          detail: {\n            originalEvent: evt,\n            contextmenu: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isContextMenuEvent)(evt),\n            focusable: isComposedPathFocusable(composedPath),\n            target\n          }\n        });\n      });\n    }\n    if (event.pointerType === \"touch\") {\n      pointerdownCleanups.forEach((fn) => fn());\n      pointerdownCleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"click\", handler, { once: true }));\n      pointerdownCleanups.add(parentWin.addEventListener(\"click\", handler, { once: true }));\n      pointerdownCleanups.add(frames.addEventListener(\"click\", handler, { once: true }));\n    } else {\n      handler();\n    }\n  }\n  const cleanups = /* @__PURE__ */ new Set();\n  const timer = setTimeout(() => {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"pointerdown\", onPointerDown, true));\n    cleanups.add(parentWin.addEventListener(\"pointerdown\", onPointerDown, true));\n    cleanups.add(frames.addEventListener(\"pointerdown\", onPointerDown, true));\n  }, 0);\n  function onFocusin(event) {\n    const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n    func(() => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (!node || !isEventOutside(event, target)) return;\n      if (onFocusOutside || onInteractOutside) {\n        const handler = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onFocusOutside, onInteractOutside);\n        node.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });\n      }\n      fireCustomEvent(node, FOCUS_OUTSIDE_EVENT, {\n        bubbles: false,\n        cancelable: true,\n        detail: {\n          originalEvent: event,\n          contextmenu: false,\n          focusable: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target),\n          target\n        }\n      });\n    });\n  }\n  if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)()) {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"focusin\", onFocusin, true));\n    cleanups.add(parentWin.addEventListener(\"focusin\", onFocusin, true));\n    cleanups.add(frames.addEventListener(\"focusin\", onFocusin, true));\n  }\n  return () => {\n    clearTimeout(timer);\n    pointerdownCleanups.forEach((fn) => fn());\n    cleanups.forEach((fn) => fn());\n  };\n}\nfunction trackInteractOutside(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackInteractOutsideImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction fireCustomEvent(el, type, init) {\n  const win = el.ownerDocument.defaultView || window;\n  const event = new win.CustomEvent(type, init);\n  return el.dispatchEvent(event);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/listbox/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/listbox/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   gridCollection: () => (/* binding */ gridCollection),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/listbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"listbox\").parts(\n  \"label\",\n  \"input\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"content\",\n  \"root\",\n  \"valueText\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection({ items: [] });\n};\nvar gridCollection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.GridCollection(options);\n};\ngridCollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.GridCollection({ items: [], columnCount: 0 });\n};\n\n// src/listbox.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `select:${ctx.id}`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`;\nvar getItemGroupId = (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`;\nvar getItemGroupLabelId = (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getItemEl = (ctx, id) => ctx.getById(getItemId(ctx, id));\n\n// src/listbox.connect.ts\nfunction connect(service, normalize) {\n  const { context, prop, scope, computed, send, refs } = service;\n  const disabled = prop(\"disabled\");\n  const collection2 = prop(\"collection\");\n  const layout = (0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) ? \"grid\" : \"list\";\n  const focused = context.get(\"focused\");\n  const focusVisible = refs.get(\"focusVisible\") && focused;\n  const value = context.get(\"value\");\n  const selectedItems = context.get(\"selectedItems\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const highlightedItem = context.get(\"highlightedItem\");\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const interactive = computed(\"isInteractive\");\n  const ariaActiveDescendant = highlightedValue ? getItemId(scope, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const itemDisabled = collection2.getItemDisabled(props2.item);\n    const value2 = collection2.getItemValue(props2.item);\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.ensure)(value2, () => `[zag-js] No value found for item ${JSON.stringify(props2.item)}`);\n    const highlighted = highlightedValue === value2;\n    return {\n      value: value2,\n      disabled: Boolean(disabled || itemDisabled),\n      focused: highlighted && focused,\n      focusVisible: highlighted && focusVisible,\n      // deprecated\n      highlighted: highlighted && focusVisible,\n      selected: context.get(\"value\").includes(value2)\n    };\n  }\n  return {\n    empty: value.length === 0,\n    highlightedItem,\n    highlightedValue,\n    clearHighlightedValue() {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value: null });\n    },\n    selectedItems,\n    hasSelectedItems: computed(\"hasSelectedItems\"),\n    value,\n    valueAsString: computed(\"valueAsString\"),\n    collection: collection2,\n    disabled: !!disabled,\n    selectValue(value2) {\n      send({ type: \"ITEM.SELECT\", value: value2 });\n    },\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    selectAll() {\n      if (!computed(\"multiple\")) {\n        throw new Error(\"[zag-js] Cannot select all items in a single-select listbox\");\n      }\n      send({ type: \"VALUE.SET\", value: collection2.getValues() });\n    },\n    highlightValue(value2) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value: value2 });\n    },\n    clearValue(value2) {\n      if (value2) {\n        send({ type: \"ITEM.CLEAR\", value: value2 });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled)\n      });\n    },\n    getInputProps(props2 = {}) {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-autocomplete\": \"list\",\n        \"aria-activedescendant\": ariaActiveDescendant,\n        spellCheck: false,\n        enterKeyHint: \"go\",\n        onFocus() {\n          queueMicrotask(() => {\n            send({ type: \"INPUT.FOCUS\" });\n          });\n        },\n        onBlur() {\n          send({ type: \"CONTENT.BLUR\", src: \"input\" });\n        },\n        onInput(event) {\n          if (!props2.autoHighlight) return;\n          const node = event.currentTarget;\n          queueMicrotask(() => {\n            if (!node.isConnected) return;\n            send({\n              type: \"HIGHLIGHTED_VALUE.SET\",\n              value: node.value ? prop(\"collection\").firstValue : null\n            });\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isComposingEvent)(event)) return;\n          const nativeEvent = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getNativeEvent)(event);\n          const forwardEvent = () => {\n            event.preventDefault();\n            const win = scope.getWin();\n            const keyboardEvent = new win.KeyboardEvent(nativeEvent.type, nativeEvent);\n            getContentEl(scope)?.dispatchEvent(keyboardEvent);\n          };\n          switch (nativeEvent.key) {\n            case \"ArrowLeft\":\n            case \"ArrowRight\": {\n              if (!(0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2)) return;\n              if (event.ctrlKey) return;\n              forwardEvent();\n            }\n            case \"Home\":\n            case \"End\": {\n              if (highlightedValue == null && event.shiftKey) return;\n              forwardEvent();\n            }\n            case \"ArrowDown\":\n            case \"ArrowUp\": {\n              forwardEvent();\n              break;\n            }\n            case \"Enter\":\n              event.preventDefault();\n              send({ type: \"ITEM.CLICK\", value: highlightedValue });\n              break;\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: getItemId(scope, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.selected),\n        \"data-layout\": layout,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(itemState.disabled),\n        onPointerMove(event) {\n          if (!props2.highlightOnHover) return;\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.highlighted) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value });\n        },\n        onMouseDown(event) {\n          event.preventDefault();\n          getContentEl(scope)?.focus();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          send({\n            type: \"ITEM.CLICK\",\n            value: itemState.value,\n            shiftKey: event.shiftKey,\n            anchorValue: highlightedValue,\n            metaKey: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isCtrlOrMetaKey)(event)\n          });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        \"aria-hidden\": true,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: getItemGroupLabelId(scope, htmlFor),\n        dir: prop(\"dir\"),\n        role: \"presentation\"\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(collection2.size === 0),\n        id: getItemGroupId(scope, id),\n        \"aria-labelledby\": getItemGroupLabelId(scope, id),\n        role: \"group\",\n        dir: prop(\"dir\")\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        role: \"listbox\",\n        ...parts.content.attrs,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": ariaActiveDescendant,\n        \"data-orientation\": prop(\"orientation\"),\n        \"aria-multiselectable\": computed(\"multiple\") ? true : void 0,\n        \"aria-labelledby\": getLabelId(scope),\n        tabIndex: 0,\n        \"data-layout\": layout,\n        \"data-empty\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(collection2.size === 0),\n        style: {\n          \"--column-count\": (0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) ? collection2.columnCount : 1\n        },\n        onFocus() {\n          send({ type: \"CONTENT.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"CONTENT.BLUR\" });\n        },\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isSelfTarget)(event)) return;\n          const shiftKey = event.shiftKey;\n          const keyMap = {\n            ArrowUp(event2) {\n              let nextValue = null;\n              if ((0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) && highlightedValue) {\n                nextValue = collection2.getPreviousRowValue(highlightedValue);\n              } else if (highlightedValue) {\n                nextValue = collection2.getPreviousValue(highlightedValue);\n              }\n              if (!nextValue && (prop(\"loopFocus\") || !highlightedValue)) {\n                nextValue = collection2.lastValue;\n              }\n              if (!nextValue) return;\n              event2.preventDefault();\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            ArrowDown(event2) {\n              let nextValue = null;\n              if ((0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) && highlightedValue) {\n                nextValue = collection2.getNextRowValue(highlightedValue);\n              } else if (highlightedValue) {\n                nextValue = collection2.getNextValue(highlightedValue);\n              }\n              if (!nextValue && (prop(\"loopFocus\") || !highlightedValue)) {\n                nextValue = collection2.firstValue;\n              }\n              if (!nextValue) return;\n              event2.preventDefault();\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            ArrowLeft() {\n              if (!(0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) && prop(\"orientation\") === \"vertical\") return;\n              let nextValue = highlightedValue ? collection2.getPreviousValue(highlightedValue) : null;\n              if (!nextValue && prop(\"loopFocus\")) {\n                nextValue = collection2.lastValue;\n              }\n              if (!nextValue) return;\n              event.preventDefault();\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            ArrowRight() {\n              if (!(0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.isGridCollection)(collection2) && prop(\"orientation\") === \"vertical\") return;\n              let nextValue = highlightedValue ? collection2.getNextValue(highlightedValue) : null;\n              if (!nextValue && prop(\"loopFocus\")) {\n                nextValue = collection2.firstValue;\n              }\n              if (!nextValue) return;\n              event.preventDefault();\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            Home(event2) {\n              event2.preventDefault();\n              let nextValue = collection2.firstValue;\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            End(event2) {\n              event2.preventDefault();\n              let nextValue = collection2.lastValue;\n              send({ type: \"NAVIGATE\", value: nextValue, shiftKey, anchorValue: highlightedValue });\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", value: highlightedValue });\n            },\n            a(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isCtrlOrMetaKey)(event2) && computed(\"multiple\") && !prop(\"disallowSelectAll\")) {\n                event2.preventDefault();\n                send({ type: \"VALUE.SET\", value: collection2.getValues() });\n              }\n            },\n            Space(event2) {\n              if (isTypingAhead && prop(\"typeahead\")) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Escape(event2) {\n              if (prop(\"deselectable\") && value.length > 0) {\n                event2.preventDefault();\n                event2.stopPropagation();\n                send({ type: \"VALUE.CLEAR\" });\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event)];\n          if (exec) {\n            exec(event);\n            return;\n          }\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isEditableElement)(target)) {\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event) && prop(\"typeahead\")) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    }\n  };\n}\nvar { guards, createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.setup)();\nvar { or } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      loopFocus: false,\n      composite: true,\n      defaultValue: [],\n      multiple: false,\n      typeahead: true,\n      collection: collection.empty(),\n      orientation: \"vertical\",\n      selectionMode: \"single\",\n      ...props2\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          const items = prop(\"collection\").findMany(value);\n          return prop(\"onValueChange\")?.({ value, items });\n        }\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        sync: true,\n        onChange(value) {\n          prop(\"onHighlightChange\")?.({\n            highlightedValue: value,\n            highlightedItem: prop(\"collection\").find(value),\n            highlightedIndex: prop(\"collection\").indexOf(value)\n          });\n        }\n      })),\n      highlightedItem: bindable(() => ({\n        defaultValue: null\n      })),\n      selectedItems: bindable(() => {\n        const value = prop(\"value\") ?? prop(\"defaultValue\") ?? [];\n        const items = prop(\"collection\").findMany(value);\n        return { defaultValue: items };\n      }),\n      focused: bindable(() => ({\n        sync: true,\n        defaultValue: false\n      }))\n    };\n  },\n  refs() {\n    return {\n      typeahead: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.defaultOptions },\n      focusVisible: false\n    };\n  },\n  computed: {\n    hasSelectedItems: ({ context }) => context.get(\"value\").length > 0,\n    isTypingAhead: ({ refs }) => refs.get(\"typeahead\").keysSoFar !== \"\",\n    isInteractive: ({ prop }) => !prop(\"disabled\"),\n    selection: ({ context, prop }) => {\n      const selection = new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.Selection(context.get(\"value\"));\n      selection.selectionMode = prop(\"selectionMode\");\n      selection.deselectable = !!prop(\"deselectable\");\n      return selection;\n    },\n    multiple: ({ prop }) => prop(\"selectionMode\") === \"multiple\" || prop(\"selectionMode\") === \"extended\",\n    valueAsString: ({ context, prop }) => prop(\"collection\").stringifyItems(context.get(\"selectedItems\"))\n  },\n  initialState() {\n    return \"idle\";\n  },\n  watch({ context, prop, track, action }) {\n    track([() => context.get(\"value\").toString()], () => {\n      action([\"syncSelectedItems\"]);\n    });\n    track([() => context.get(\"highlightedValue\")], () => {\n      action([\"syncHighlightedItem\"]);\n    });\n    track([() => prop(\"collection\").toString()], () => {\n      action([\"syncHighlightedValue\"]);\n    });\n  },\n  effects: [\"trackFocusVisible\"],\n  on: {\n    \"HIGHLIGHTED_VALUE.SET\": {\n      actions: [\"setHighlightedItem\"]\n    },\n    \"ITEM.SELECT\": {\n      actions: [\"selectItem\"]\n    },\n    \"ITEM.CLEAR\": {\n      actions: [\"clearItem\"]\n    },\n    \"VALUE.SET\": {\n      actions: [\"setSelectedItems\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearSelectedItems\"]\n    }\n  },\n  states: {\n    idle: {\n      effects: [\"scrollToHighlightedItem\"],\n      on: {\n        \"INPUT.FOCUS\": {\n          actions: [\"setFocused\"]\n        },\n        \"CONTENT.FOCUS\": [\n          {\n            guard: or(\"hasSelectedValue\", \"hasHighlightedValue\"),\n            actions: [\"setFocused\"]\n          },\n          {\n            actions: [\"setFocused\", \"setDefaultHighlightedValue\"]\n          }\n        ],\n        \"CONTENT.BLUR\": {\n          actions: [\"clearFocused\"]\n        },\n        \"ITEM.CLICK\": {\n          actions: [\"setHighlightedItem\", \"selectHighlightedItem\"]\n        },\n        \"CONTENT.TYPEAHEAD\": {\n          actions: [\"setFocused\", \"highlightMatchingItem\"]\n        },\n        \"ITEM.POINTER_MOVE\": {\n          actions: [\"highlightItem\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedItem\"]\n        },\n        NAVIGATE: {\n          actions: [\"setFocused\", \"setHighlightedItem\", \"selectWithKeyboard\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasSelectedValue: ({ context }) => context.get(\"value\").length > 0,\n      hasHighlightedValue: ({ context }) => context.get(\"highlightedValue\") != null\n    },\n    effects: {\n      trackFocusVisible: ({ scope, refs }) => {\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_5__.trackFocusVisible)({\n          root: scope.getRootNode?.(),\n          onChange(details) {\n            refs.set(\"focusVisible\", details.isFocusVisible);\n          }\n        });\n      },\n      scrollToHighlightedItem({ context, prop, scope }) {\n        const exec = (immediate) => {\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (highlightedValue == null) return;\n          const modality = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_5__.getInteractionModality)();\n          if (modality !== \"keyboard\") return;\n          const contentEl2 = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn?.({\n              index: highlightedIndex,\n              immediate,\n              getElement() {\n                return getItemEl(scope, highlightedValue);\n              }\n            });\n            return;\n          }\n          const itemEl = getItemEl(scope, highlightedValue);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n        };\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => exec(true));\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.observeAttributes)(contentEl, {\n          defer: true,\n          attributes: [\"data-activedescendant\"],\n          callback() {\n            exec(false);\n          }\n        });\n      }\n    },\n    actions: {\n      selectHighlightedItem({ context, prop, event, computed }) {\n        const value = event.value ?? context.get(\"highlightedValue\");\n        const collection2 = prop(\"collection\");\n        if (value == null || !collection2.has(value)) return;\n        const selection = computed(\"selection\");\n        if (event.shiftKey && computed(\"multiple\") && event.anchorValue) {\n          const next = selection.extendSelection(collection2, event.anchorValue, value);\n          invokeOnSelect(selection, next, prop(\"onSelect\"));\n          context.set(\"value\", Array.from(next));\n        } else {\n          const next = selection.select(collection2, value, event.metaKey);\n          invokeOnSelect(selection, next, prop(\"onSelect\"));\n          context.set(\"value\", Array.from(next));\n        }\n      },\n      selectWithKeyboard({ context, prop, event, computed }) {\n        const selection = computed(\"selection\");\n        const collection2 = prop(\"collection\");\n        if (event.shiftKey && computed(\"multiple\") && event.anchorValue) {\n          const next = selection.extendSelection(collection2, event.anchorValue, event.value);\n          invokeOnSelect(selection, next, prop(\"onSelect\"));\n          context.set(\"value\", Array.from(next));\n          return;\n        }\n        if (prop(\"selectOnHighlight\")) {\n          const next = selection.replaceSelection(collection2, event.value);\n          invokeOnSelect(selection, next, prop(\"onSelect\"));\n          context.set(\"value\", Array.from(next));\n        }\n      },\n      highlightItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      highlightMatchingItem({ context, prop, event, refs }) {\n        const value = prop(\"collection\").search(event.key, {\n          state: refs.get(\"typeahead\"),\n          currentValue: context.get(\"highlightedValue\")\n        });\n        if (value == null) return;\n        context.set(\"highlightedValue\", value);\n      },\n      setHighlightedItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      clearHighlightedItem({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      selectItem({ context, prop, event, computed }) {\n        const collection2 = prop(\"collection\");\n        const selection = computed(\"selection\");\n        const next = selection.select(collection2, event.value);\n        invokeOnSelect(selection, next, prop(\"onSelect\"));\n        context.set(\"value\", Array.from(next));\n      },\n      clearItem({ context, event, computed }) {\n        const selection = computed(\"selection\");\n        const value = selection.deselect(event.value);\n        context.set(\"value\", Array.from(value));\n      },\n      setSelectedItems({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      clearSelectedItems({ context }) {\n        context.set(\"value\", []);\n      },\n      syncSelectedItems({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const prevSelectedItems = context.get(\"selectedItems\");\n        const value = context.get(\"value\");\n        const selectedItems = value.map((value2) => {\n          const item = prevSelectedItems.find((item2) => collection2.getItemValue(item2) === value2);\n          return item || collection2.find(value2);\n        });\n        context.set(\"selectedItems\", selectedItems);\n      },\n      syncHighlightedItem({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedValue = context.get(\"highlightedValue\");\n        const highlightedItem = highlightedValue ? collection2.find(highlightedValue) : null;\n        context.set(\"highlightedItem\", highlightedItem);\n      },\n      syncHighlightedValue({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (highlightedValue != null && !collection2.has(highlightedValue)) {\n          context.set(\"highlightedValue\", null);\n        }\n      },\n      setFocused({ context }) {\n        context.set(\"focused\", true);\n      },\n      setDefaultHighlightedValue({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const firstValue = collection2.firstValue;\n        if (firstValue != null) {\n          context.set(\"highlightedValue\", firstValue);\n        }\n      },\n      clearFocused({ context }) {\n        context.set(\"focused\", false);\n      }\n    }\n  }\n});\nvar diff = (a, b) => {\n  const result = new Set(a);\n  for (const item of b) result.delete(item);\n  return result;\n};\nfunction invokeOnSelect(current, next, onSelect) {\n  const added = diff(next, current);\n  for (const item of added) {\n    onSelect?.({ value: item });\n  }\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"collection\",\n  \"defaultHighlightedValue\",\n  \"defaultValue\",\n  \"dir\",\n  \"disabled\",\n  \"deselectable\",\n  \"disallowSelectAll\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"onHighlightChange\",\n  \"onSelect\",\n  \"onValueChange\",\n  \"orientation\",\n  \"scrollToIndexFn\",\n  \"selectionMode\",\n  \"selectOnHighlight\",\n  \"typeahead\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"item\", \"highlightOnHover\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/listbox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/menu/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/menu/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   optionItemProps: () => (/* binding */ optionItemProps),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitOptionItemProps: () => (/* binding */ splitOptionItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/rect-utils */ \"(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/menu.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"menu\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"content\",\n  \"contextTrigger\",\n  \"indicator\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"positioner\",\n  \"separator\",\n  \"trigger\",\n  \"triggerItem\"\n);\nvar parts = anatomy.build();\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`;\nvar getContextTriggerId = (ctx) => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `menu:${ctx.id}:content`;\nvar getArrowId = (ctx) => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`;\nvar getGroupId = (ctx, id) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`;\nvar getItemId = (ctx, id) => `${ctx.id}/${id}`;\nvar getItemValue = (el) => el?.dataset.value ?? null;\nvar getGroupLabelId = (ctx, id) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getItemEl = (ctx, value) => value ? ctx.getById(getItemId(ctx, value)) : null;\nvar getContextTriggerEl = (ctx) => ctx.getById(getContextTriggerId(ctx));\nvar getElements = (ctx) => {\n  const ownerId = CSS.escape(getContentId(ctx));\n  const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getContentEl(ctx), selector);\n};\nvar getFirstEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(getElements(ctx));\nvar getLastEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(getElements(ctx));\nvar isMatch = (el, value) => {\n  if (!value) return false;\n  return el.id === value || el.dataset.value === value;\n};\nvar getNextEl = (ctx, opts) => {\n  const items = getElements(ctx);\n  const index = items.findIndex((el) => isMatch(el, opts.value));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.next)(items, index, { loop: opts.loop ?? opts.loopFocus });\n};\nvar getPrevEl = (ctx, opts) => {\n  const items = getElements(ctx);\n  const index = items.findIndex((el) => isMatch(el, opts.value));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.prev)(items, index, { loop: opts.loop ?? opts.loopFocus });\n};\nvar getElemByKey = (ctx, opts) => {\n  const items = getElements(ctx);\n  const item = items.find((el) => isMatch(el, opts.value));\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead)(items, { state: opts.typeaheadState, key: opts.key, activeId: item?.id ?? null });\n};\nvar isTargetDisabled = (v) => {\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"));\n};\nvar isTriggerItem = (el) => {\n  return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\");\n};\nvar itemSelectEvent = \"menu:select\";\nfunction dispatchSelectionEvent(el, value) {\n  if (!el) return;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(el);\n  const event = new win.CustomEvent(itemSelectEvent, { detail: { value } });\n  el.dispatchEvent(event);\n}\n\n// src/menu.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, state, computed, prop, scope } = service;\n  const open = state.hasTag(\"open\");\n  const isSubmenu = context.get(\"isSubmenu\");\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const composite = prop(\"composite\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const anchorPoint = context.get(\"anchorPoint\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: anchorPoint ? \"bottom\" : currentPlacement\n  });\n  function getItemState(props2) {\n    return {\n      id: getItemId(scope, props2.value),\n      disabled: !!props2.disabled,\n      highlighted: highlightedValue === props2.value\n    };\n  }\n  function getOptionItemProps(props2) {\n    const valueText = props2.valueText ?? props2.value;\n    return { ...props2, id: props2.value, valueText };\n  }\n  function getOptionItemState(props2) {\n    const itemState = getItemState(getOptionItemProps(props2));\n    return {\n      ...itemState,\n      checked: !!props2.checked\n    };\n  }\n  function getItemProps(props2) {\n    const { closeOnSelect, valueText, value } = props2;\n    const itemState = getItemState(props2);\n    const id = getItemId(scope, value);\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(itemState.disabled),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-ownedby\": getContentId(scope),\n      \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n      \"data-value\": value,\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\");\n        if (isLink) event.preventDefault();\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const target = event.currentTarget;\n        if (itemState.highlighted) return;\n        send({ type: \"ITEM_POINTERMOVE\", id, target, closeOnSelect });\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const pointerMoved = service.event.previous()?.type.includes(\"POINTER\");\n        if (!pointerMoved) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERLEAVE\", id, target, closeOnSelect });\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERDOWN\", target, id, closeOnSelect });\n      },\n      onClick(event) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_CLICK\", target, id, closeOnSelect });\n      }\n    });\n  }\n  return {\n    highlightedValue,\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setHighlightedValue(value) {\n      send({ type: \"HIGHLIGHTED.SET\", value });\n    },\n    setParent(parent) {\n      send({ type: \"PARENT.SET\", value: parent, id: parent.prop(\"id\") });\n    },\n    setChild(child) {\n      send({ type: \"CHILD.SET\", value: child, id: child.prop(\"id\") });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    addItemListener(props2) {\n      const node = scope.getById(props2.id);\n      if (!node) return;\n      const listener = () => props2.onSelect?.();\n      node.addEventListener(itemSelectEvent, listener);\n      return () => node.removeEventListener(itemSelectEvent, listener);\n    },\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getContextTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU_START\", point });\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return;\n          send({ type: \"CONTEXT_MENU_CANCEL\" });\n        },\n        onContextMenu(event) {\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU\", point });\n          event.preventDefault();\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\"\n        }\n      });\n    },\n    getTriggerItemProps(childApi) {\n      const triggerProps = childApi.getTriggerProps();\n      return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.mergeProps)(getItemProps({ value: triggerProps.id }), triggerProps);\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        type: \"button\",\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"data-uid\": prop(\"id\"),\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open || void 0,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return;\n          const disabled = isTargetDisabled(event.currentTarget);\n          if (disabled || !isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"TRIGGER_POINTERMOVE\", target: event.currentTarget, point });\n        },\n        onPointerLeave(event) {\n          if (isTargetDisabled(event.currentTarget)) return;\n          if (event.pointerType !== \"mouse\") return;\n          if (!isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({\n            type: \"TRIGGER_POINTERLEAVE\",\n            target: event.currentTarget,\n            point\n          });\n        },\n        onPointerDown(event) {\n          if (isTargetDisabled(event.currentTarget)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isContextMenuEvent)(event)) return;\n          event.preventDefault();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (isTargetDisabled(event.currentTarget)) return;\n          send({ type: \"TRIGGER_CLICK\", target: event.currentTarget });\n        },\n        onBlur() {\n          send({ type: \"TRIGGER_BLUR\" });\n        },\n        onFocus() {\n          send({ type: \"TRIGGER_FOCUS\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"ARROW_DOWN\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_UP\" });\n            },\n            Enter() {\n              send({ type: \"ARROW_DOWN\", src: \"enter\" });\n            },\n            Space() {\n              send({ type: \"ARROW_DOWN\", src: \"space\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            orientation: \"vertical\",\n            dir: prop(\"dir\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: getContentId(scope),\n        \"aria-label\": prop(\"aria-label\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: prop(\"dir\"),\n        \"aria-activedescendant\": computed(\"highlightedId\") || void 0,\n        \"aria-labelledby\": getTriggerId(scope),\n        \"data-placement\": currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return;\n          send({ type: \"MENU_POINTERENTER\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget;\n          if (!sameMenu) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const item = getItemEl(scope, highlightedValue);\n          const keyMap = {\n            ArrowDown() {\n              send({ type: \"ARROW_DOWN\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_UP\" });\n            },\n            ArrowLeft() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            Enter() {\n              send({ type: \"ENTER\" });\n              if (highlightedValue == null) return;\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isAnchorElement)(item)) {\n                prop(\"navigate\")?.({ value: highlightedValue, node: item, href: item.href });\n              }\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.stopPropagation();\n            event.preventDefault();\n            return;\n          }\n          if (!prop(\"typeahead\")) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isPrintableKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(target)) return;\n          send({ type: \"TYPEAHEAD\", key: event.key });\n          event.preventDefault();\n        }\n      });\n    },\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: prop(\"dir\"),\n        \"aria-orientation\": \"horizontal\"\n      });\n    },\n    getItemState,\n    getItemProps,\n    getOptionItemState,\n    getOptionItemProps(props2) {\n      const { type, disabled, closeOnSelect } = props2;\n      const option = getOptionItemProps(props2);\n      const itemState = getOptionItemState(props2);\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: prop(\"dir\"),\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n            const target = event.currentTarget;\n            send({ type: \"ITEM_CLICK\", target, option, closeOnSelect });\n          }\n        })\n      };\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getOptionItemState((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.cast)(props2));\n      const dataState = itemState.checked ? \"checked\" : \"unchecked\";\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.hasProp)(props2, \"checked\") ? dataState : void 0,\n        hidden: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.hasProp)(props2, \"checked\") ? !itemState.checked : void 0\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getOptionItemState((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.cast)(props2));\n      const dataState = itemState.checked ? \"checked\" : \"unchecked\";\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.hasProp)(props2, \"checked\") ? dataState : void 0\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: getGroupLabelId(scope, props2.htmlFor),\n        dir: prop(\"dir\")\n      });\n    },\n    getItemGroupProps(props2) {\n      return normalize.element({\n        id: getGroupId(scope, props2.id),\n        ...parts.itemGroup.attrs,\n        dir: prop(\"dir\"),\n        \"aria-labelledby\": getGroupLabelId(scope, props2.id),\n        role: \"group\"\n      });\n    }\n  };\n}\nvar { not, and, or } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      closeOnSelect: true,\n      typeahead: true,\n      composite: true,\n      loopFocus: false,\n      navigate(details) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.clickIfLink)(details.node);\n      },\n      ...props2,\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"idle\";\n  },\n  context({ bindable, prop }) {\n    return {\n      suspendPointer: bindable(() => ({\n        defaultValue: false\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          prop(\"onHighlightChange\")?.({ highlightedValue: value });\n        }\n      })),\n      lastHighlightedValue: bindable(() => ({\n        defaultValue: null\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      intentPolygon: bindable(() => ({\n        defaultValue: null\n      })),\n      anchorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return `x: ${value?.x}, y: ${value?.y}`;\n        }\n      })),\n      isSubmenu: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  refs() {\n    return {\n      parent: null,\n      children: {},\n      typeaheadState: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead.defaultOptions },\n      positioningOverride: {}\n    };\n  },\n  computed: {\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    isTypingAhead: ({ refs }) => refs.get(\"typeaheadState\").keysSoFar !== \"\",\n    highlightedId: ({ context, scope, refs }) => resolveItemId(refs.get(\"children\"), context.get(\"highlightedValue\"), scope)\n  },\n  watch({ track, action, context, prop }) {\n    track([() => context.get(\"isSubmenu\")], () => {\n      action([\"setSubmenuPlacement\"]);\n    });\n    track([() => context.hash(\"anchorPoint\")], () => {\n      if (!context.get(\"anchorPoint\")) return;\n      action([\"reposition\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  on: {\n    \"PARENT.SET\": {\n      actions: [\"setParentMenu\"]\n    },\n    \"CHILD.SET\": {\n      actions: [\"setChildMenu\"]\n    },\n    OPEN: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnOpen\"]\n      },\n      {\n        target: \"open\",\n        actions: [\"invokeOnOpen\"]\n      }\n    ],\n    OPEN_AUTOFOCUS: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnOpen\"]\n      },\n      {\n        // internal: true,\n        target: \"open\",\n        actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n      }\n    ],\n    CLOSE: [\n      {\n        guard: \"isOpenControlled\",\n        actions: [\"invokeOnClose\"]\n      },\n      {\n        target: \"closed\",\n        actions: [\"invokeOnClose\"]\n      }\n    ],\n    \"HIGHLIGHTED.RESTORE\": {\n      actions: [\"restoreHighlightedItem\"]\n    },\n    \"HIGHLIGHTED.SET\": {\n      actions: [\"setHighlightedItem\"]\n    }\n  },\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CONTEXT_MENU_START: {\n          target: \"opening:contextmenu\",\n          actions: [\"setAnchorPoint\"]\n        },\n        CONTEXT_MENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_FOCUS: {\n          guard: not(\"isSubmenu\"),\n          target: \"closed\"\n        },\n        TRIGGER_POINTERMOVE: {\n          guard: \"isSubmenu\",\n          target: \"opening\"\n        }\n      }\n    },\n    \"opening:contextmenu\": {\n      tags: [\"closed\"],\n      effects: [\"waitForLongPress\"],\n      on: {\n        \"CONTROLLED.OPEN\": { target: \"open\" },\n        \"CONTROLLED.CLOSE\": { target: \"closed\" },\n        CONTEXT_MENU_CANCEL: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"LONG_PRESS.OPEN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    opening: {\n      tags: [\"closed\"],\n      effects: [\"waitForOpenDelay\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        BLUR: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TRIGGER_POINTERLEAVE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"DELAY.OPEN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    closing: {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\", \"trackInteractOutside\", \"waitForCloseDelay\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n        },\n        // don't invoke on open here since the menu is still open (we're only keeping it open)\n        MENU_POINTERENTER: {\n          target: \"open\",\n          actions: [\"clearIntentPolygon\"]\n        },\n        POINTER_MOVED_AWAY_FROM_SUBMENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n          }\n        ],\n        \"DELAY.CLOSE\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\", \"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    closed: {\n      tags: [\"closed\"],\n      entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\", \"clearAnchorPoint\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n            target: \"open\",\n            actions: [\"highlightFirstItem\"]\n          },\n          {\n            guard: \"isArrowUpEvent\",\n            target: \"open\",\n            actions: [\"highlightLastItem\"]\n          },\n          {\n            target: \"open\"\n          }\n        ],\n        CONTEXT_MENU_START: {\n          target: \"opening:contextmenu\",\n          actions: [\"setAnchorPoint\"]\n        },\n        CONTEXT_MENU: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TRIGGER_POINTERMOVE: {\n          guard: \"isTriggerItem\",\n          target: \"opening\"\n        },\n        TRIGGER_BLUR: { target: \"idle\" },\n        ARROW_DOWN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n          }\n        ],\n        ARROW_UP: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"highlightLastItem\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      effects: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n      entry: [\"focusMenu\", \"resumePointer\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            target: \"closed\",\n            guard: \"isArrowLeftEvent\",\n            actions: [\"focusParentMenu\"]\n          },\n          {\n            target: \"closed\"\n          }\n        ],\n        TRIGGER_CLICK: [\n          {\n            guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: not(\"isTriggerItem\"),\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        CONTEXT_MENU: {\n          actions: [\"setAnchorPoint\", \"focusMenu\"]\n        },\n        ARROW_UP: {\n          actions: [\"highlightPrevItem\", \"focusMenu\"]\n        },\n        ARROW_DOWN: {\n          actions: [\"highlightNextItem\", \"focusMenu\"]\n        },\n        ARROW_LEFT: [\n          {\n            guard: and(\"isSubmenu\", \"isOpenControlled\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"isSubmenu\",\n            target: \"closed\",\n            actions: [\"focusParentMenu\", \"invokeOnClose\"]\n          }\n        ],\n        HOME: {\n          actions: [\"highlightFirstItem\", \"focusMenu\"]\n        },\n        END: {\n          actions: [\"highlightLastItem\", \"focusMenu\"]\n        },\n        ARROW_RIGHT: {\n          guard: \"isTriggerItemHighlighted\",\n          actions: [\"openSubmenu\"]\n        },\n        ENTER: [\n          {\n            guard: \"isTriggerItemHighlighted\",\n            actions: [\"openSubmenu\"]\n          },\n          {\n            actions: [\"clickHighlightedItem\"]\n          }\n        ],\n        ITEM_POINTERMOVE: [\n          {\n            guard: not(\"isPointerSuspended\"),\n            actions: [\"setHighlightedItem\", \"focusMenu\"]\n          },\n          {\n            actions: [\"setLastHighlightedItem\"]\n          }\n        ],\n        ITEM_POINTERLEAVE: {\n          guard: and(not(\"isPointerSuspended\"), not(\"isTriggerItem\")),\n          actions: [\"clearHighlightedItem\"]\n        },\n        ITEM_CLICK: [\n          // == grouped ==\n          {\n            guard: and(\n              not(\"isTriggerItemHighlighted\"),\n              not(\"isHighlightedItemEditable\"),\n              \"closeOnSelect\",\n              \"isOpenControlled\"\n            ),\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          },\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n            target: \"closed\",\n            actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n          },\n          //\n          {\n            guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n            actions: [\"invokeOnSelect\", \"setOptionState\"]\n          },\n          { actions: [\"setHighlightedItem\"] }\n        ],\n        TRIGGER_POINTERMOVE: {\n          guard: \"isTriggerItem\",\n          actions: [\"setIntentPolygon\"]\n        },\n        TRIGGER_POINTERLEAVE: {\n          target: \"closing\"\n        },\n        ITEM_POINTERDOWN: {\n          actions: [\"setHighlightedItem\"]\n        },\n        TYPEAHEAD: {\n          actions: [\"highlightMatchedItem\"]\n        },\n        FOCUS_MENU: {\n          actions: [\"focusMenu\"]\n        },\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnSelect: ({ prop, event }) => !!(event?.closeOnSelect ?? prop(\"closeOnSelect\")),\n      // whether the trigger is also a menu item\n      isTriggerItem: ({ event }) => isTriggerItem(event.target),\n      // whether the trigger item is the active item\n      isTriggerItemHighlighted: ({ event, scope, computed }) => {\n        const target = event.target ?? scope.getById(computed(\"highlightedId\"));\n        return !!target?.hasAttribute(\"aria-controls\");\n      },\n      isSubmenu: ({ context }) => context.get(\"isSubmenu\"),\n      isPointerSuspended: ({ context }) => context.get(\"suspendPointer\"),\n      isHighlightedItemEditable: ({ scope, computed }) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(scope.getById(computed(\"highlightedId\"))),\n      // guard assertions (for controlled mode)\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0,\n      isArrowLeftEvent: ({ event }) => event.previousEvent?.type === \"ARROW_LEFT\",\n      isArrowUpEvent: ({ event }) => event.previousEvent?.type === \"ARROW_UP\",\n      isArrowDownEvent: ({ event }) => event.previousEvent?.type === \"ARROW_DOWN\",\n      isOpenAutoFocusEvent: ({ event }) => event.previousEvent?.type === \"OPEN_AUTOFOCUS\"\n    },\n    effects: {\n      waitForOpenDelay({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"DELAY.OPEN\" });\n        }, 100);\n        return () => clearTimeout(timer);\n      },\n      waitForCloseDelay({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"DELAY.CLOSE\" });\n        }, 300);\n        return () => clearTimeout(timer);\n      },\n      waitForLongPress({ send }) {\n        const timer = setTimeout(() => {\n          send({ type: \"LONG_PRESS.OPEN\" });\n        }, 700);\n        return () => clearTimeout(timer);\n      },\n      trackPositioning({ context, prop, scope, refs }) {\n        if (!!getContextTriggerEl(scope)) return;\n        const positioning = {\n          ...prop(\"positioning\"),\n          ...refs.get(\"positioningOverride\")\n        };\n        context.set(\"currentPlacement\", positioning.placement);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...positioning,\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackInteractOutside({ refs, scope, prop, context, send }) {\n        const getContentEl2 = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl2, {\n          defer: true,\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside: prop(\"onInteractOutside\"),\n          onRequestDismiss: prop(\"onRequestDismiss\"),\n          onFocusOutside(event) {\n            prop(\"onFocusOutside\")?.(event);\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event.detail.originalEvent);\n            const isWithinContextTrigger = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getContextTriggerEl(scope), target);\n            if (isWithinContextTrigger) {\n              event.preventDefault();\n              return;\n            }\n          },\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (context.get(\"isSubmenu\")) event.preventDefault();\n            closeRootMenu({ parent: refs.get(\"parent\") });\n          },\n          onPointerDownOutside(event) {\n            prop(\"onPointerDownOutside\")?.(event);\n            const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event.detail.originalEvent);\n            const isWithinContextTrigger = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(getContextTriggerEl(scope), target);\n            if (isWithinContextTrigger && event.detail.contextmenu) {\n              event.preventDefault();\n              return;\n            }\n            restoreFocus = !event.detail.focusable;\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      trackPointerMove({ context, scope, send, refs, flush }) {\n        const parent = refs.get(\"parent\");\n        flush(() => {\n          parent.context.set(\"suspendPointer\", true);\n        });\n        const doc = scope.getDoc();\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"pointermove\", (e) => {\n          const isMovingToSubmenu = isWithinPolygon(context.get(\"intentPolygon\"), {\n            x: e.clientX,\n            y: e.clientY\n          });\n          if (!isMovingToSubmenu) {\n            send({ type: \"POINTER_MOVED_AWAY_FROM_SUBMENU\" });\n            parent.context.set(\"suspendPointer\", false);\n          }\n        });\n      },\n      scrollToHighlightedItem({ event, scope, computed }) {\n        const exec = () => {\n          if (event.type.startsWith(\"ITEM_POINTER\")) return;\n          const itemEl = scope.getById(computed(\"highlightedId\"));\n          const contentEl2 = getContentEl(scope);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n        };\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => exec());\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(contentEl, {\n          defer: true,\n          attributes: [\"aria-activedescendant\"],\n          callback: exec\n        });\n      }\n    },\n    actions: {\n      setAnchorPoint({ context, event }) {\n        context.set(\"anchorPoint\", (prev2) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(prev2, event.point) ? prev2 : event.point);\n      },\n      setSubmenuPlacement({ context, computed, refs }) {\n        if (!context.get(\"isSubmenu\")) return;\n        const placement = computed(\"isRtl\") ? \"left-start\" : \"right-start\";\n        refs.set(\"positioningOverride\", { placement, gutter: 0 });\n      },\n      reposition({ context, scope, prop, event, refs }) {\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        const anchorPoint = context.get(\"anchorPoint\");\n        const getAnchorRect = anchorPoint ? () => ({ width: 0, height: 0, ...anchorPoint }) : void 0;\n        const positioning = {\n          ...prop(\"positioning\"),\n          ...refs.get(\"positioningOverride\")\n        };\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...positioning,\n          defer: true,\n          getAnchorRect,\n          ...event.options ?? {},\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      setOptionState({ event }) {\n        if (!event.option) return;\n        const { checked, onCheckedChange, type } = event.option;\n        if (type === \"radio\") {\n          onCheckedChange?.(true);\n        } else if (type === \"checkbox\") {\n          onCheckedChange?.(!checked);\n        }\n      },\n      clickHighlightedItem({ scope, computed }) {\n        const itemEl = scope.getById(computed(\"highlightedId\"));\n        if (!itemEl || itemEl.dataset.disabled) return;\n        queueMicrotask(() => itemEl.click());\n      },\n      setIntentPolygon({ context, scope, event }) {\n        const menu = getContentEl(scope);\n        const placement = context.get(\"currentPlacement\");\n        if (!menu || !placement) return;\n        const rect = menu.getBoundingClientRect();\n        const polygon = (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.getElementPolygon)(rect, placement);\n        if (!polygon) return;\n        const rightSide = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementSide)(placement) === \"right\";\n        const bleed = rightSide ? -5 : 5;\n        context.set(\"intentPolygon\", [{ ...event.point, x: event.point.x + bleed }, ...polygon]);\n      },\n      clearIntentPolygon({ context }) {\n        context.set(\"intentPolygon\", null);\n      },\n      clearAnchorPoint({ context }) {\n        context.set(\"anchorPoint\", null);\n      },\n      resumePointer({ refs, flush }) {\n        const parent = refs.get(\"parent\");\n        if (!parent) return;\n        flush(() => {\n          parent.context.set(\"suspendPointer\", false);\n        });\n      },\n      setHighlightedItem({ context, event }) {\n        const value = event.value || getItemValue(event.target);\n        context.set(\"highlightedValue\", value);\n      },\n      clearHighlightedItem({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      focusMenu({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const contentEl = getContentEl(scope);\n          const initialFocusEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n            root: contentEl,\n            enabled: !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(contentEl, scope.getActiveElement()),\n            filter(node) {\n              return !node.role?.startsWith(\"menuitem\");\n            }\n          });\n          initialFocusEl?.focus({ preventScroll: true });\n        });\n      },\n      highlightFirstItem({ context, scope }) {\n        const fn = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n        fn(() => {\n          const first2 = getFirstEl(scope);\n          if (!first2) return;\n          context.set(\"highlightedValue\", getItemValue(first2));\n        });\n      },\n      highlightLastItem({ context, scope }) {\n        const fn = getContentEl(scope) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n        fn(() => {\n          const last2 = getLastEl(scope);\n          if (!last2) return;\n          context.set(\"highlightedValue\", getItemValue(last2));\n        });\n      },\n      highlightNextItem({ context, scope, event, prop }) {\n        const next2 = getNextEl(scope, {\n          loop: event.loop,\n          value: context.get(\"highlightedValue\"),\n          loopFocus: prop(\"loopFocus\")\n        });\n        context.set(\"highlightedValue\", getItemValue(next2));\n      },\n      highlightPrevItem({ context, scope, event, prop }) {\n        const prev2 = getPrevEl(scope, {\n          loop: event.loop,\n          value: context.get(\"highlightedValue\"),\n          loopFocus: prop(\"loopFocus\")\n        });\n        context.set(\"highlightedValue\", getItemValue(prev2));\n      },\n      invokeOnSelect({ context, prop, scope }) {\n        const value = context.get(\"highlightedValue\");\n        if (value == null) return;\n        const node = getItemEl(scope, value);\n        dispatchSelectionEvent(node, value);\n        prop(\"onSelect\")?.({ value });\n      },\n      focusTrigger({ scope, context, event }) {\n        if (context.get(\"isSubmenu\") || context.get(\"anchorPoint\") || event.restoreFocus === false) return;\n        queueMicrotask(() => getTriggerEl(scope)?.focus({ preventScroll: true }));\n      },\n      highlightMatchedItem({ scope, context, event, refs }) {\n        const node = getElemByKey(scope, {\n          key: event.key,\n          value: context.get(\"highlightedValue\"),\n          typeaheadState: refs.get(\"typeaheadState\")\n        });\n        if (!node) return;\n        context.set(\"highlightedValue\", getItemValue(node));\n      },\n      setParentMenu({ refs, event, context }) {\n        refs.set(\"parent\", event.value);\n        context.set(\"isSubmenu\", true);\n      },\n      setChildMenu({ refs, event }) {\n        const children = refs.get(\"children\");\n        children[event.id] = event.value;\n        refs.set(\"children\", children);\n      },\n      closeRootMenu({ refs }) {\n        closeRootMenu({ parent: refs.get(\"parent\") });\n      },\n      openSubmenu({ refs, scope, computed }) {\n        const item = scope.getById(computed(\"highlightedId\"));\n        const id = item?.getAttribute(\"data-uid\");\n        const children = refs.get(\"children\");\n        const child = id ? children[id] : null;\n        child?.send({ type: \"OPEN_AUTOFOCUS\" });\n      },\n      focusParentMenu({ refs }) {\n        refs.get(\"parent\")?.send({ type: \"FOCUS_MENU\" });\n      },\n      setLastHighlightedItem({ context, event }) {\n        context.set(\"lastHighlightedValue\", getItemValue(event.target));\n      },\n      restoreHighlightedItem({ context }) {\n        if (!context.get(\"lastHighlightedValue\")) return;\n        context.set(\"highlightedValue\", context.get(\"lastHighlightedValue\"));\n        context.set(\"lastHighlightedValue\", null);\n      },\n      restoreParentHighlightedItem({ refs }) {\n        refs.get(\"parent\")?.send({ type: \"HIGHLIGHTED.RESTORE\" });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      toggleVisibility({ prop, event, send }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nfunction closeRootMenu(ctx) {\n  let parent = ctx.parent;\n  while (parent && parent.context.get(\"isSubmenu\")) {\n    parent = parent.refs.get(\"parent\");\n  }\n  parent?.send({ type: \"CLOSE\" });\n}\nfunction isWithinPolygon(polygon, point) {\n  if (!polygon) return false;\n  return (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInPolygon)(polygon, point);\n}\nfunction resolveItemId(children, value, scope) {\n  const hasChildren = Object.keys(children).length > 0;\n  if (!value) return null;\n  if (!hasChildren) {\n    return getItemId(scope, value);\n  }\n  for (const id in children) {\n    const childMenu = children[id];\n    const childTriggerId = getTriggerId(childMenu.scope);\n    if (childTriggerId === value) {\n      return childTriggerId;\n    }\n  }\n  return getItemId(scope, value);\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"anchorPoint\",\n  \"aria-label\",\n  \"closeOnSelect\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultOpen\",\n  \"dir\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onRequestDismiss\",\n  \"onSelect\",\n  \"open\",\n  \"positioning\",\n  \"typeahead\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar optionItemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"checked\",\n  \"closeOnSelect\",\n  \"disabled\",\n  \"onCheckedChange\",\n  \"type\",\n  \"value\",\n  \"valueText\"\n]);\nvar splitOptionItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(optionItemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/menu/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/number-input/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _internationalized_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @internationalized/number */ \"(ssr)/./node_modules/@internationalized/number/dist/NumberParser.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/number-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = (ctx) => `number-input:${ctx.id}:cursor`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = (ctx) => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = (ctx) => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = (ctx) => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = (ctx) => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const { point, isRtl, event } = opts;\n  const win = ctx.getWin();\n  const x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementX, win.devicePixelRatio);\n  const y = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = { x: point.x + x, y: point.y + y };\n  const width = win.innerWidth;\n  const half = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, win.devicePixelRatio);\n  newPoint.x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.wrap)(newPoint.x + half, width) - half;\n  return { hint, point: newPoint };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope, computed } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const scrubbing = state.matches(\"scrubbing\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    increment() {\n      send({ type: \"VALUE.INCREMENT\" });\n    },\n    decrement() {\n      send({ type: \"VALUE.DECREMENT\" });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: prop(\"max\") });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: prop(\"min\") });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"formatOptions\") ? void 0 : prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onInput(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send({ type: \"INPUT.HOME\" });\n              event.preventDefault();\n            },\n            End() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send({ type: \"INPUT.END\" });\n              event.preventDefault();\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        onPointerDown(event) {\n          if (isDecrementDisabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        \"data-scrubbing\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(scrubbing),\n        onMouseDown(event) {\n          if (disabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          point.y = point.y - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new _internationalized_number__WEBPACK_IMPORTED_MODULE_3__.NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const { prop, computed } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  if (value === \"\") return Number.NaN;\n  return computed(\"parser\").parse(value);\n};\nvar formatValue = (value, params) => {\n  const { prop, computed } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar { choose, guards, createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.setup)();\nvar { not, and } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"-?[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getComputed }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, { computed, prop });\n          prop(\"onValueChange\")?.({ value, valueAsNumber });\n        }\n      })),\n      hint: bindable(() => ({ defaultValue: null })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  computed: {\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({ context, computed, prop }) => parseValue(context.get(\"value\"), { computed, prop }),\n    formattedValue: ({ computed, prop }) => formatValue(computed(\"valueAsNumber\"), { computed, prop }),\n    isAtMin: ({ computed, prop }) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMin)(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({ computed, prop }) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMax)(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({ computed, prop }) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({ context }) => context.get(\"value\") === \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({ prop, context }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createFormatter(locale, formatOptions)\n    ),\n    parser: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createParser(locale, formatOptions)\n    )\n  },\n  watch({ track, action, context, computed, prop }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n          }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [\n          {\n            guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n            target: \"idle\",\n            actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n          },\n          {\n            guard: not(\"isInRange\"),\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([\n        { guard: \"isIncrementHint\", actions: [\"increment\"] },\n        { guard: \"isDecrementHint\", actions: [\"decrement\"] }\n      ]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [\n          { guard: \"isTouchPointer\", target: \"focused\", actions: [\"clearHint\"] },\n          { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n        ]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\"]\n          }\n        ],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\", \"setCursorPoint\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\", \"setCursorPoint\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({ prop }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({ prop }) => !!prop(\"spinOnPress\"),\n      isInRange: ({ computed }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({ event }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({ send }) {\n        const id = setTimeout(() => {\n          send({ type: \"CHANGE_DELAY\" });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({ send }) {\n        const id = setInterval(() => {\n          send({ type: \"SPIN\" });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({ context, scope }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({ scope }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({ context, scope, send }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n          }\n        });\n      },\n      attachWheelListener({ scope, send, prop }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({ type: \"VALUE.INCREMENT\" });\n          } else if (dir === -1) {\n            send({ type: \"VALUE.DECREMENT\" });\n          }\n        }\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(inputEl, \"wheel\", onWheel, { passive: false });\n      },\n      activatePointerLock({ scope }) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.requestPointerLock)(scope.getDoc());\n      },\n      trackMousemove({ scope, send, context, computed }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, { point, isRtl, event });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({ type: \"SCRUBBER.POINTER_UP\" });\n        }\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mousemove\", onMousemove, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({ scope, prop }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => inputEl?.focus({ preventScroll: true }));\n      },\n      increment({ context, event, prop, computed }) {\n        let nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.incrementValue)(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      decrement({ context, event, prop, computed }) {\n        let nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.decrementValue)(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setClampedValue({ context, prop, computed }) {\n        const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setRawValue({ context, event, prop, computed }) {\n        let nextValue = parseValue(event.value, { computed, prop });\n        if (!prop(\"allowOverflow\")) nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setValue({ context, event }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({ context, prop, computed }) {\n        const value = formatValue(prop(\"max\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      decrementToMin({ context, prop, computed }) {\n        const value = formatValue(prop(\"min\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      setHint({ context, event }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({ context }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({ computed, prop, event }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({ context, event, computed, scope }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = recordCursor(inputEl);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, value);\n          restoreCursor(inputEl, sel);\n        });\n      },\n      setFormattedValue({ context, computed }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({ context, event }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({ context }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({ context, scope }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"allowMouseWheel\",\n  \"allowOverflow\",\n  \"clampValueOnBlur\",\n  \"dir\",\n  \"disabled\",\n  \"focusInputOnChange\",\n  \"form\",\n  \"formatOptions\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"inputMode\",\n  \"invalid\",\n  \"locale\",\n  \"max\",\n  \"min\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueInvalid\",\n  \"pattern\",\n  \"required\",\n  \"readOnly\",\n  \"spinOnPress\",\n  \"step\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/pagination/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/pagination/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   ellipsisProps: () => (/* binding */ ellipsisProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitEllipsisProps: () => (/* binding */ splitEllipsisProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/pagination.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"pagination\").parts(\"root\", \"item\", \"ellipsis\", \"prevTrigger\", \"nextTrigger\");\nvar parts = anatomy.build();\n\n// src/pagination.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `pagination:${ctx.id}`;\nvar getPrevTriggerId = (ctx) => ctx.ids?.prevTrigger ?? `pagination:${ctx.id}:prev`;\nvar getNextTriggerId = (ctx) => ctx.ids?.nextTrigger ?? `pagination:${ctx.id}:next`;\nvar getEllipsisId = (ctx, index) => ctx.ids?.ellipsis?.(index) ?? `pagination:${ctx.id}:ellipsis:${index}`;\nvar getItemId = (ctx, page) => ctx.ids?.item?.(page) ?? `pagination:${ctx.id}:item:${page}`;\n\n// src/pagination.utils.ts\nvar range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\nvar transform = (items) => {\n  return items.map((value) => {\n    if (typeof value === \"number\") return { type: \"page\", value };\n    return { type: \"ellipsis\" };\n  });\n};\nvar ELLIPSIS = \"ellipsis\";\nvar getRange = (ctx) => {\n  const { page, totalPages, siblingCount } = ctx;\n  const totalPageNumbers = Math.min(2 * siblingCount + 5, totalPages);\n  const firstPageIndex = 1;\n  const lastPageIndex = totalPages;\n  const leftSiblingIndex = Math.max(page - siblingCount, firstPageIndex);\n  const rightSiblingIndex = Math.min(page + siblingCount, lastPageIndex);\n  const showLeftEllipsis = leftSiblingIndex > firstPageIndex + 1;\n  const showRightEllipsis = rightSiblingIndex < lastPageIndex - 1;\n  const itemCount = totalPageNumbers - 2;\n  if (!showLeftEllipsis && showRightEllipsis) {\n    const leftRange = range(1, itemCount);\n    return [...leftRange, ELLIPSIS, lastPageIndex];\n  }\n  if (showLeftEllipsis && !showRightEllipsis) {\n    const rightRange = range(lastPageIndex - itemCount + 1, lastPageIndex);\n    return [firstPageIndex, ELLIPSIS, ...rightRange];\n  }\n  if (showLeftEllipsis && showRightEllipsis) {\n    const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n    return [firstPageIndex, ELLIPSIS, ...middleRange, ELLIPSIS, lastPageIndex];\n  }\n  const fullRange = range(firstPageIndex, lastPageIndex);\n  return fullRange;\n};\nvar getTransformedRange = (ctx) => transform(getRange(ctx));\n\n// src/pagination.connect.ts\nfunction connect(service, normalize) {\n  const { send, scope, prop, computed, context } = service;\n  const totalPages = computed(\"totalPages\");\n  const page = context.get(\"page\");\n  const translations = prop(\"translations\");\n  const count = prop(\"count\");\n  const previousPage = computed(\"previousPage\");\n  const nextPage = computed(\"nextPage\");\n  const pageRange = computed(\"pageRange\");\n  const type = prop(\"type\");\n  const isButton = type === \"button\";\n  const isFirstPage = page === 1;\n  const isLastPage = page === totalPages;\n  const pages = getTransformedRange({\n    page,\n    totalPages,\n    siblingCount: prop(\"siblingCount\")\n  });\n  return {\n    count,\n    page,\n    pageSize: context.get(\"pageSize\"),\n    totalPages,\n    pages,\n    previousPage,\n    nextPage,\n    pageRange,\n    slice(data) {\n      return data.slice(pageRange.start, pageRange.end);\n    },\n    setPageSize(size) {\n      send({ type: \"SET_PAGE_SIZE\", size });\n    },\n    setPage(page2) {\n      send({ type: \"SET_PAGE\", page: page2 });\n    },\n    goToNextPage() {\n      send({ type: \"NEXT_PAGE\" });\n    },\n    goToPrevPage() {\n      send({ type: \"PREVIOUS_PAGE\" });\n    },\n    goToFirstPage() {\n      send({ type: \"FIRST_PAGE\" });\n    },\n    goToLastPage() {\n      send({ type: \"LAST_PAGE\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"aria-label\": translations.rootLabel\n      });\n    },\n    getEllipsisProps(props2) {\n      return normalize.element({\n        id: getEllipsisId(scope, props2.index),\n        ...parts.ellipsis.attrs,\n        dir: prop(\"dir\")\n      });\n    },\n    getItemProps(props2) {\n      const index = props2.value;\n      const isCurrentPage = index === page;\n      return normalize.element({\n        id: getItemId(scope, index),\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isCurrentPage),\n        \"aria-current\": isCurrentPage ? \"page\" : void 0,\n        \"aria-label\": translations.itemLabel?.({ page: index, totalPages }),\n        onClick() {\n          send({ type: \"SET_PAGE\", page: index });\n        },\n        ...isButton && { type: \"button\" }\n      });\n    },\n    getPrevTriggerProps() {\n      return normalize.element({\n        id: getPrevTriggerId(scope),\n        ...parts.prevTrigger.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isFirstPage),\n        \"aria-label\": translations.prevTriggerLabel,\n        onClick() {\n          send({ type: \"PREVIOUS_PAGE\" });\n        },\n        ...isButton && { disabled: isFirstPage, type: \"button\" }\n      });\n    },\n    getNextTriggerProps() {\n      return normalize.element({\n        id: getNextTriggerId(scope),\n        ...parts.nextTrigger.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isLastPage),\n        \"aria-label\": translations.nextTriggerLabel,\n        onClick() {\n          send({ type: \"NEXT_PAGE\" });\n        },\n        ...isButton && { disabled: isLastPage, type: \"button\" }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultPageSize: 10,\n      siblingCount: 1,\n      defaultPage: 1,\n      type: \"button\",\n      count: 1,\n      ...props2,\n      translations: {\n        rootLabel: \"pagination\",\n        prevTriggerLabel: \"previous page\",\n        nextTriggerLabel: \"next page\",\n        itemLabel({ page, totalPages }) {\n          const isLastPage = totalPages > 1 && page === totalPages;\n          return `${isLastPage ? \"last page, \" : \"\"}page ${page}`;\n        },\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      page: bindable(() => ({\n        value: prop(\"page\"),\n        defaultValue: prop(\"defaultPage\"),\n        onChange(value) {\n          const context = getContext();\n          prop(\"onPageChange\")?.({ page: value, pageSize: context.get(\"pageSize\") });\n        }\n      })),\n      pageSize: bindable(() => ({\n        value: prop(\"pageSize\"),\n        defaultValue: prop(\"defaultPageSize\"),\n        onChange(value) {\n          prop(\"onPageSizeChange\")?.({ pageSize: value });\n        }\n      }))\n    };\n  },\n  watch({ track, context, action }) {\n    track([() => context.get(\"pageSize\")], () => {\n      action([\"setPageIfNeeded\"]);\n    });\n  },\n  computed: {\n    totalPages: ({ context, prop }) => Math.ceil(prop(\"count\") / context.get(\"pageSize\")),\n    previousPage: ({ context }) => context.get(\"page\") === 1 ? null : context.get(\"page\") - 1,\n    nextPage: ({ context, computed }) => context.get(\"page\") === computed(\"totalPages\") ? null : context.get(\"page\") + 1,\n    pageRange: ({ context, prop }) => {\n      const start = (context.get(\"page\") - 1) * context.get(\"pageSize\");\n      const end = Math.min(start + context.get(\"pageSize\"), prop(\"count\"));\n      return { start, end };\n    },\n    isValidPage: ({ context, computed }) => context.get(\"page\") >= 1 && context.get(\"page\") <= computed(\"totalPages\")\n  },\n  on: {\n    SET_PAGE: {\n      guard: \"isValidPage\",\n      actions: [\"setPage\"]\n    },\n    SET_PAGE_SIZE: {\n      actions: [\"setPageSize\"]\n    },\n    FIRST_PAGE: {\n      actions: [\"goToFirstPage\"]\n    },\n    LAST_PAGE: {\n      actions: [\"goToLastPage\"]\n    },\n    PREVIOUS_PAGE: {\n      guard: \"canGoToPrevPage\",\n      actions: [\"goToPrevPage\"]\n    },\n    NEXT_PAGE: {\n      guard: \"canGoToNextPage\",\n      actions: [\"goToNextPage\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    guards: {\n      isValidPage: ({ event, computed }) => event.page >= 1 && event.page <= computed(\"totalPages\"),\n      isValidCount: ({ context, event }) => context.get(\"page\") > event.count,\n      canGoToNextPage: ({ context, computed }) => context.get(\"page\") < computed(\"totalPages\"),\n      canGoToPrevPage: ({ context }) => context.get(\"page\") > 1\n    },\n    actions: {\n      setPage({ context, event, computed }) {\n        const page = clampPage(event.page, computed(\"totalPages\"));\n        context.set(\"page\", page);\n      },\n      setPageSize({ context, event }) {\n        context.set(\"pageSize\", event.size);\n      },\n      goToFirstPage({ context }) {\n        context.set(\"page\", 1);\n      },\n      goToLastPage({ context, computed }) {\n        context.set(\"page\", computed(\"totalPages\"));\n      },\n      goToPrevPage({ context, computed }) {\n        context.set(\"page\", (prev) => clampPage(prev - 1, computed(\"totalPages\")));\n      },\n      goToNextPage({ context, computed }) {\n        context.set(\"page\", (prev) => clampPage(prev + 1, computed(\"totalPages\")));\n      },\n      setPageIfNeeded({ context, computed }) {\n        if (computed(\"isValidPage\")) return;\n        context.set(\"page\", 1);\n      }\n    }\n  }\n});\nvar clampPage = (page, totalPages) => Math.min(Math.max(page, 1), totalPages);\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"count\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onPageChange\",\n  \"onPageSizeChange\",\n  \"page\",\n  \"defaultPage\",\n  \"pageSize\",\n  \"defaultPageSize\",\n  \"siblingCount\",\n  \"translations\",\n  \"type\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"value\", \"type\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\nvar ellipsisProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"index\"]);\nvar splitEllipsisProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(ellipsisProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/pagination/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/pin-input/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/pin-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"pinInput\").parts(\"root\", \"label\", \"input\", \"control\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `pin-input:${ctx.id}`;\nvar getInputId = (ctx, id) => ctx.ids?.input?.(id) ?? `pin-input:${ctx.id}:${id}`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `pin-input:${ctx.id}:hidden`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `pin-input:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `pin-input:${ctx.id}:control`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getInputEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `input[data-ownedby=${ownerId}]`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getInputElAtIndex = (ctx, index) => getInputEls(ctx)[index];\nvar getFirstInputEl = (ctx) => getInputEls(ctx)[0];\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar setInputValue = (inputEl, value) => {\n  inputEl.value = value;\n  inputEl.setAttribute(\"value\", value);\n};\n\n// src/pin-input.utils.ts\nvar REGEX = {\n  numeric: /^[0-9]+$/,\n  alphabetic: /^[A-Za-z]+$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/i\n};\nfunction isValidType(type, value) {\n  if (!type) return true;\n  return !!REGEX[type]?.test(value);\n}\nfunction isValidValue(value, type, pattern) {\n  if (!pattern) return isValidType(type, value);\n  const regex = new RegExp(pattern, \"g\");\n  return regex.test(value);\n}\n\n// src/pin-input.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, computed, prop, scope } = service;\n  const complete = computed(\"isValueComplete\");\n  const invalid = prop(\"invalid\");\n  const translations = prop(\"translations\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  function focus() {\n    getFirstInputEl(scope)?.focus();\n  }\n  return {\n    focus,\n    count: context.get(\"count\"),\n    items: Array.from({ length: context.get(\"count\") }).map((_, i) => i),\n    value: context.get(\"value\"),\n    valueAsString: computed(\"valueAsString\"),\n    complete,\n    setValue(value) {\n      if (!Array.isArray(value)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(\"[pin-input/setValue] value must be an array\");\n      }\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    setValueAtIndex(index, value) {\n      send({ type: \"VALUE.SET\", value, index });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\"))\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        htmlFor: getHiddenInputId(scope),\n        id: getLabelId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"readOnly\")),\n        onClick(event) {\n          event.preventDefault();\n          focus();\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        \"aria-hidden\": true,\n        type: \"text\",\n        tabIndex: -1,\n        id: getHiddenInputId(scope),\n        readOnly: prop(\"readOnly\"),\n        disabled: prop(\"disabled\"),\n        required: prop(\"required\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        maxLength: computed(\"valueLength\"),\n        defaultValue: computed(\"valueAsString\")\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope)\n      });\n    },\n    getInputProps(props2) {\n      const { index } = props2;\n      const inputType = prop(\"type\") === \"numeric\" ? \"tel\" : \"text\";\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        disabled: prop(\"disabled\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        id: getInputId(scope, index.toString()),\n        \"data-index\": index,\n        \"data-ownedby\": getRootId(scope),\n        \"aria-label\": translations?.inputLabel?.(index, computed(\"valueLength\")),\n        inputMode: prop(\"otp\") || prop(\"type\") === \"numeric\" ? \"numeric\" : \"text\",\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        type: prop(\"mask\") ? \"password\" : inputType,\n        defaultValue: context.get(\"value\")[index] || \"\",\n        readOnly: prop(\"readOnly\"),\n        autoCapitalize: \"none\",\n        autoComplete: prop(\"otp\") ? \"one-time-code\" : \"off\",\n        placeholder: focusedIndex === index ? \"\" : prop(\"placeholder\"),\n        onBeforeInput(event) {\n          try {\n            const value = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getBeforeInputValue)(event);\n            const isValid = isValidValue(value, prop(\"type\"), prop(\"pattern\"));\n            if (!isValid) {\n              send({ type: \"VALUE.INVALID\", value });\n              event.preventDefault();\n            }\n            if (value.length > 2) {\n              event.currentTarget.setSelectionRange(0, 1, \"forward\");\n            }\n          } catch {\n          }\n        },\n        onChange(event) {\n          const evt = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getNativeEvent)(event);\n          const { value } = event.currentTarget;\n          if (evt.inputType === \"insertFromPaste\" || value.length > 2) {\n            send({ type: \"INPUT.PASTE\", value });\n            event.currentTarget.value = value[0];\n            event.preventDefault();\n            return;\n          }\n          if (evt.inputType === \"deleteContentBackward\") {\n            send({ type: \"INPUT.BACKSPACE\" });\n            return;\n          }\n          send({ type: \"INPUT.CHANGE\", value, index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const keyMap = {\n            Backspace() {\n              send({ type: \"INPUT.BACKSPACE\" });\n            },\n            Delete() {\n              send({ type: \"INPUT.DELETE\" });\n            },\n            ArrowLeft() {\n              send({ type: \"INPUT.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"INPUT.ARROW_RIGHT\" });\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: \"horizontal\"\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        },\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\", index });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(target) && target.dataset.ownedby === getRootId(scope)) return;\n          send({ type: \"INPUT.BLUR\", index });\n        }\n      });\n    }\n  };\n}\nvar { choose, createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.setup)();\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      placeholder: \"\\u25CB\",\n      otp: false,\n      type: \"numeric\",\n      defaultValue: props2.count ? fill([], props2.count) : [],\n      ...props2,\n      translations: {\n        inputLabel: (index, length) => `pin code ${index + 1} of ${length}`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        value: prop(\"value\"),\n        defaultValue: prop(\"defaultValue\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value, valueAsString: value.join(\"\") });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        sync: true,\n        defaultValue: -1\n      })),\n      // TODO: Move this to `props` in next major version\n      count: bindable(() => ({\n        defaultValue: prop(\"count\")\n      }))\n    };\n  },\n  computed: {\n    _value: ({ context }) => fill(context.get(\"value\"), context.get(\"count\")),\n    valueLength: ({ computed }) => computed(\"_value\").length,\n    filledValueLength: ({ computed }) => computed(\"_value\").filter((v) => v?.trim() !== \"\").length,\n    isValueComplete: ({ computed }) => computed(\"valueLength\") === computed(\"filledValueLength\"),\n    valueAsString: ({ computed }) => computed(\"_value\").join(\"\"),\n    focusedValue: ({ computed, context }) => computed(\"_value\")[context.get(\"focusedIndex\")] || \"\"\n  },\n  entry: choose([\n    {\n      guard: \"autoFocus\",\n      actions: [\"setInputCount\", \"setFocusIndexToFirst\"]\n    },\n    { actions: [\"setInputCount\"] }\n  ]),\n  watch({ action, track, context, computed }) {\n    track([() => context.get(\"focusedIndex\")], () => {\n      action([\"focusInput\", \"selectInputIfNeeded\"]);\n    });\n    track([() => context.get(\"value\").join(\",\")], () => {\n      action([\"syncInputElements\", \"dispatchInputEvent\"]);\n    });\n    track([() => computed(\"isValueComplete\")], () => {\n      action([\"invokeOnComplete\", \"blurFocusedInputIfNeeded\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      { actions: [\"setValue\"] }\n    ],\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\", \"setFocusIndexToFirst\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"setFocusedIndex\"]\n        }\n      }\n    },\n    focused: {\n      on: {\n        \"INPUT.CHANGE\": {\n          actions: [\"setFocusedValue\", \"syncInputValue\", \"setNextFocusedIndex\"]\n        },\n        \"INPUT.PASTE\": {\n          actions: [\"setPastedValue\", \"setLastValueFocusIndex\"]\n        },\n        \"INPUT.FOCUS\": {\n          actions: [\"setFocusedIndex\"]\n        },\n        \"INPUT.BLUR\": {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        },\n        \"INPUT.DELETE\": {\n          guard: \"hasValue\",\n          actions: [\"clearFocusedValue\"]\n        },\n        \"INPUT.ARROW_LEFT\": {\n          actions: [\"setPrevFocusedIndex\"]\n        },\n        \"INPUT.ARROW_RIGHT\": {\n          actions: [\"setNextFocusedIndex\"]\n        },\n        \"INPUT.BACKSPACE\": [\n          {\n            guard: \"hasValue\",\n            actions: [\"clearFocusedValue\"]\n          },\n          {\n            actions: [\"setPrevFocusedIndex\", \"clearFocusedValue\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          guard: \"isValueComplete\",\n          actions: [\"requestFormSubmit\"]\n        },\n        \"VALUE.INVALID\": {\n          actions: [\"invokeOnInvalid\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      autoFocus: ({ prop }) => !!prop(\"autoFocus\"),\n      hasValue: ({ context }) => context.get(\"value\")[context.get(\"focusedIndex\")] !== \"\",\n      isValueComplete: ({ computed }) => computed(\"isValueComplete\"),\n      hasIndex: ({ event }) => event.index !== void 0\n    },\n    actions: {\n      dispatchInputEvent({ computed, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: computed(\"valueAsString\") });\n      },\n      setInputCount({ scope, context, prop }) {\n        if (prop(\"count\")) return;\n        const inputEls = getInputEls(scope);\n        context.set(\"count\", inputEls.length);\n      },\n      focusInput({ context, scope }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (focusedIndex === -1) return;\n        getInputElAtIndex(scope, focusedIndex)?.focus({ preventScroll: true });\n      },\n      selectInputIfNeeded({ context, prop, scope }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (!prop(\"selectOnFocus\") || focusedIndex === -1) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getInputElAtIndex(scope, focusedIndex)?.select();\n        });\n      },\n      invokeOnComplete({ computed, prop }) {\n        if (!computed(\"isValueComplete\")) return;\n        prop(\"onValueComplete\")?.({\n          value: computed(\"_value\"),\n          valueAsString: computed(\"valueAsString\")\n        });\n      },\n      invokeOnInvalid({ context, event, prop }) {\n        prop(\"onValueInvalid\")?.({\n          value: event.value,\n          index: context.get(\"focusedIndex\")\n        });\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      setValue({ context, event }) {\n        const value = fill(event.value, context.get(\"count\"));\n        context.set(\"value\", value);\n      },\n      setFocusedValue({ context, event, computed, flush }) {\n        const focusedValue = computed(\"focusedValue\");\n        const focusedIndex = context.get(\"focusedIndex\");\n        const value = getNextValue(focusedValue, event.value);\n        flush(() => {\n          context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), focusedIndex, value));\n        });\n      },\n      revertInputValue({ context, computed, scope }) {\n        const inputEl = getInputElAtIndex(scope, context.get(\"focusedIndex\"));\n        setInputValue(inputEl, computed(\"focusedValue\"));\n      },\n      syncInputValue({ context, event, scope }) {\n        const value = context.get(\"value\");\n        const inputEl = getInputElAtIndex(scope, event.index);\n        setInputValue(inputEl, value[event.index]);\n      },\n      syncInputElements({ context, scope }) {\n        const inputEls = getInputEls(scope);\n        const value = context.get(\"value\");\n        inputEls.forEach((inputEl, index) => {\n          setInputValue(inputEl, value[index]);\n        });\n      },\n      setPastedValue({ context, event, computed, flush }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const valueAsString = computed(\"valueAsString\");\n          const focusedIndex = context.get(\"focusedIndex\");\n          const valueLength = computed(\"valueLength\");\n          const filledValueLength = computed(\"filledValueLength\");\n          const startIndex = Math.min(focusedIndex, filledValueLength);\n          const left = startIndex > 0 ? valueAsString.substring(0, focusedIndex) : \"\";\n          const right = event.value.substring(0, valueLength - startIndex);\n          const value = fill(`${left}${right}`.split(\"\"), valueLength);\n          flush(() => {\n            context.set(\"value\", value);\n          });\n        });\n      },\n      setValueAtIndex({ context, event, computed }) {\n        const nextValue = getNextValue(computed(\"focusedValue\"), event.value);\n        context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), event.index, nextValue));\n      },\n      clearValue({ context }) {\n        const nextValue = Array.from({ length: context.get(\"count\") }).fill(\"\");\n        queueMicrotask(() => {\n          context.set(\"value\", nextValue);\n        });\n      },\n      clearFocusedValue({ context, computed }) {\n        const focusedIndex = context.get(\"focusedIndex\");\n        if (focusedIndex === -1) return;\n        context.set(\"value\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(computed(\"_value\"), focusedIndex, \"\"));\n      },\n      setFocusIndexToFirst({ context }) {\n        context.set(\"focusedIndex\", 0);\n      },\n      setNextFocusedIndex({ context, computed }) {\n        context.set(\"focusedIndex\", Math.min(context.get(\"focusedIndex\") + 1, computed(\"valueLength\") - 1));\n      },\n      setPrevFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", Math.max(context.get(\"focusedIndex\") - 1, 0));\n      },\n      setLastValueFocusIndex({ context, computed }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          context.set(\"focusedIndex\", Math.min(computed(\"filledValueLength\"), computed(\"valueLength\") - 1));\n        });\n      },\n      blurFocusedInputIfNeeded({ context, prop, scope }) {\n        if (!prop(\"blurOnComplete\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getInputElAtIndex(scope, context.get(\"focusedIndex\"))?.blur();\n        });\n      },\n      requestFormSubmit({ computed, prop, scope }) {\n        if (!prop(\"name\") || !computed(\"isValueComplete\")) return;\n        const inputEl = getHiddenInputEl(scope);\n        inputEl?.form?.requestSubmit();\n      }\n    }\n  }\n});\nfunction getNextValue(current, next) {\n  let nextValue = next;\n  if (current[0] === next[0]) nextValue = next[1];\n  else if (current[0] === next[1]) nextValue = next[0];\n  return nextValue.split(\"\")[nextValue.length - 1];\n}\nfunction fill(value, count) {\n  return Array.from({ length: count }).fill(\"\").map((v, i) => value[i] || v);\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"autoFocus\",\n  \"blurOnComplete\",\n  \"count\",\n  \"defaultValue\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"mask\",\n  \"name\",\n  \"onValueChange\",\n  \"onValueComplete\",\n  \"onValueInvalid\",\n  \"otp\",\n  \"pattern\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"translations\",\n  \"type\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popover/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/popover/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n// src/popover.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"popover\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"anchor\",\n  \"trigger\",\n  \"indicator\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar getAnchorId = (scope) => scope.ids?.anchor ?? `popover:${scope.id}:anchor`;\nvar getTriggerId = (scope) => scope.ids?.trigger ?? `popover:${scope.id}:trigger`;\nvar getContentId = (scope) => scope.ids?.content ?? `popover:${scope.id}:content`;\nvar getPositionerId = (scope) => scope.ids?.positioner ?? `popover:${scope.id}:popper`;\nvar getArrowId = (scope) => scope.ids?.arrow ?? `popover:${scope.id}:arrow`;\nvar getTitleId = (scope) => scope.ids?.title ?? `popover:${scope.id}:title`;\nvar getDescriptionId = (scope) => scope.ids?.description ?? `popover:${scope.id}:desc`;\nvar getCloseTriggerId = (scope) => scope.ids?.closeTrigger ?? `popover:${scope.id}:close`;\nvar getAnchorEl = (scope) => scope.getById(getAnchorId(scope));\nvar getTriggerEl = (scope) => scope.getById(getTriggerId(scope));\nvar getContentEl = (scope) => scope.getById(getContentId(scope));\nvar getPositionerEl = (scope) => scope.getById(getPositionerId(scope));\nvar getTitleEl = (scope) => scope.getById(getTitleId(scope));\nvar getDescriptionEl = (scope) => scope.getById(getDescriptionId(scope));\n\n// src/popover.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, computed, prop, scope } = service;\n  const open = state.matches(\"open\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const portalled = computed(\"currentPortalled\");\n  const rendered = context.get(\"renderedElements\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  return {\n    portalled,\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: prop(\"dir\"),\n        id: getAnchorId(scope)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onPointerDown(event) {\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"TOGGLE\" });\n        },\n        onBlur(event) {\n          send({ type: \"TRIGGER_BLUR\", target: event.relatedTarget });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(open),\n        \"aria-labelledby\": rendered.title ? getTitleId(scope) : void 0,\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0,\n        \"data-placement\": currentPlacement\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: getDescriptionId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({ type: \"CLOSE\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      closeOnInteractOutside: true,\n      closeOnEscape: true,\n      autoFocus: true,\n      modal: false,\n      portalled: true,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      renderedElements: bindable(() => ({\n        defaultValue: { title: true, description: true }\n      }))\n    };\n  },\n  computed: {\n    currentPortalled: ({ prop }) => !!prop(\"modal\") || !!prop(\"portalled\")\n  },\n  watch({ track, prop, action }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  entry: [\"checkRenderedElements\"],\n  states: {\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setInitialFocus\"]\n        },\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }\n        ]\n      }\n    },\n    open: {\n      effects: [\n        \"trapFocus\",\n        \"preventScroll\",\n        \"hideContentBelow\",\n        \"trackPositioning\",\n        \"trackDismissableElement\",\n        \"proxyTabFocus\"\n      ],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"setFinalFocus\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackPositioning({ context, prop, scope }) {\n        context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        const anchorEl = getAnchorEl(scope) ?? getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackDismissableElement({ send, prop, scope }) {\n        const getContentEl2 = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__.trackDismissableElement)(getContentEl2, {\n          pointerBlocking: prop(\"modal\"),\n          exclude: getTriggerEl(scope),\n          defer: true,\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (prop(\"closeOnEscape\")) return;\n            event.preventDefault();\n          },\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (event.defaultPrevented) return;\n            restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          persistentElements: prop(\"persistentElements\"),\n          onRequestDismiss: prop(\"onRequestDismiss\"),\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      proxyTabFocus({ prop, scope }) {\n        if (prop(\"modal\") || !prop(\"portalled\")) return;\n        const getContentEl2 = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.proxyTabFocus)(getContentEl2, {\n          triggerElement: getTriggerEl(scope),\n          defer: true,\n          onFocus(el) {\n            el.focus({ preventScroll: true });\n          }\n        });\n      },\n      hideContentBelow({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope), getTriggerEl(scope)];\n        return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_5__.ariaHidden)(getElements, { defer: true });\n      },\n      preventScroll({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_6__.preventBodyScroll)(scope.getDoc());\n      },\n      trapFocus({ prop, scope }) {\n        if (!prop(\"modal\")) return;\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_7__.trapFocus)(contentEl, {\n          initialFocus: () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\"),\n            enabled: prop(\"autoFocus\")\n          })\n        });\n      }\n    },\n    actions: {\n      reposition({ event, prop, scope, context }) {\n        const anchorEl = getAnchorEl(scope) ?? getTriggerEl(scope);\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_1__.getPlacement)(anchorEl, getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      checkRenderedElements({ context, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          Object.assign(context.get(\"renderedElements\"), {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      setInitialFocus({ prop, scope }) {\n        if (prop(\"modal\")) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getInitialFocus)({\n            root: getContentEl(scope),\n            getInitialEl: prop(\"initialFocusEl\"),\n            enabled: prop(\"autoFocus\")\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      setFinalFocus({ event, scope }) {\n        const restoreFocus = event.restoreFocus ?? event.previousEvent?.restoreFocus;\n        if (restoreFocus != null && !restoreFocus) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n          const element = getTriggerEl(scope);\n          element?.focus({ preventScroll: true });\n        });\n      },\n      invokeOnOpen({ prop, flush }) {\n        flush(() => {\n          prop(\"onOpenChange\")?.({ open: true });\n        });\n      },\n      invokeOnClose({ prop, flush }) {\n        flush(() => {\n          prop(\"onOpenChange\")?.({ open: false });\n        });\n      },\n      toggleVisibility({ event, send, prop }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"autoFocus\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onRequestDismiss\",\n  \"defaultOpen\",\n  \"open\",\n  \"persistentElements\",\n  \"portalled\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_9__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9wb3BvdmVyL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUN5RDtBQUN2QztBQUNqQjtBQUNKO0FBQ2lCO0FBQ2Y7QUFDVztBQUNkO0FBQ0s7O0FBRWpEO0FBQ0EsY0FBYyw4REFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsU0FBUztBQUN0RSwrREFBK0QsU0FBUztBQUN4RSwrREFBK0QsU0FBUztBQUN4RSxxRUFBcUUsU0FBUztBQUM5RSwyREFBMkQsU0FBUztBQUNwRSwyREFBMkQsU0FBUztBQUNwRSx1RUFBdUUsU0FBUztBQUNoRix5RUFBeUUsU0FBUztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVUsOENBQThDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtFQUFrQjtBQUN6QztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUNBQW1DO0FBQ2hELEtBQUs7QUFDTCwyQkFBMkI7QUFDM0IsYUFBYSxrQ0FBa0M7QUFDL0MsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4REFBVztBQUMxQixjQUFjLDJEQUFRO0FBQ3RCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakMsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLG1EQUFtRDtBQUNwRTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQWE7QUFDM0IsVUFBVSxlQUFlO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0EsR0FBRztBQUNILFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx3QkFBd0I7QUFDeEIsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0EseUJBQXlCLE1BQU07QUFDL0IsR0FBRztBQUNILFVBQVUscUJBQXFCO0FBQy9CO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSwyQkFBMkIsTUFBTTtBQUNqQyxLQUFLO0FBQ0w7QUFDQSx5QkFBeUIsc0JBQXNCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsZ0NBQWdDLG1CQUFtQjtBQUNuRDtBQUNBO0FBQ0EsZUFBZSw0RUFBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzREFBc0Q7QUFDekU7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLHNCQUFzQixhQUFhO0FBQ25DO0FBQ0E7QUFDQSxlQUFlLGdFQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxQkFBcUI7QUFDNUM7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLHlCQUF5QixhQUFhO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLCtEQUFVLGdCQUFnQixhQUFhO0FBQ3RELE9BQU87QUFDUCxzQkFBc0IsYUFBYTtBQUNuQztBQUNBLGVBQWUsd0VBQWlCO0FBQ2hDLE9BQU87QUFDUCxrQkFBa0IsYUFBYTtBQUMvQjtBQUNBO0FBQ0EsZUFBZSw2REFBUztBQUN4Qiw4QkFBOEIsa0VBQWU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLG1CQUFtQiw2QkFBNkI7QUFDaEQ7QUFDQTtBQUNBLFFBQVEsNERBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLDhCQUE4QixnQkFBZ0I7QUFDOUMsUUFBUSxzREFBRztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1QsT0FBTztBQUNQLHdCQUF3QixhQUFhO0FBQ3JDO0FBQ0EsUUFBUSxzREFBRztBQUNYLDBCQUEwQixrRUFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsMkJBQTJCLHFCQUFxQjtBQUNoRCxTQUFTO0FBQ1QsT0FBTztBQUNQLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQSxRQUFRLHNEQUFHO0FBQ1g7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hELFNBQVM7QUFDVCxPQUFPO0FBQ1AscUJBQXFCLGFBQWE7QUFDbEM7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQyxTQUFTO0FBQ1QsT0FBTztBQUNQLHNCQUFzQixhQUFhO0FBQ25DO0FBQ0EsbUNBQW1DLGFBQWE7QUFDaEQsU0FBUztBQUNULE9BQU87QUFDUCx5QkFBeUIsbUJBQW1CO0FBQzVDLGVBQWUsbUZBQW1GO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxZQUFZLDBEQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrREFBZ0I7O0FBRXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9wb3BvdmVyL2Rpc3QvaW5kZXgubWpzPzFjNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQW5hdG9teSB9IGZyb20gJ0B6YWctanMvYW5hdG9teSc7XG5pbXBvcnQgeyByYWYsIGdldEluaXRpYWxGb2N1cywgcHJveHlUYWJGb2N1cywgZGF0YUF0dHIsIGlzTGVmdENsaWNrLCBpc1NhZmFyaSB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGdldFBsYWNlbWVudCwgZ2V0UGxhY2VtZW50U3R5bGVzIH0gZnJvbSAnQHphZy1qcy9wb3BwZXInO1xuaW1wb3J0IHsgYXJpYUhpZGRlbiB9IGZyb20gJ0B6YWctanMvYXJpYS1oaWRkZW4nO1xuaW1wb3J0IHsgY3JlYXRlTWFjaGluZSB9IGZyb20gJ0B6YWctanMvY29yZSc7XG5pbXBvcnQgeyB0cmFja0Rpc21pc3NhYmxlRWxlbWVudCB9IGZyb20gJ0B6YWctanMvZGlzbWlzc2FibGUnO1xuaW1wb3J0IHsgdHJhcEZvY3VzIH0gZnJvbSAnQHphZy1qcy9mb2N1cy10cmFwJztcbmltcG9ydCB7IHByZXZlbnRCb2R5U2Nyb2xsIH0gZnJvbSAnQHphZy1qcy9yZW1vdmUtc2Nyb2xsJztcbmltcG9ydCB7IGNyZWF0ZVByb3BzIH0gZnJvbSAnQHphZy1qcy90eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVTcGxpdFByb3BzIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5cbi8vIHNyYy9wb3BvdmVyLmFuYXRvbXkudHNcbnZhciBhbmF0b215ID0gY3JlYXRlQW5hdG9teShcInBvcG92ZXJcIikucGFydHMoXG4gIFwiYXJyb3dcIixcbiAgXCJhcnJvd1RpcFwiLFxuICBcImFuY2hvclwiLFxuICBcInRyaWdnZXJcIixcbiAgXCJpbmRpY2F0b3JcIixcbiAgXCJwb3NpdGlvbmVyXCIsXG4gIFwiY29udGVudFwiLFxuICBcInRpdGxlXCIsXG4gIFwiZGVzY3JpcHRpb25cIixcbiAgXCJjbG9zZVRyaWdnZXJcIlxuKTtcbnZhciBwYXJ0cyA9IGFuYXRvbXkuYnVpbGQoKTtcbnZhciBnZXRBbmNob3JJZCA9IChzY29wZSkgPT4gc2NvcGUuaWRzPy5hbmNob3IgPz8gYHBvcG92ZXI6JHtzY29wZS5pZH06YW5jaG9yYDtcbnZhciBnZXRUcmlnZ2VySWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8udHJpZ2dlciA/PyBgcG9wb3Zlcjoke3Njb3BlLmlkfTp0cmlnZ2VyYDtcbnZhciBnZXRDb250ZW50SWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8uY29udGVudCA/PyBgcG9wb3Zlcjoke3Njb3BlLmlkfTpjb250ZW50YDtcbnZhciBnZXRQb3NpdGlvbmVySWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8ucG9zaXRpb25lciA/PyBgcG9wb3Zlcjoke3Njb3BlLmlkfTpwb3BwZXJgO1xudmFyIGdldEFycm93SWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8uYXJyb3cgPz8gYHBvcG92ZXI6JHtzY29wZS5pZH06YXJyb3dgO1xudmFyIGdldFRpdGxlSWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8udGl0bGUgPz8gYHBvcG92ZXI6JHtzY29wZS5pZH06dGl0bGVgO1xudmFyIGdldERlc2NyaXB0aW9uSWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8uZGVzY3JpcHRpb24gPz8gYHBvcG92ZXI6JHtzY29wZS5pZH06ZGVzY2A7XG52YXIgZ2V0Q2xvc2VUcmlnZ2VySWQgPSAoc2NvcGUpID0+IHNjb3BlLmlkcz8uY2xvc2VUcmlnZ2VyID8/IGBwb3BvdmVyOiR7c2NvcGUuaWR9OmNsb3NlYDtcbnZhciBnZXRBbmNob3JFbCA9IChzY29wZSkgPT4gc2NvcGUuZ2V0QnlJZChnZXRBbmNob3JJZChzY29wZSkpO1xudmFyIGdldFRyaWdnZXJFbCA9IChzY29wZSkgPT4gc2NvcGUuZ2V0QnlJZChnZXRUcmlnZ2VySWQoc2NvcGUpKTtcbnZhciBnZXRDb250ZW50RWwgPSAoc2NvcGUpID0+IHNjb3BlLmdldEJ5SWQoZ2V0Q29udGVudElkKHNjb3BlKSk7XG52YXIgZ2V0UG9zaXRpb25lckVsID0gKHNjb3BlKSA9PiBzY29wZS5nZXRCeUlkKGdldFBvc2l0aW9uZXJJZChzY29wZSkpO1xudmFyIGdldFRpdGxlRWwgPSAoc2NvcGUpID0+IHNjb3BlLmdldEJ5SWQoZ2V0VGl0bGVJZChzY29wZSkpO1xudmFyIGdldERlc2NyaXB0aW9uRWwgPSAoc2NvcGUpID0+IHNjb3BlLmdldEJ5SWQoZ2V0RGVzY3JpcHRpb25JZChzY29wZSkpO1xuXG4vLyBzcmMvcG9wb3Zlci5jb25uZWN0LnRzXG5mdW5jdGlvbiBjb25uZWN0KHNlcnZpY2UsIG5vcm1hbGl6ZSkge1xuICBjb25zdCB7IHN0YXRlLCBjb250ZXh0LCBzZW5kLCBjb21wdXRlZCwgcHJvcCwgc2NvcGUgfSA9IHNlcnZpY2U7XG4gIGNvbnN0IG9wZW4gPSBzdGF0ZS5tYXRjaGVzKFwib3BlblwiKTtcbiAgY29uc3QgY3VycmVudFBsYWNlbWVudCA9IGNvbnRleHQuZ2V0KFwiY3VycmVudFBsYWNlbWVudFwiKTtcbiAgY29uc3QgcG9ydGFsbGVkID0gY29tcHV0ZWQoXCJjdXJyZW50UG9ydGFsbGVkXCIpO1xuICBjb25zdCByZW5kZXJlZCA9IGNvbnRleHQuZ2V0KFwicmVuZGVyZWRFbGVtZW50c1wiKTtcbiAgY29uc3QgcG9wcGVyU3R5bGVzID0gZ2V0UGxhY2VtZW50U3R5bGVzKHtcbiAgICAuLi5wcm9wKFwicG9zaXRpb25pbmdcIiksXG4gICAgcGxhY2VtZW50OiBjdXJyZW50UGxhY2VtZW50XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHBvcnRhbGxlZCxcbiAgICBvcGVuLFxuICAgIHNldE9wZW4obmV4dE9wZW4pIHtcbiAgICAgIGNvbnN0IG9wZW4yID0gc3RhdGUubWF0Y2hlcyhcIm9wZW5cIik7XG4gICAgICBpZiAob3BlbjIgPT09IG5leHRPcGVuKSByZXR1cm47XG4gICAgICBzZW5kKHsgdHlwZTogbmV4dE9wZW4gPyBcIk9QRU5cIiA6IFwiQ0xPU0VcIiB9KTtcbiAgICB9LFxuICAgIHJlcG9zaXRpb24ob3B0aW9ucyA9IHt9KSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJQT1NJVElPTklORy5TRVRcIiwgb3B0aW9ucyB9KTtcbiAgICB9LFxuICAgIGdldEFycm93UHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICBpZDogZ2V0QXJyb3dJZChzY29wZSksXG4gICAgICAgIC4uLnBhcnRzLmFycm93LmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIHN0eWxlOiBwb3BwZXJTdHlsZXMuYXJyb3dcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QXJyb3dUaXBQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmFycm93VGlwLmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIHN0eWxlOiBwb3BwZXJTdHlsZXMuYXJyb3dUaXBcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QW5jaG9yUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5hbmNob3IuYXR0cnMsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgaWQ6IGdldEFuY2hvcklkKHNjb3BlKVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRUcmlnZ2VyUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmJ1dHRvbih7XG4gICAgICAgIC4uLnBhcnRzLnRyaWdnZXIuYXR0cnMsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgdHlwZTogXCJidXR0b25cIixcbiAgICAgICAgXCJkYXRhLXBsYWNlbWVudFwiOiBjdXJyZW50UGxhY2VtZW50LFxuICAgICAgICBpZDogZ2V0VHJpZ2dlcklkKHNjb3BlKSxcbiAgICAgICAgXCJhcmlhLWhhc3BvcHVwXCI6IFwiZGlhbG9nXCIsXG4gICAgICAgIFwiYXJpYS1leHBhbmRlZFwiOiBvcGVuLFxuICAgICAgICBcImRhdGEtc3RhdGVcIjogb3BlbiA/IFwib3BlblwiIDogXCJjbG9zZWRcIixcbiAgICAgICAgXCJhcmlhLWNvbnRyb2xzXCI6IGdldENvbnRlbnRJZChzY29wZSksXG4gICAgICAgIG9uUG9pbnRlckRvd24oZXZlbnQpIHtcbiAgICAgICAgICBpZiAoIWlzTGVmdENsaWNrKGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpc1NhZmFyaSgpKSB7XG4gICAgICAgICAgICBldmVudC5jdXJyZW50VGFyZ2V0LmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJUT0dHTEVcIiB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25CbHVyKGV2ZW50KSB7XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiVFJJR0dFUl9CTFVSXCIsIHRhcmdldDogZXZlbnQucmVsYXRlZFRhcmdldCB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJbmRpY2F0b3JQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmluZGljYXRvci5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBcImRhdGEtc3RhdGVcIjogb3BlbiA/IFwib3BlblwiIDogXCJjbG9zZWRcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRQb3NpdGlvbmVyUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICBpZDogZ2V0UG9zaXRpb25lcklkKHNjb3BlKSxcbiAgICAgICAgLi4ucGFydHMucG9zaXRpb25lci5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBzdHlsZTogcG9wcGVyU3R5bGVzLmZsb2F0aW5nXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldENvbnRlbnRQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmNvbnRlbnQuYXR0cnMsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgaWQ6IGdldENvbnRlbnRJZChzY29wZSksXG4gICAgICAgIHRhYkluZGV4OiAtMSxcbiAgICAgICAgcm9sZTogXCJkaWFsb2dcIixcbiAgICAgICAgaGlkZGVuOiAhb3BlbixcbiAgICAgICAgXCJkYXRhLXN0YXRlXCI6IG9wZW4gPyBcIm9wZW5cIiA6IFwiY2xvc2VkXCIsXG4gICAgICAgIFwiZGF0YS1leHBhbmRlZFwiOiBkYXRhQXR0cihvcGVuKSxcbiAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogcmVuZGVyZWQudGl0bGUgPyBnZXRUaXRsZUlkKHNjb3BlKSA6IHZvaWQgMCxcbiAgICAgICAgXCJhcmlhLWRlc2NyaWJlZGJ5XCI6IHJlbmRlcmVkLmRlc2NyaXB0aW9uID8gZ2V0RGVzY3JpcHRpb25JZChzY29wZSkgOiB2b2lkIDAsXG4gICAgICAgIFwiZGF0YS1wbGFjZW1lbnRcIjogY3VycmVudFBsYWNlbWVudFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRUaXRsZVByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMudGl0bGUuYXR0cnMsXG4gICAgICAgIGlkOiBnZXRUaXRsZUlkKHNjb3BlKSxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldERlc2NyaXB0aW9uUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5kZXNjcmlwdGlvbi5hdHRycyxcbiAgICAgICAgaWQ6IGdldERlc2NyaXB0aW9uSWQoc2NvcGUpLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0Q2xvc2VUcmlnZ2VyUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmJ1dHRvbih7XG4gICAgICAgIC4uLnBhcnRzLmNsb3NlVHJpZ2dlci5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBpZDogZ2V0Q2xvc2VUcmlnZ2VySWQoc2NvcGUpLFxuICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogXCJjbG9zZVwiLFxuICAgICAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJDTE9TRVwiIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG52YXIgbWFjaGluZSA9IGNyZWF0ZU1hY2hpbmUoe1xuICBwcm9wcyh7IHByb3BzOiBwcm9wczIgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBjbG9zZU9uSW50ZXJhY3RPdXRzaWRlOiB0cnVlLFxuICAgICAgY2xvc2VPbkVzY2FwZTogdHJ1ZSxcbiAgICAgIGF1dG9Gb2N1czogdHJ1ZSxcbiAgICAgIG1vZGFsOiBmYWxzZSxcbiAgICAgIHBvcnRhbGxlZDogdHJ1ZSxcbiAgICAgIC4uLnByb3BzMixcbiAgICAgIHBvc2l0aW9uaW5nOiB7XG4gICAgICAgIHBsYWNlbWVudDogXCJib3R0b21cIixcbiAgICAgICAgLi4ucHJvcHMyLnBvc2l0aW9uaW5nXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgaW5pdGlhbFN0YXRlKHsgcHJvcCB9KSB7XG4gICAgY29uc3Qgb3BlbiA9IHByb3AoXCJvcGVuXCIpIHx8IHByb3AoXCJkZWZhdWx0T3BlblwiKTtcbiAgICByZXR1cm4gb3BlbiA/IFwib3BlblwiIDogXCJjbG9zZWRcIjtcbiAgfSxcbiAgY29udGV4dCh7IGJpbmRhYmxlIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgY3VycmVudFBsYWNlbWVudDogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiB2b2lkIDBcbiAgICAgIH0pKSxcbiAgICAgIHJlbmRlcmVkRWxlbWVudHM6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZTogeyB0aXRsZTogdHJ1ZSwgZGVzY3JpcHRpb246IHRydWUgfVxuICAgICAgfSkpXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjdXJyZW50UG9ydGFsbGVkOiAoeyBwcm9wIH0pID0+ICEhcHJvcChcIm1vZGFsXCIpIHx8ICEhcHJvcChcInBvcnRhbGxlZFwiKVxuICB9LFxuICB3YXRjaCh7IHRyYWNrLCBwcm9wLCBhY3Rpb24gfSkge1xuICAgIHRyYWNrKFsoKSA9PiBwcm9wKFwib3BlblwiKV0sICgpID0+IHtcbiAgICAgIGFjdGlvbihbXCJ0b2dnbGVWaXNpYmlsaXR5XCJdKTtcbiAgICB9KTtcbiAgfSxcbiAgZW50cnk6IFtcImNoZWNrUmVuZGVyZWRFbGVtZW50c1wiXSxcbiAgc3RhdGVzOiB7XG4gICAgY2xvc2VkOiB7XG4gICAgICBvbjoge1xuICAgICAgICBcIkNPTlRST0xMRUQuT1BFTlwiOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcIm9wZW5cIixcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRJbml0aWFsRm9jdXNcIl1cbiAgICAgICAgfSxcbiAgICAgICAgVE9HR0xFOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwiaXNPcGVuQ29udHJvbGxlZFwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25PcGVuXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwib3BlblwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25PcGVuXCIsIFwic2V0SW5pdGlhbEZvY3VzXCJdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBPUEVOOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwiaXNPcGVuQ29udHJvbGxlZFwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25PcGVuXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0YXJnZXQ6IFwib3BlblwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25PcGVuXCIsIFwic2V0SW5pdGlhbEZvY3VzXCJdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9XG4gICAgfSxcbiAgICBvcGVuOiB7XG4gICAgICBlZmZlY3RzOiBbXG4gICAgICAgIFwidHJhcEZvY3VzXCIsXG4gICAgICAgIFwicHJldmVudFNjcm9sbFwiLFxuICAgICAgICBcImhpZGVDb250ZW50QmVsb3dcIixcbiAgICAgICAgXCJ0cmFja1Bvc2l0aW9uaW5nXCIsXG4gICAgICAgIFwidHJhY2tEaXNtaXNzYWJsZUVsZW1lbnRcIixcbiAgICAgICAgXCJwcm94eVRhYkZvY3VzXCJcbiAgICAgIF0sXG4gICAgICBvbjoge1xuICAgICAgICBcIkNPTlRST0xMRUQuQ0xPU0VcIjoge1xuICAgICAgICAgIHRhcmdldDogXCJjbG9zZWRcIixcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRGaW5hbEZvY3VzXCJdXG4gICAgICAgIH0sXG4gICAgICAgIENMT1NFOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwiaXNPcGVuQ29udHJvbGxlZFwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25DbG9zZVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGFyZ2V0OiBcImNsb3NlZFwiLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiaW52b2tlT25DbG9zZVwiLCBcInNldEZpbmFsRm9jdXNcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFRPR0dMRTogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcImlzT3BlbkNvbnRyb2xsZWRcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImludm9rZU9uQ2xvc2VcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRhcmdldDogXCJjbG9zZWRcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImludm9rZU9uQ2xvc2VcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiUE9TSVRJT05JTkcuU0VUXCI6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJyZXBvc2l0aW9uXCJdXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGltcGxlbWVudGF0aW9uczoge1xuICAgIGd1YXJkczoge1xuICAgICAgaXNPcGVuQ29udHJvbGxlZDogKHsgcHJvcCB9KSA9PiBwcm9wKFwib3BlblwiKSAhPSB2b2lkIDBcbiAgICB9LFxuICAgIGVmZmVjdHM6IHtcbiAgICAgIHRyYWNrUG9zaXRpb25pbmcoeyBjb250ZXh0LCBwcm9wLCBzY29wZSB9KSB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwiY3VycmVudFBsYWNlbWVudFwiLCBwcm9wKFwicG9zaXRpb25pbmdcIikucGxhY2VtZW50KTtcbiAgICAgICAgY29uc3QgYW5jaG9yRWwgPSBnZXRBbmNob3JFbChzY29wZSkgPz8gZ2V0VHJpZ2dlckVsKHNjb3BlKTtcbiAgICAgICAgY29uc3QgZ2V0UG9zaXRpb25lckVsMiA9ICgpID0+IGdldFBvc2l0aW9uZXJFbChzY29wZSk7XG4gICAgICAgIHJldHVybiBnZXRQbGFjZW1lbnQoYW5jaG9yRWwsIGdldFBvc2l0aW9uZXJFbDIsIHtcbiAgICAgICAgICAuLi5wcm9wKFwicG9zaXRpb25pbmdcIiksXG4gICAgICAgICAgZGVmZXI6IHRydWUsXG4gICAgICAgICAgb25Db21wbGV0ZShkYXRhKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcImN1cnJlbnRQbGFjZW1lbnRcIiwgZGF0YS5wbGFjZW1lbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgdHJhY2tEaXNtaXNzYWJsZUVsZW1lbnQoeyBzZW5kLCBwcm9wLCBzY29wZSB9KSB7XG4gICAgICAgIGNvbnN0IGdldENvbnRlbnRFbDIgPSAoKSA9PiBnZXRDb250ZW50RWwoc2NvcGUpO1xuICAgICAgICBsZXQgcmVzdG9yZUZvY3VzID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRyYWNrRGlzbWlzc2FibGVFbGVtZW50KGdldENvbnRlbnRFbDIsIHtcbiAgICAgICAgICBwb2ludGVyQmxvY2tpbmc6IHByb3AoXCJtb2RhbFwiKSxcbiAgICAgICAgICBleGNsdWRlOiBnZXRUcmlnZ2VyRWwoc2NvcGUpLFxuICAgICAgICAgIGRlZmVyOiB0cnVlLFxuICAgICAgICAgIG9uRXNjYXBlS2V5RG93bihldmVudCkge1xuICAgICAgICAgICAgcHJvcChcIm9uRXNjYXBlS2V5RG93blwiKT8uKGV2ZW50KTtcbiAgICAgICAgICAgIGlmIChwcm9wKFwiY2xvc2VPbkVzY2FwZVwiKSkgcmV0dXJuO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uSW50ZXJhY3RPdXRzaWRlKGV2ZW50KSB7XG4gICAgICAgICAgICBwcm9wKFwib25JbnRlcmFjdE91dHNpZGVcIik/LihldmVudCk7XG4gICAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgICAgcmVzdG9yZUZvY3VzID0gIShldmVudC5kZXRhaWwuZm9jdXNhYmxlIHx8IGV2ZW50LmRldGFpbC5jb250ZXh0bWVudSk7XG4gICAgICAgICAgICBpZiAoIXByb3AoXCJjbG9zZU9uSW50ZXJhY3RPdXRzaWRlXCIpKSB7XG4gICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvblBvaW50ZXJEb3duT3V0c2lkZTogcHJvcChcIm9uUG9pbnRlckRvd25PdXRzaWRlXCIpLFxuICAgICAgICAgIG9uRm9jdXNPdXRzaWRlOiBwcm9wKFwib25Gb2N1c091dHNpZGVcIiksXG4gICAgICAgICAgcGVyc2lzdGVudEVsZW1lbnRzOiBwcm9wKFwicGVyc2lzdGVudEVsZW1lbnRzXCIpLFxuICAgICAgICAgIG9uUmVxdWVzdERpc21pc3M6IHByb3AoXCJvblJlcXVlc3REaXNtaXNzXCIpLFxuICAgICAgICAgIG9uRGlzbWlzcygpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkNMT1NFXCIsIHNyYzogXCJpbnRlcmFjdC1vdXRzaWRlXCIsIHJlc3RvcmVGb2N1cyB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHByb3h5VGFiRm9jdXMoeyBwcm9wLCBzY29wZSB9KSB7XG4gICAgICAgIGlmIChwcm9wKFwibW9kYWxcIikgfHwgIXByb3AoXCJwb3J0YWxsZWRcIikpIHJldHVybjtcbiAgICAgICAgY29uc3QgZ2V0Q29udGVudEVsMiA9ICgpID0+IGdldENvbnRlbnRFbChzY29wZSk7XG4gICAgICAgIHJldHVybiBwcm94eVRhYkZvY3VzKGdldENvbnRlbnRFbDIsIHtcbiAgICAgICAgICB0cmlnZ2VyRWxlbWVudDogZ2V0VHJpZ2dlckVsKHNjb3BlKSxcbiAgICAgICAgICBkZWZlcjogdHJ1ZSxcbiAgICAgICAgICBvbkZvY3VzKGVsKSB7XG4gICAgICAgICAgICBlbC5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBoaWRlQ29udGVudEJlbG93KHsgcHJvcCwgc2NvcGUgfSkge1xuICAgICAgICBpZiAoIXByb3AoXCJtb2RhbFwiKSkgcmV0dXJuO1xuICAgICAgICBjb25zdCBnZXRFbGVtZW50cyA9ICgpID0+IFtnZXRDb250ZW50RWwoc2NvcGUpLCBnZXRUcmlnZ2VyRWwoc2NvcGUpXTtcbiAgICAgICAgcmV0dXJuIGFyaWFIaWRkZW4oZ2V0RWxlbWVudHMsIHsgZGVmZXI6IHRydWUgfSk7XG4gICAgICB9LFxuICAgICAgcHJldmVudFNjcm9sbCh7IHByb3AsIHNjb3BlIH0pIHtcbiAgICAgICAgaWYgKCFwcm9wKFwibW9kYWxcIikpIHJldHVybjtcbiAgICAgICAgcmV0dXJuIHByZXZlbnRCb2R5U2Nyb2xsKHNjb3BlLmdldERvYygpKTtcbiAgICAgIH0sXG4gICAgICB0cmFwRm9jdXMoeyBwcm9wLCBzY29wZSB9KSB7XG4gICAgICAgIGlmICghcHJvcChcIm1vZGFsXCIpKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGNvbnRlbnRFbCA9ICgpID0+IGdldENvbnRlbnRFbChzY29wZSk7XG4gICAgICAgIHJldHVybiB0cmFwRm9jdXMoY29udGVudEVsLCB7XG4gICAgICAgICAgaW5pdGlhbEZvY3VzOiAoKSA9PiBnZXRJbml0aWFsRm9jdXMoe1xuICAgICAgICAgICAgcm9vdDogZ2V0Q29udGVudEVsKHNjb3BlKSxcbiAgICAgICAgICAgIGdldEluaXRpYWxFbDogcHJvcChcImluaXRpYWxGb2N1c0VsXCIpLFxuICAgICAgICAgICAgZW5hYmxlZDogcHJvcChcImF1dG9Gb2N1c1wiKVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWN0aW9uczoge1xuICAgICAgcmVwb3NpdGlvbih7IGV2ZW50LCBwcm9wLCBzY29wZSwgY29udGV4dCB9KSB7XG4gICAgICAgIGNvbnN0IGFuY2hvckVsID0gZ2V0QW5jaG9yRWwoc2NvcGUpID8/IGdldFRyaWdnZXJFbChzY29wZSk7XG4gICAgICAgIGNvbnN0IGdldFBvc2l0aW9uZXJFbDIgPSAoKSA9PiBnZXRQb3NpdGlvbmVyRWwoc2NvcGUpO1xuICAgICAgICBnZXRQbGFjZW1lbnQoYW5jaG9yRWwsIGdldFBvc2l0aW9uZXJFbDIsIHtcbiAgICAgICAgICAuLi5wcm9wKFwicG9zaXRpb25pbmdcIiksXG4gICAgICAgICAgLi4uZXZlbnQub3B0aW9ucyxcbiAgICAgICAgICBkZWZlcjogdHJ1ZSxcbiAgICAgICAgICBsaXN0ZW5lcnM6IGZhbHNlLFxuICAgICAgICAgIG9uQ29tcGxldGUoZGF0YSkge1xuICAgICAgICAgICAgY29udGV4dC5zZXQoXCJjdXJyZW50UGxhY2VtZW50XCIsIGRhdGEucGxhY2VtZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIGNoZWNrUmVuZGVyZWRFbGVtZW50cyh7IGNvbnRleHQsIHNjb3BlIH0pIHtcbiAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICBPYmplY3QuYXNzaWduKGNvbnRleHQuZ2V0KFwicmVuZGVyZWRFbGVtZW50c1wiKSwge1xuICAgICAgICAgICAgdGl0bGU6ICEhZ2V0VGl0bGVFbChzY29wZSksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogISFnZXREZXNjcmlwdGlvbkVsKHNjb3BlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBzZXRJbml0aWFsRm9jdXMoeyBwcm9wLCBzY29wZSB9KSB7XG4gICAgICAgIGlmIChwcm9wKFwibW9kYWxcIikpIHJldHVybjtcbiAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICBjb25zdCBlbGVtZW50ID0gZ2V0SW5pdGlhbEZvY3VzKHtcbiAgICAgICAgICAgIHJvb3Q6IGdldENvbnRlbnRFbChzY29wZSksXG4gICAgICAgICAgICBnZXRJbml0aWFsRWw6IHByb3AoXCJpbml0aWFsRm9jdXNFbFwiKSxcbiAgICAgICAgICAgIGVuYWJsZWQ6IHByb3AoXCJhdXRvRm9jdXNcIilcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBlbGVtZW50Py5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHNldEZpbmFsRm9jdXMoeyBldmVudCwgc2NvcGUgfSkge1xuICAgICAgICBjb25zdCByZXN0b3JlRm9jdXMgPSBldmVudC5yZXN0b3JlRm9jdXMgPz8gZXZlbnQucHJldmlvdXNFdmVudD8ucmVzdG9yZUZvY3VzO1xuICAgICAgICBpZiAocmVzdG9yZUZvY3VzICE9IG51bGwgJiYgIXJlc3RvcmVGb2N1cykgcmV0dXJuO1xuICAgICAgICByYWYoKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBnZXRUcmlnZ2VyRWwoc2NvcGUpO1xuICAgICAgICAgIGVsZW1lbnQ/LmZvY3VzKHsgcHJldmVudFNjcm9sbDogdHJ1ZSB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgaW52b2tlT25PcGVuKHsgcHJvcCwgZmx1c2ggfSkge1xuICAgICAgICBmbHVzaCgoKSA9PiB7XG4gICAgICAgICAgcHJvcChcIm9uT3BlbkNoYW5nZVwiKT8uKHsgb3BlbjogdHJ1ZSB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgaW52b2tlT25DbG9zZSh7IHByb3AsIGZsdXNoIH0pIHtcbiAgICAgICAgZmx1c2goKCkgPT4ge1xuICAgICAgICAgIHByb3AoXCJvbk9wZW5DaGFuZ2VcIik/Lih7IG9wZW46IGZhbHNlIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICB0b2dnbGVWaXNpYmlsaXR5KHsgZXZlbnQsIHNlbmQsIHByb3AgfSkge1xuICAgICAgICBzZW5kKHsgdHlwZTogcHJvcChcIm9wZW5cIikgPyBcIkNPTlRST0xMRUQuT1BFTlwiIDogXCJDT05UUk9MTEVELkNMT1NFXCIsIHByZXZpb3VzRXZlbnQ6IGV2ZW50IH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG52YXIgcHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcbiAgXCJhdXRvRm9jdXNcIixcbiAgXCJjbG9zZU9uRXNjYXBlXCIsXG4gIFwiY2xvc2VPbkludGVyYWN0T3V0c2lkZVwiLFxuICBcImRpclwiLFxuICBcImdldFJvb3ROb2RlXCIsXG4gIFwiaWRcIixcbiAgXCJpZHNcIixcbiAgXCJpbml0aWFsRm9jdXNFbFwiLFxuICBcIm1vZGFsXCIsXG4gIFwib25Fc2NhcGVLZXlEb3duXCIsXG4gIFwib25Gb2N1c091dHNpZGVcIixcbiAgXCJvbkludGVyYWN0T3V0c2lkZVwiLFxuICBcIm9uT3BlbkNoYW5nZVwiLFxuICBcIm9uUG9pbnRlckRvd25PdXRzaWRlXCIsXG4gIFwib25SZXF1ZXN0RGlzbWlzc1wiLFxuICBcImRlZmF1bHRPcGVuXCIsXG4gIFwib3BlblwiLFxuICBcInBlcnNpc3RlbnRFbGVtZW50c1wiLFxuICBcInBvcnRhbGxlZFwiLFxuICBcInBvc2l0aW9uaW5nXCJcbl0pO1xudmFyIHNwbGl0UHJvcHMgPSBjcmVhdGVTcGxpdFByb3BzKHByb3BzKTtcblxuZXhwb3J0IHsgYW5hdG9teSwgY29ubmVjdCwgbWFjaGluZSwgcHJvcHMsIHNwbGl0UHJvcHMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popover/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popper/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/popper/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlacement: () => (/* binding */ getPlacement),\n/* harmony export */   getPlacementSide: () => (/* binding */ getPlacementSide),\n/* harmony export */   getPlacementStyles: () => (/* binding */ getPlacementStyles),\n/* harmony export */   isValidPlacement: () => (/* binding */ isValidPlacement)\n/* harmony export */ });\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/get-placement.ts\nfunction createDOMRect(x = 0, y = 0, width = 0, height = 0) {\n  if (typeof DOMRect === \"function\") {\n    return new DOMRect(x, y, width, height);\n  }\n  const rect = {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x\n  };\n  return { ...rect, toJSON: () => rect };\n}\nfunction getDOMRect(anchorRect) {\n  if (!anchorRect) return createDOMRect();\n  const { x, y, width, height } = anchorRect;\n  return createDOMRect(x, y, width, height);\n}\nfunction getAnchorElement(anchorElement, getAnchorRect) {\n  return {\n    contextElement: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(anchorElement) ? anchorElement : void 0,\n    getBoundingClientRect: () => {\n      const anchor = anchorElement;\n      const anchorRect = getAnchorRect?.(anchor);\n      if (anchorRect || !anchor) {\n        return getDOMRect(anchorRect);\n      }\n      return anchor.getBoundingClientRect();\n    }\n  };\n}\n\n// src/middleware.ts\nvar toVar = (value) => ({ variable: value, reference: `var(${value})` });\nvar cssVars = {\n  arrowSize: toVar(\"--arrow-size\"),\n  arrowSizeHalf: toVar(\"--arrow-size-half\"),\n  arrowBg: toVar(\"--arrow-background\"),\n  transformOrigin: toVar(\"--transform-origin\"),\n  arrowOffset: toVar(\"--arrow-offset\")\n};\nvar getSideAxis = (side) => side === \"top\" || side === \"bottom\" ? \"y\" : \"x\";\nfunction createTransformOriginMiddleware(opts, arrowEl) {\n  return {\n    name: \"transformOrigin\",\n    fn(state) {\n      const { elements, middlewareData, placement, rects, y } = state;\n      const side = placement.split(\"-\")[0];\n      const axis = getSideAxis(side);\n      const arrowX = middlewareData.arrow?.x || 0;\n      const arrowY = middlewareData.arrow?.y || 0;\n      const arrowWidth = arrowEl?.clientWidth || 0;\n      const arrowHeight = arrowEl?.clientHeight || 0;\n      const transformX = arrowX + arrowWidth / 2;\n      const transformY = arrowY + arrowHeight / 2;\n      const shiftY = Math.abs(middlewareData.shift?.y || 0);\n      const halfAnchorHeight = rects.reference.height / 2;\n      const arrowOffset = arrowHeight / 2;\n      const gutter = opts.offset?.mainAxis ?? opts.gutter;\n      const sideOffsetValue = typeof gutter === \"number\" ? gutter + arrowOffset : gutter ?? arrowOffset;\n      const isOverlappingAnchor = shiftY > sideOffsetValue;\n      const adjacentTransformOrigin = {\n        top: `${transformX}px calc(100% + ${sideOffsetValue}px)`,\n        bottom: `${transformX}px ${-sideOffsetValue}px`,\n        left: `calc(100% + ${sideOffsetValue}px) ${transformY}px`,\n        right: `${-sideOffsetValue}px ${transformY}px`\n      }[side];\n      const overlapTransformOrigin = `${transformX}px ${rects.reference.y + halfAnchorHeight - y}px`;\n      const useOverlap = Boolean(opts.overlap) && axis === \"y\" && isOverlappingAnchor;\n      elements.floating.style.setProperty(\n        cssVars.transformOrigin.variable,\n        useOverlap ? overlapTransformOrigin : adjacentTransformOrigin\n      );\n      return {\n        data: {\n          transformOrigin: useOverlap ? overlapTransformOrigin : adjacentTransformOrigin\n        }\n      };\n    }\n  };\n}\nvar rectMiddleware = {\n  name: \"rects\",\n  fn({ rects }) {\n    return {\n      data: rects\n    };\n  }\n};\nvar shiftArrowMiddleware = (arrowEl) => {\n  if (!arrowEl) return;\n  return {\n    name: \"shiftArrow\",\n    fn({ placement, middlewareData }) {\n      if (!middlewareData.arrow) return {};\n      const { x, y } = middlewareData.arrow;\n      const dir = placement.split(\"-\")[0];\n      Object.assign(arrowEl.style, {\n        left: x != null ? `${x}px` : \"\",\n        top: y != null ? `${y}px` : \"\",\n        [dir]: `calc(100% + ${cssVars.arrowOffset.reference})`\n      });\n      return {};\n    }\n  };\n};\n\n// src/placement.ts\nfunction isValidPlacement(v) {\n  return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(v);\n}\nfunction getPlacementDetails(placement) {\n  const [side, align] = placement.split(\"-\");\n  return { side, align, hasAlign: align != null };\n}\nfunction getPlacementSide(placement) {\n  return placement.split(\"-\")[0];\n}\n\n// src/get-placement.ts\nvar defaultOptions = {\n  strategy: \"absolute\",\n  placement: \"bottom\",\n  listeners: true,\n  gutter: 8,\n  flip: true,\n  slide: true,\n  overlap: false,\n  sameWidth: false,\n  fitViewport: false,\n  overflowPadding: 8,\n  arrowPadding: 4\n};\nfunction roundByDpr(win, value) {\n  const dpr = win.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\nfunction resolveBoundaryOption(boundary) {\n  if (typeof boundary === \"function\") return boundary();\n  if (boundary === \"clipping-ancestors\") return \"clippingAncestors\";\n  return boundary;\n}\nfunction getArrowMiddleware(arrowElement, doc, opts) {\n  const element = arrowElement || doc.createElement(\"div\");\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.arrow)({ element, padding: opts.arrowPadding });\n}\nfunction getOffsetMiddleware(arrowElement, opts) {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNull)(opts.offset ?? opts.gutter)) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.offset)(({ placement }) => {\n    const arrowOffset = (arrowElement?.clientHeight || 0) / 2;\n    const gutter = opts.offset?.mainAxis ?? opts.gutter;\n    const mainAxis = typeof gutter === \"number\" ? gutter + arrowOffset : gutter ?? arrowOffset;\n    const { hasAlign } = getPlacementDetails(placement);\n    const shift2 = !hasAlign ? opts.shift : void 0;\n    const crossAxis = opts.offset?.crossAxis ?? shift2;\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)({\n      crossAxis,\n      mainAxis,\n      alignmentAxis: opts.shift\n    });\n  });\n}\nfunction getFlipMiddleware(opts) {\n  if (!opts.flip) return;\n  const boundary = resolveBoundaryOption(opts.boundary);\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.flip)({\n    ...boundary ? { boundary } : void 0,\n    padding: opts.overflowPadding,\n    fallbackPlacements: opts.flip === true ? void 0 : opts.flip\n  });\n}\nfunction getShiftMiddleware(opts) {\n  if (!opts.slide && !opts.overlap) return;\n  const boundary = resolveBoundaryOption(opts.boundary);\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.shift)({\n    ...boundary ? { boundary } : void 0,\n    mainAxis: opts.slide,\n    crossAxis: opts.overlap,\n    padding: opts.overflowPadding,\n    limiter: (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.limitShift)()\n  });\n}\nfunction getSizeMiddleware(opts) {\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.size)({\n    padding: opts.overflowPadding,\n    apply({ elements, rects, availableHeight, availableWidth }) {\n      const floating = elements.floating;\n      const referenceWidth = Math.round(rects.reference.width);\n      const referenceHeight = Math.round(rects.reference.height);\n      availableWidth = Math.floor(availableWidth);\n      availableHeight = Math.floor(availableHeight);\n      floating.style.setProperty(\"--reference-width\", `${referenceWidth}px`);\n      floating.style.setProperty(\"--reference-height\", `${referenceHeight}px`);\n      floating.style.setProperty(\"--available-width\", `${availableWidth}px`);\n      floating.style.setProperty(\"--available-height\", `${availableHeight}px`);\n    }\n  });\n}\nfunction hideWhenDetachedMiddleware(opts) {\n  if (!opts.hideWhenDetached) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.hide)({ strategy: \"referenceHidden\", boundary: resolveBoundaryOption(opts.boundary) ?? \"clippingAncestors\" });\n}\nfunction getAutoUpdateOptions(opts) {\n  if (!opts) return {};\n  if (opts === true) {\n    return { ancestorResize: true, ancestorScroll: true, elementResize: true, layoutShift: true };\n  }\n  return opts;\n}\nfunction getPlacementImpl(referenceOrVirtual, floating, opts = {}) {\n  const reference = getAnchorElement(referenceOrVirtual, opts.getAnchorRect);\n  if (!floating || !reference) return;\n  const options = Object.assign({}, defaultOptions, opts);\n  const arrowEl = floating.querySelector(\"[data-part=arrow]\");\n  const middleware = [\n    getOffsetMiddleware(arrowEl, options),\n    getFlipMiddleware(options),\n    getShiftMiddleware(options),\n    getArrowMiddleware(arrowEl, floating.ownerDocument, options),\n    shiftArrowMiddleware(arrowEl),\n    createTransformOriginMiddleware(\n      { gutter: options.gutter, offset: options.offset, overlap: options.overlap },\n      arrowEl\n    ),\n    getSizeMiddleware(options),\n    hideWhenDetachedMiddleware(options),\n    rectMiddleware\n  ];\n  const { placement, strategy, onComplete, onPositioned } = options;\n  const updatePosition = async () => {\n    if (!reference || !floating) return;\n    const pos = await (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.computePosition)(reference, floating, {\n      placement,\n      middleware,\n      strategy\n    });\n    onComplete?.(pos);\n    onPositioned?.({ placed: true });\n    const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(floating);\n    const x = roundByDpr(win, pos.x);\n    const y = roundByDpr(win, pos.y);\n    floating.style.setProperty(\"--x\", `${x}px`);\n    floating.style.setProperty(\"--y\", `${y}px`);\n    if (options.hideWhenDetached) {\n      const isHidden = pos.middlewareData.hide?.referenceHidden;\n      if (isHidden) {\n        floating.style.setProperty(\"visibility\", \"hidden\");\n        floating.style.setProperty(\"pointer-events\", \"none\");\n      } else {\n        floating.style.removeProperty(\"visibility\");\n        floating.style.removeProperty(\"pointer-events\");\n      }\n    }\n    const contentEl = floating.firstElementChild;\n    if (contentEl) {\n      const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(contentEl);\n      floating.style.setProperty(\"--z-index\", styles.zIndex);\n    }\n  };\n  const update = async () => {\n    if (opts.updatePosition) {\n      await opts.updatePosition({ updatePosition, floatingElement: floating });\n      onPositioned?.({ placed: true });\n    } else {\n      await updatePosition();\n    }\n  };\n  const autoUpdateOptions = getAutoUpdateOptions(options.listeners);\n  const cancelAutoUpdate = options.listeners ? (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.autoUpdate)(reference, floating, update, autoUpdateOptions) : _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.noop;\n  update();\n  return () => {\n    cancelAutoUpdate?.();\n    onPositioned?.({ placed: false });\n  };\n}\nfunction getPlacement(referenceOrFn, floatingOrFn, opts = {}) {\n  const { defer, ...options } = opts;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const reference = typeof referenceOrFn === \"function\" ? referenceOrFn() : referenceOrFn;\n      const floating = typeof floatingOrFn === \"function\" ? floatingOrFn() : floatingOrFn;\n      cleanups.push(getPlacementImpl(reference, floating, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/get-styles.ts\nvar ARROW_FLOATING_STYLE = {\n  bottom: \"rotate(45deg)\",\n  left: \"rotate(135deg)\",\n  top: \"rotate(225deg)\",\n  right: \"rotate(315deg)\"\n};\nfunction getPlacementStyles(options = {}) {\n  const { placement, sameWidth, fitViewport, strategy = \"absolute\" } = options;\n  return {\n    arrow: {\n      position: \"absolute\",\n      width: cssVars.arrowSize.reference,\n      height: cssVars.arrowSize.reference,\n      [cssVars.arrowSizeHalf.variable]: `calc(${cssVars.arrowSize.reference} / 2)`,\n      [cssVars.arrowOffset.variable]: `calc(${cssVars.arrowSizeHalf.reference} * -1)`\n    },\n    arrowTip: {\n      // @ts-expect-error - Fix this\n      transform: placement ? ARROW_FLOATING_STYLE[placement.split(\"-\")[0]] : void 0,\n      background: cssVars.arrowBg.reference,\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      zIndex: \"inherit\"\n    },\n    floating: {\n      position: strategy,\n      isolation: \"isolate\",\n      minWidth: sameWidth ? void 0 : \"max-content\",\n      width: sameWidth ? \"var(--reference-width)\" : void 0,\n      maxWidth: fitViewport ? \"var(--available-width)\" : void 0,\n      maxHeight: fitViewport ? \"var(--available-height)\" : void 0,\n      pointerEvents: !placement ? \"none\" : void 0,\n      top: \"0px\",\n      left: \"0px\",\n      // move off-screen if placement is not defined\n      transform: placement ? \"translate3d(var(--x), var(--y), 0)\" : \"translate3d(0, -100vh, 0)\",\n      zIndex: \"var(--z-index)\"\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/presence/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/presence/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n// src/presence.connect.ts\nfunction connect(service, _normalize) {\n  const { state, send, context } = service;\n  const present = state.matches(\"mounted\", \"unmountSuspended\");\n  return {\n    skip: !context.get(\"initial\"),\n    present,\n    setNode(node) {\n      if (!node) return;\n      send({ type: \"NODE.SET\", node });\n    },\n    unmount() {\n      send({ type: \"UNMOUNT\" });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.createMachine)({\n  props({ props: props2 }) {\n    return { ...props2, present: !!props2.present };\n  },\n  initialState({ prop }) {\n    return prop(\"present\") ? \"mounted\" : \"unmounted\";\n  },\n  refs() {\n    return {\n      node: null,\n      styles: null\n    };\n  },\n  context({ bindable }) {\n    return {\n      unmountAnimationName: bindable(() => ({ defaultValue: null })),\n      prevAnimationName: bindable(() => ({ defaultValue: null })),\n      present: bindable(() => ({ defaultValue: false })),\n      initial: bindable(() => ({\n        sync: true,\n        defaultValue: false\n      }))\n    };\n  },\n  exit: [\"clearInitial\", \"cleanupNode\"],\n  watch({ track, prop, send }) {\n    track([() => prop(\"present\")], () => {\n      send({ type: \"PRESENCE.CHANGED\" });\n    });\n  },\n  on: {\n    \"NODE.SET\": {\n      actions: [\"setupNode\"]\n    },\n    \"PRESENCE.CHANGED\": {\n      actions: [\"setInitial\", \"syncPresence\"]\n    }\n  },\n  states: {\n    mounted: {\n      on: {\n        UNMOUNT: {\n          target: \"unmounted\",\n          actions: [\"clearPrevAnimationName\", \"invokeOnExitComplete\"]\n        },\n        \"UNMOUNT.SUSPEND\": {\n          target: \"unmountSuspended\"\n        }\n      }\n    },\n    unmountSuspended: {\n      effects: [\"trackAnimationEvents\"],\n      on: {\n        MOUNT: {\n          target: \"mounted\",\n          actions: [\"setPrevAnimationName\"]\n        },\n        UNMOUNT: {\n          target: \"unmounted\",\n          actions: [\"clearPrevAnimationName\", \"invokeOnExitComplete\"]\n        }\n      }\n    },\n    unmounted: {\n      on: {\n        MOUNT: {\n          target: \"mounted\",\n          actions: [\"setPrevAnimationName\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setInitial: ({ context }) => {\n        if (context.get(\"initial\")) return;\n        queueMicrotask(() => {\n          context.set(\"initial\", true);\n        });\n      },\n      clearInitial: ({ context }) => {\n        context.set(\"initial\", false);\n      },\n      invokeOnExitComplete: ({ prop }) => {\n        prop(\"onExitComplete\")?.();\n      },\n      setupNode: ({ refs, event }) => {\n        if (refs.get(\"node\") === event.node) return;\n        refs.set(\"node\", event.node);\n        refs.set(\"styles\", (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(event.node));\n      },\n      cleanupNode: ({ refs }) => {\n        refs.set(\"node\", null);\n        refs.set(\"styles\", null);\n      },\n      syncPresence: ({ context, refs, send, prop }) => {\n        const presentProp = prop(\"present\");\n        if (presentProp) {\n          return send({ type: \"MOUNT\", src: \"presence.changed\" });\n        }\n        const node = refs.get(\"node\");\n        if (!presentProp && node?.ownerDocument.visibilityState === \"hidden\") {\n          return send({ type: \"UNMOUNT\", src: \"visibilitychange\" });\n        }\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const animationName = getAnimationName(refs.get(\"styles\"));\n          context.set(\"unmountAnimationName\", animationName);\n          if (animationName === \"none\" || animationName === context.get(\"prevAnimationName\") || refs.get(\"styles\")?.display === \"none\" || refs.get(\"styles\")?.animationDuration === \"0s\") {\n            send({ type: \"UNMOUNT\", src: \"presence.changed\" });\n          } else {\n            send({ type: \"UNMOUNT.SUSPEND\" });\n          }\n        });\n      },\n      setPrevAnimationName: ({ context, refs }) => {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          context.set(\"prevAnimationName\", getAnimationName(refs.get(\"styles\")));\n        });\n      },\n      clearPrevAnimationName: ({ context }) => {\n        context.set(\"prevAnimationName\", null);\n      }\n    },\n    effects: {\n      trackAnimationEvents: ({ context, refs, send }) => {\n        const node = refs.get(\"node\");\n        if (!node) return;\n        const onStart = (event) => {\n          const target = event.composedPath?.()?.[0] ?? event.target;\n          if (target === node) {\n            context.set(\"prevAnimationName\", getAnimationName(refs.get(\"styles\")));\n          }\n        };\n        const onEnd = (event) => {\n          const animationName = getAnimationName(refs.get(\"styles\"));\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === node && animationName === context.get(\"unmountAnimationName\")) {\n            send({ type: \"UNMOUNT\", src: \"animationend\" });\n          }\n        };\n        node.addEventListener(\"animationstart\", onStart);\n        node.addEventListener(\"animationcancel\", onEnd);\n        node.addEventListener(\"animationend\", onEnd);\n        const cleanupStyles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setStyle)(node, { animationFillMode: \"forwards\" });\n        return () => {\n          node.removeEventListener(\"animationstart\", onStart);\n          node.removeEventListener(\"animationcancel\", onEnd);\n          node.removeEventListener(\"animationend\", onEnd);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => cleanupStyles());\n        };\n      }\n    }\n  }\n});\nfunction getAnimationName(styles) {\n  return styles?.animationName || \"none\";\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_2__.createProps)()([\"onExitComplete\", \"present\", \"immediate\"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/presence/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/progress/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/progress/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n// src/progress.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\n\n// src/progress.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`;\nvar getCircleId = (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`;\n\n// src/progress.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, prop, send, scope } = service;\n  const percent = computed(\"percent\");\n  const percentAsString = computed(\"isIndeterminate\") ? \"\" : computed(\"formatter\").format(percent / 100);\n  const max = prop(\"max\");\n  const min = prop(\"min\");\n  const orientation = prop(\"orientation\");\n  const translations = prop(\"translations\");\n  const indeterminate = computed(\"isIndeterminate\");\n  const value = context.get(\"value\");\n  const valueAsString = translations?.value({ value, max, percent, min, formatter: computed(\"formatter\") }) ?? \"\";\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps2 = getCircleProps(service);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [computed(\"isHorizontal\") ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        id: getCircleId(scope),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps2.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps2.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.circleRange.attrs,\n        ...circleProps2.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nvar circleProps = {\n  style: {\n    \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n    cx: \"calc(var(--size) / 2)\",\n    cy: \"calc(var(--size) / 2)\",\n    r: \"var(--radius)\",\n    fill: \"transparent\",\n    strokeWidth: \"var(--thickness)\"\n  }\n};\nvar rootProps = {\n  style: {\n    width: \"var(--size)\",\n    height: \"var(--size)\"\n  }\n};\nfunction getCircleProps(service) {\n  const { context, computed } = service;\n  return {\n    root: rootProps,\n    track: circleProps,\n    range: {\n      opacity: context.get(\"value\") === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": computed(\"percent\"),\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: computed(\"isIndeterminate\") ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.createMachine)({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    return {\n      orientation: \"horizontal\",\n      ...props2,\n      max,\n      min,\n      defaultValue: props2.defaultValue !== void 0 ? props2.defaultValue : midValue(min, max),\n      formatOptions: {\n        style: \"percent\",\n        ...props2.formatOptions\n      },\n      translations: {\n        value: ({ value, percent, formatter }) => {\n          if (value === null) return \"loading...\";\n          if (formatter) {\n            const formatOptions = formatter.resolvedOptions();\n            const num = formatOptions.style === \"percent\" ? percent / 100 : value;\n            return formatter.format(num);\n          }\n          return value.toString();\n        },\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  entry: [\"validateContext\"],\n  context({ bindable, prop }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    isIndeterminate: ({ context }) => context.get(\"value\") === null,\n    percent({ context, prop }) {\n      const value = context.get(\"value\");\n      if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value)) return -1;\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")) * 100;\n    },\n    formatter: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.memo)(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => new Intl.NumberFormat(locale, formatOptions)\n    ),\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\"\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue: ({ context, event, prop }) => {\n        const value = event.value === null ? null : Math.max(0, Math.min(event.value, prop(\"max\")));\n        context.set(\"value\", value);\n      },\n      validateContext: ({ context, prop }) => {\n        const max = prop(\"max\");\n        const min = prop(\"min\");\n        const value = context.get(\"value\");\n        if (value == null) return;\n        if (!isValidNumber(max)) {\n          throw new Error(`[progress] The max value passed \\`${max}\\` is not a valid number`);\n        }\n        if (!isValidMax(value, max)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the max value \\`${max}\\``);\n        }\n        if (!isValidMin(value, min)) {\n          throw new Error(`[progress] The value passed \\`${value}\\` exceeds the min value \\`${min}\\``);\n        }\n      }\n    }\n  }\n});\nvar isValidNumber = (max) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(max) && !isNaN(max);\nvar isValidMax = (value, max) => isValidNumber(value) && value <= max;\nvar isValidMin = (value, min) => isValidNumber(value) && value >= min;\nvar midValue = (min, max) => min + (max - min) / 2;\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\",\n  \"defaultValue\",\n  \"formatOptions\",\n  \"locale\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/progress/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/qr-code/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var uqr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uqr */ \"(ssr)/./node_modules/uqr/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/qr-code.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\n\n// src/qr-code.dom.ts\nvar getRootId = (scope) => scope.ids?.root ?? `qrcode:${scope.id}:root`;\nvar getFrameId = (scope) => scope.ids?.frame ?? `qrcode:${scope.id}:frame`;\nvar getFrameEl = (scope) => scope.getById(getFrameId(scope));\n\n// src/qr-code.connect.ts\nfunction connect(service, normalize) {\n  const { context, computed, send, scope, prop } = service;\n  const encoded = computed(\"encoded\");\n  const pixelSize = prop(\"pixelSize\");\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = getFrameEl(scope);\n      return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type, quality });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: getFrameId(scope),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DOWNLOAD_TRIGGER.CLICK\", ...props2 });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultValue: \"\",\n      pixelSize: 10,\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        value: prop(\"value\"),\n        defaultValue: prop(\"defaultValue\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      }))\n    };\n  },\n  computed: {\n    encoded: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.memo)(\n      ({ context, prop }) => [context.get(\"value\"), prop(\"encoding\")],\n      (value, encoding) => (0,uqr__WEBPACK_IMPORTED_MODULE_3__.encode)(value, encoding)\n    )\n  },\n  states: {\n    idle: {\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"DOWNLOAD_TRIGGER.CLICK\": {\n          actions: [\"downloadQrCode\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      downloadQrCode({ event, scope }) {\n        const { mimeType, quality, fileName } = event;\n        const svgEl = getFrameEl(scope);\n        const doc = scope.getDoc();\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type: mimeType, quality }).then((dataUri) => {\n          const a = doc.createElement(\"a\");\n          a.href = dataUri;\n          a.rel = \"noopener\";\n          a.download = fileName;\n          a.click();\n          setTimeout(() => {\n            a.remove();\n          }, 0);\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"ids\",\n  \"defaultValue\",\n  \"value\",\n  \"id\",\n  \"encoding\",\n  \"dir\",\n  \"getRootNode\",\n  \"onValueChange\",\n  \"pixelSize\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/radio-group/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/radio-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"radio-group\").parts(\n  \"root\",\n  \"label\",\n  \"item\",\n  \"itemText\",\n  \"itemControl\",\n  \"indicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `radio-group:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `radio-group:${ctx.id}:label`;\nvar getItemId = (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`;\nvar getItemHiddenInputId = (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`;\nvar getItemControlId = (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`;\nvar getItemLabelId = (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`;\nvar getIndicatorId = (ctx) => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getItemHiddenInputEl = (ctx, value) => ctx.getById(getItemHiddenInputId(ctx, value));\nvar getIndicatorEl = (ctx) => ctx.getById(getIndicatorId(ctx));\nvar getFirstEnabledInputEl = (ctx) => getRootEl(ctx)?.querySelector(\"input:not(:disabled)\");\nvar getFirstEnabledAndCheckedInputEl = (ctx) => getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\");\nvar getInputEls = (ctx) => {\n  const ownerId = CSS.escape(getRootId(ctx));\n  const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getRootEl(ctx), selector);\n};\nvar getRadioEl = (ctx, value) => {\n  if (!value) return;\n  return ctx.getById(getItemId(ctx, value));\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nvar resolveRect = (rect) => ({\n  width: `${rect.width}px`,\n  height: `${rect.height}px`,\n  left: `${rect.left}px`,\n  top: `${rect.top}px`\n});\n\n// src/radio-group.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, computed, prop, scope, refs } = service;\n  const groupDisabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  function getItemState(props2) {\n    return {\n      value: props2.value,\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: context.get(\"value\") === props2.value,\n      focused: context.get(\"focusedValue\") === props2.value,\n      focusVisible: refs.get(\"focusVisibleValue\") === props2.value,\n      hovered: context.get(\"hoveredValue\") === props2.value,\n      active: context.get(\"activeValue\") === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const itemState = getItemState(props2);\n    return {\n      \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n      \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focusVisible),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n      \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.hovered),\n      \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.invalid),\n      \"data-orientation\": prop(\"orientation\"),\n      \"data-ssr\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"ssr\"))\n    };\n  }\n  const focus = () => {\n    const nodeToFocus = getFirstEnabledAndCheckedInputEl(scope) ?? getFirstEnabledInputEl(scope);\n    nodeToFocus?.focus();\n  };\n  return {\n    focus,\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value, isTrusted: false });\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: null, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: getRootId(scope),\n        \"aria-labelledby\": getLabelId(scope),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"aria-orientation\": prop(\"orientation\"),\n        dir: prop(\"dir\"),\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        id: getLabelId(scope),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, props2.value),\n        htmlFor: getItemHiddenInputId(scope, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({ type: \"SET_HOVERED\", value: props2.value, hovered: true });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_HOVERED\", value: null });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_ACTIVE\", value: null });\n        },\n        onClick() {\n          if (!itemState.disabled && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            getItemHiddenInputEl(scope, props2.value)?.focus();\n          }\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: prop(\"dir\"),\n        id: getItemLabelId(scope, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: prop(\"dir\"),\n        id: getItemControlId(scope, props2.value),\n        \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": getRootId(scope),\n        id: getItemHiddenInputId(scope, props2.value),\n        type: \"radio\",\n        name: prop(\"name\") || prop(\"id\"),\n        form: prop(\"form\"),\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({ type: \"SET_VALUE\", value: props2.value, isTrusted: true });\n          }\n        },\n        onBlur() {\n          send({ type: \"SET_FOCUSED\", value: null, focused: false });\n        },\n        onFocus() {\n          const focusVisible = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"SET_FOCUSED\", value: props2.value, focused: true, focusVisible });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: null });\n          }\n        },\n        disabled: itemState.disabled,\n        defaultChecked: itemState.checked,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      const rect = context.get(\"indicatorRect\");\n      return normalize.element({\n        id: getIndicatorId(scope),\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        hidden: context.get(\"value\") == null,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": rect?.left,\n          \"--top\": rect?.top,\n          \"--width\": rect?.width,\n          \"--height\": rect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: context.get(\"canIndicatorTransition\") ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [prop(\"orientation\") === \"horizontal\" ? \"left\" : \"top\"]: prop(\"orientation\") === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      orientation: \"vertical\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      activeValue: bindable(() => ({\n        defaultValue: null\n      })),\n      focusedValue: bindable(() => ({\n        defaultValue: null\n      })),\n      hoveredValue: bindable(() => ({\n        defaultValue: null\n      })),\n      indicatorRect: bindable(() => ({\n        defaultValue: {}\n      })),\n      canIndicatorTransition: bindable(() => ({\n        defaultValue: false\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      ssr: bindable(() => ({\n        defaultValue: true\n      }))\n    };\n  },\n  refs() {\n    return {\n      indicatorCleanup: null,\n      focusVisibleValue: null\n    };\n  },\n  computed: {\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  entry: [\"syncIndicatorRect\", \"syncSsr\"],\n  exit: [\"cleanupObserver\"],\n  effects: [\"trackFormControlState\", \"trackFocusVisible\"],\n  watch({ track, action, context }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]);\n    });\n  },\n  on: {\n    SET_VALUE: [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setValue\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    SET_HOVERED: {\n      actions: [\"setHovered\"]\n    },\n    SET_ACTIVE: {\n      actions: [\"setActive\"]\n    },\n    SET_FOCUSED: {\n      actions: [\"setFocused\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackFocusVisible({ scope }) {\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      }\n    },\n    actions: {\n      setValue({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      setHovered({ context, event }) {\n        context.set(\"hoveredValue\", event.value);\n      },\n      setActive({ context, event }) {\n        context.set(\"activeValue\", event.value);\n      },\n      setFocused({ context, event, refs }) {\n        context.set(\"focusedValue\", event.value);\n        refs.set(\"focusVisibleValue\", event.focusVisible ? event.value : null);\n      },\n      syncInputElements({ context, scope }) {\n        const inputs = getInputEls(scope);\n        inputs.forEach((input) => {\n          input.checked = input.value === context.get(\"value\");\n        });\n      },\n      setIndicatorTransition({ context }) {\n        context.set(\"canIndicatorTransition\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(context.get(\"value\")));\n      },\n      cleanupObserver({ refs }) {\n        refs.get(\"indicatorCleanup\")?.();\n      },\n      syncSsr({ context }) {\n        context.set(\"ssr\", false);\n      },\n      syncIndicatorRect({ context, scope, refs }) {\n        refs.get(\"indicatorCleanup\")?.();\n        if (!getIndicatorEl(scope)) return;\n        const value = context.get(\"value\");\n        const radioEl = getRadioEl(scope, value);\n        if (value == null || !radioEl) {\n          context.set(\"canIndicatorTransition\", false);\n          context.set(\"indicatorRect\", {});\n          return;\n        }\n        const indicatorCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackElementRect)([radioEl], {\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            context.set(\"indicatorRect\", resolveRect(rects[0]));\n          }\n        });\n        refs.set(\"indicatorCleanup\", indicatorCleanup);\n      },\n      dispatchChangeEvent({ context, scope }) {\n        const inputEls = getInputEls(scope);\n        inputEls.forEach((inputEl) => {\n          const checked = inputEl.value === context.get(\"value\");\n          if (checked === inputEl.checked) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked });\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onValueChange\",\n  \"orientation\",\n  \"readOnly\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yYWRpby1ncm91cC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ2tIO0FBQ3hGO0FBQ2Y7QUFDQTtBQUNmOztBQUU1QztBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxPQUFPO0FBQ2hFLDJEQUEyRCxPQUFPO0FBQ2xFLHlFQUF5RSxPQUFPLFNBQVMsTUFBTTtBQUMvRiwrRkFBK0YsT0FBTyxlQUFlLE1BQU07QUFDM0gsdUZBQXVGLE9BQU8saUJBQWlCLE1BQU07QUFDckgsbUZBQW1GLE9BQU8sZUFBZSxNQUFNO0FBQy9HLG1FQUFtRSxPQUFPO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFFBQVE7QUFDOUQsU0FBUywyREFBUTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLFlBQVksV0FBVztBQUN2QixhQUFhLFlBQVk7QUFDekIsV0FBVyxVQUFVO0FBQ3JCLFVBQVUsU0FBUztBQUNuQixDQUFDOztBQUVEO0FBQ0E7QUFDQSxVQUFVLDZDQUE2QztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJEQUFRO0FBQzVCLDRCQUE0QiwyREFBUTtBQUNwQyx1QkFBdUIsMkRBQVE7QUFDL0IsdUJBQXVCLDJEQUFRO0FBQy9CO0FBQ0Esb0JBQW9CLDJEQUFRO0FBQzVCLHNCQUFzQiwyREFBUTtBQUM5QjtBQUNBLGtCQUFrQiwyREFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNENBQTRDO0FBQ3pELEtBQUs7QUFDTDtBQUNBLGFBQWEsa0RBQWtEO0FBQy9ELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFRO0FBQ2pDO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix5REFBeUQ7QUFDMUUsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsa0NBQWtDO0FBQ25ELFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSw4REFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdURBQXVEO0FBQ3hFLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCLGlDQUFpQztBQUNsRCxTQUFTO0FBQ1Q7QUFDQSxxQ0FBcUMsMkRBQVE7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBUTtBQUMvQjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQXlEO0FBQzVFO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLGtEQUFrRDtBQUNuRSxTQUFTO0FBQ1Q7QUFDQSwrQkFBK0IscUVBQWM7QUFDN0MsaUJBQWlCLHVFQUF1RTtBQUN4RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUF1RDtBQUMxRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUNBQWlDO0FBQ3BEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxlQUFlLGtFQUFtQjtBQUNsQyxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsTUFBTSxNQUFNLEVBQUUsMERBQVk7QUFDMUIsY0FBYywyREFBYTtBQUMzQixVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSCxZQUFZLGdCQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLE9BQU87QUFDM0M7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsbUJBQW1CLGVBQWU7QUFDbEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCLEtBQUs7QUFDTDtBQUNBLDhCQUE4QixnQkFBZ0I7QUFDOUMsZUFBZSxtRUFBZ0I7QUFDL0I7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLDBCQUEwQixPQUFPO0FBQ2pDLGVBQWUsd0VBQWlCLEdBQUcsNkJBQTZCO0FBQ2hFO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaUJBQWlCLGdCQUFnQjtBQUNqQztBQUNBLE9BQU87QUFDUCxtQkFBbUIsZ0JBQWdCO0FBQ25DO0FBQ0EsT0FBTztBQUNQLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQSxPQUFPO0FBQ1AsbUJBQW1CLHNCQUFzQjtBQUN6QztBQUNBO0FBQ0EsT0FBTztBQUNQLDBCQUEwQixnQkFBZ0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCwrQkFBK0IsU0FBUztBQUN4Qyw4Q0FBOEMsdURBQVE7QUFDdEQsT0FBTztBQUNQLHdCQUF3QixNQUFNO0FBQzlCO0FBQ0EsT0FBTztBQUNQLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0EsT0FBTztBQUNQLDBCQUEwQixzQkFBc0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQSxpQ0FBaUMsbUVBQWdCO0FBQ2pEO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCw0QkFBNEIsZ0JBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw0RUFBeUIsWUFBWSxTQUFTO0FBQ3hELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSwwREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrREFBZ0I7QUFDakMsZ0JBQWdCLDBEQUFXO0FBQzNCLHFCQUFxQiwrREFBZ0I7O0FBRThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yYWRpby1ncm91cC9kaXN0L2luZGV4Lm1qcz9jZThjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFuYXRvbXkgfSBmcm9tICdAemFnLWpzL2FuYXRvbXknO1xuaW1wb3J0IHsgZGlzcGF0Y2hJbnB1dENoZWNrZWRFdmVudCwgdHJhY2tFbGVtZW50UmVjdCwgdHJhY2tGb3JtQ29udHJvbCwgcXVlcnlBbGwsIGRhdGFBdHRyLCB2aXN1YWxseUhpZGRlblN0eWxlLCBpc1NhZmFyaSwgaXNMZWZ0Q2xpY2sgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5pbXBvcnQgeyB0cmFja0ZvY3VzVmlzaWJsZSwgaXNGb2N1c1Zpc2libGUgfSBmcm9tICdAemFnLWpzL2ZvY3VzLXZpc2libGUnO1xuaW1wb3J0IHsgY3JlYXRlR3VhcmRzLCBjcmVhdGVNYWNoaW5lIH0gZnJvbSAnQHphZy1qcy9jb3JlJztcbmltcG9ydCB7IGlzU3RyaW5nLCBjcmVhdGVTcGxpdFByb3BzIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5pbXBvcnQgeyBjcmVhdGVQcm9wcyB9IGZyb20gJ0B6YWctanMvdHlwZXMnO1xuXG4vLyBzcmMvcmFkaW8tZ3JvdXAuYW5hdG9teS50c1xudmFyIGFuYXRvbXkgPSBjcmVhdGVBbmF0b215KFwicmFkaW8tZ3JvdXBcIikucGFydHMoXG4gIFwicm9vdFwiLFxuICBcImxhYmVsXCIsXG4gIFwiaXRlbVwiLFxuICBcIml0ZW1UZXh0XCIsXG4gIFwiaXRlbUNvbnRyb2xcIixcbiAgXCJpbmRpY2F0b3JcIlxuKTtcbnZhciBwYXJ0cyA9IGFuYXRvbXkuYnVpbGQoKTtcbnZhciBnZXRSb290SWQgPSAoY3R4KSA9PiBjdHguaWRzPy5yb290ID8/IGByYWRpby1ncm91cDoke2N0eC5pZH1gO1xudmFyIGdldExhYmVsSWQgPSAoY3R4KSA9PiBjdHguaWRzPy5sYWJlbCA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OmxhYmVsYDtcbnZhciBnZXRJdGVtSWQgPSAoY3R4LCB2YWx1ZSkgPT4gY3R4Lmlkcz8uaXRlbT8uKHZhbHVlKSA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OnJhZGlvOiR7dmFsdWV9YDtcbnZhciBnZXRJdGVtSGlkZGVuSW5wdXRJZCA9IChjdHgsIHZhbHVlKSA9PiBjdHguaWRzPy5pdGVtSGlkZGVuSW5wdXQ/Lih2YWx1ZSkgPz8gYHJhZGlvLWdyb3VwOiR7Y3R4LmlkfTpyYWRpbzppbnB1dDoke3ZhbHVlfWA7XG52YXIgZ2V0SXRlbUNvbnRyb2xJZCA9IChjdHgsIHZhbHVlKSA9PiBjdHguaWRzPy5pdGVtQ29udHJvbD8uKHZhbHVlKSA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OnJhZGlvOmNvbnRyb2w6JHt2YWx1ZX1gO1xudmFyIGdldEl0ZW1MYWJlbElkID0gKGN0eCwgdmFsdWUpID0+IGN0eC5pZHM/Lml0ZW1MYWJlbD8uKHZhbHVlKSA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OnJhZGlvOmxhYmVsOiR7dmFsdWV9YDtcbnZhciBnZXRJbmRpY2F0b3JJZCA9IChjdHgpID0+IGN0eC5pZHM/LmluZGljYXRvciA/PyBgcmFkaW8tZ3JvdXA6JHtjdHguaWR9OmluZGljYXRvcmA7XG52YXIgZ2V0Um9vdEVsID0gKGN0eCkgPT4gY3R4LmdldEJ5SWQoZ2V0Um9vdElkKGN0eCkpO1xudmFyIGdldEl0ZW1IaWRkZW5JbnB1dEVsID0gKGN0eCwgdmFsdWUpID0+IGN0eC5nZXRCeUlkKGdldEl0ZW1IaWRkZW5JbnB1dElkKGN0eCwgdmFsdWUpKTtcbnZhciBnZXRJbmRpY2F0b3JFbCA9IChjdHgpID0+IGN0eC5nZXRCeUlkKGdldEluZGljYXRvcklkKGN0eCkpO1xudmFyIGdldEZpcnN0RW5hYmxlZElucHV0RWwgPSAoY3R4KSA9PiBnZXRSb290RWwoY3R4KT8ucXVlcnlTZWxlY3RvcihcImlucHV0Om5vdCg6ZGlzYWJsZWQpXCIpO1xudmFyIGdldEZpcnN0RW5hYmxlZEFuZENoZWNrZWRJbnB1dEVsID0gKGN0eCkgPT4gZ2V0Um9vdEVsKGN0eCk/LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dDpub3QoOmRpc2FibGVkKTpjaGVja2VkXCIpO1xudmFyIGdldElucHV0RWxzID0gKGN0eCkgPT4ge1xuICBjb25zdCBvd25lcklkID0gQ1NTLmVzY2FwZShnZXRSb290SWQoY3R4KSk7XG4gIGNvbnN0IHNlbGVjdG9yID0gYGlucHV0W3R5cGU9cmFkaW9dW2RhdGEtb3duZWRieT0nJHtvd25lcklkfSddOm5vdChbZGlzYWJsZWRdKWA7XG4gIHJldHVybiBxdWVyeUFsbChnZXRSb290RWwoY3R4KSwgc2VsZWN0b3IpO1xufTtcbnZhciBnZXRSYWRpb0VsID0gKGN0eCwgdmFsdWUpID0+IHtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuICByZXR1cm4gY3R4LmdldEJ5SWQoZ2V0SXRlbUlkKGN0eCwgdmFsdWUpKTtcbn07XG52YXIgZ2V0T2Zmc2V0UmVjdCA9IChlbCkgPT4gKHtcbiAgbGVmdDogZWw/Lm9mZnNldExlZnQgPz8gMCxcbiAgdG9wOiBlbD8ub2Zmc2V0VG9wID8/IDAsXG4gIHdpZHRoOiBlbD8ub2Zmc2V0V2lkdGggPz8gMCxcbiAgaGVpZ2h0OiBlbD8ub2Zmc2V0SGVpZ2h0ID8/IDBcbn0pO1xudmFyIHJlc29sdmVSZWN0ID0gKHJlY3QpID0+ICh7XG4gIHdpZHRoOiBgJHtyZWN0LndpZHRofXB4YCxcbiAgaGVpZ2h0OiBgJHtyZWN0LmhlaWdodH1weGAsXG4gIGxlZnQ6IGAke3JlY3QubGVmdH1weGAsXG4gIHRvcDogYCR7cmVjdC50b3B9cHhgXG59KTtcblxuLy8gc3JjL3JhZGlvLWdyb3VwLmNvbm5lY3QudHNcbmZ1bmN0aW9uIGNvbm5lY3Qoc2VydmljZSwgbm9ybWFsaXplKSB7XG4gIGNvbnN0IHsgY29udGV4dCwgc2VuZCwgY29tcHV0ZWQsIHByb3AsIHNjb3BlLCByZWZzIH0gPSBzZXJ2aWNlO1xuICBjb25zdCBncm91cERpc2FibGVkID0gY29tcHV0ZWQoXCJpc0Rpc2FibGVkXCIpO1xuICBjb25zdCByZWFkT25seSA9IHByb3AoXCJyZWFkT25seVwiKTtcbiAgZnVuY3Rpb24gZ2V0SXRlbVN0YXRlKHByb3BzMikge1xuICAgIHJldHVybiB7XG4gICAgICB2YWx1ZTogcHJvcHMyLnZhbHVlLFxuICAgICAgaW52YWxpZDogISFwcm9wczIuaW52YWxpZCxcbiAgICAgIGRpc2FibGVkOiAhIXByb3BzMi5kaXNhYmxlZCB8fCBncm91cERpc2FibGVkLFxuICAgICAgY2hlY2tlZDogY29udGV4dC5nZXQoXCJ2YWx1ZVwiKSA9PT0gcHJvcHMyLnZhbHVlLFxuICAgICAgZm9jdXNlZDogY29udGV4dC5nZXQoXCJmb2N1c2VkVmFsdWVcIikgPT09IHByb3BzMi52YWx1ZSxcbiAgICAgIGZvY3VzVmlzaWJsZTogcmVmcy5nZXQoXCJmb2N1c1Zpc2libGVWYWx1ZVwiKSA9PT0gcHJvcHMyLnZhbHVlLFxuICAgICAgaG92ZXJlZDogY29udGV4dC5nZXQoXCJob3ZlcmVkVmFsdWVcIikgPT09IHByb3BzMi52YWx1ZSxcbiAgICAgIGFjdGl2ZTogY29udGV4dC5nZXQoXCJhY3RpdmVWYWx1ZVwiKSA9PT0gcHJvcHMyLnZhbHVlXG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBnZXRJdGVtRGF0YUF0dHJzKHByb3BzMikge1xuICAgIGNvbnN0IGl0ZW1TdGF0ZSA9IGdldEl0ZW1TdGF0ZShwcm9wczIpO1xuICAgIHJldHVybiB7XG4gICAgICBcImRhdGEtZm9jdXNcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmZvY3VzZWQpLFxuICAgICAgXCJkYXRhLWZvY3VzLXZpc2libGVcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmZvY3VzVmlzaWJsZSksXG4gICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmRpc2FibGVkKSxcbiAgICAgIFwiZGF0YS1yZWFkb25seVwiOiBkYXRhQXR0cihyZWFkT25seSksXG4gICAgICBcImRhdGEtc3RhdGVcIjogaXRlbVN0YXRlLmNoZWNrZWQgPyBcImNoZWNrZWRcIiA6IFwidW5jaGVja2VkXCIsXG4gICAgICBcImRhdGEtaG92ZXJcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmhvdmVyZWQpLFxuICAgICAgXCJkYXRhLWludmFsaWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmludmFsaWQpLFxuICAgICAgXCJkYXRhLW9yaWVudGF0aW9uXCI6IHByb3AoXCJvcmllbnRhdGlvblwiKSxcbiAgICAgIFwiZGF0YS1zc3JcIjogZGF0YUF0dHIoY29udGV4dC5nZXQoXCJzc3JcIikpXG4gICAgfTtcbiAgfVxuICBjb25zdCBmb2N1cyA9ICgpID0+IHtcbiAgICBjb25zdCBub2RlVG9Gb2N1cyA9IGdldEZpcnN0RW5hYmxlZEFuZENoZWNrZWRJbnB1dEVsKHNjb3BlKSA/PyBnZXRGaXJzdEVuYWJsZWRJbnB1dEVsKHNjb3BlKTtcbiAgICBub2RlVG9Gb2N1cz8uZm9jdXMoKTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBmb2N1cyxcbiAgICB2YWx1ZTogY29udGV4dC5nZXQoXCJ2YWx1ZVwiKSxcbiAgICBzZXRWYWx1ZSh2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX1ZBTFVFXCIsIHZhbHVlLCBpc1RydXN0ZWQ6IGZhbHNlIH0pO1xuICAgIH0sXG4gICAgY2xlYXJWYWx1ZSgpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9WQUxVRVwiLCB2YWx1ZTogbnVsbCwgaXNUcnVzdGVkOiBmYWxzZSB9KTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIHJvbGU6IFwicmFkaW9ncm91cFwiLFxuICAgICAgICBpZDogZ2V0Um9vdElkKHNjb3BlKSxcbiAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogZ2V0TGFiZWxJZChzY29wZSksXG4gICAgICAgIFwiZGF0YS1vcmllbnRhdGlvblwiOiBwcm9wKFwib3JpZW50YXRpb25cIiksXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihncm91cERpc2FibGVkKSxcbiAgICAgICAgXCJhcmlhLW9yaWVudGF0aW9uXCI6IHByb3AoXCJvcmllbnRhdGlvblwiKSxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIHBvc2l0aW9uOiBcInJlbGF0aXZlXCJcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRMYWJlbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMubGFiZWwuYXR0cnMsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgXCJkYXRhLW9yaWVudGF0aW9uXCI6IHByb3AoXCJvcmllbnRhdGlvblwiKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGdyb3VwRGlzYWJsZWQpLFxuICAgICAgICBpZDogZ2V0TGFiZWxJZChzY29wZSksXG4gICAgICAgIG9uQ2xpY2s6IGZvY3VzXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEl0ZW1TdGF0ZSxcbiAgICBnZXRJdGVtUHJvcHMocHJvcHMyKSB7XG4gICAgICBjb25zdCBpdGVtU3RhdGUgPSBnZXRJdGVtU3RhdGUocHJvcHMyKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUubGFiZWwoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtLmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIGlkOiBnZXRJdGVtSWQoc2NvcGUsIHByb3BzMi52YWx1ZSksXG4gICAgICAgIGh0bWxGb3I6IGdldEl0ZW1IaWRkZW5JbnB1dElkKHNjb3BlLCBwcm9wczIudmFsdWUpLFxuICAgICAgICAuLi5nZXRJdGVtRGF0YUF0dHJzKHByb3BzMiksXG4gICAgICAgIG9uUG9pbnRlck1vdmUoKSB7XG4gICAgICAgICAgaWYgKGl0ZW1TdGF0ZS5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuaG92ZXJlZCkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9IT1ZFUkVEXCIsIHZhbHVlOiBwcm9wczIudmFsdWUsIGhvdmVyZWQ6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUG9pbnRlckxlYXZlKCkge1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfSE9WRVJFRFwiLCB2YWx1ZTogbnVsbCB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyRG93bihldmVudCkge1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoIWlzTGVmdENsaWNrKGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpdGVtU3RhdGUuZm9jdXNlZCAmJiBldmVudC5wb2ludGVyVHlwZSA9PT0gXCJtb3VzZVwiKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfQUNUSVZFXCIsIHZhbHVlOiBwcm9wczIudmFsdWUsIGFjdGl2ZTogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Qb2ludGVyVXAoKSB7XG4gICAgICAgICAgaWYgKGl0ZW1TdGF0ZS5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9BQ1RJVkVcIiwgdmFsdWU6IG51bGwgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2xpY2soKSB7XG4gICAgICAgICAgaWYgKCFpdGVtU3RhdGUuZGlzYWJsZWQgJiYgaXNTYWZhcmkoKSkge1xuICAgICAgICAgICAgZ2V0SXRlbUhpZGRlbklucHV0RWwoc2NvcGUsIHByb3BzMi52YWx1ZSk/LmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEl0ZW1UZXh0UHJvcHMocHJvcHMyKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtVGV4dC5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBpZDogZ2V0SXRlbUxhYmVsSWQoc2NvcGUsIHByb3BzMi52YWx1ZSksXG4gICAgICAgIC4uLmdldEl0ZW1EYXRhQXR0cnMocHJvcHMyKVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJdGVtQ29udHJvbFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3QgaXRlbVN0YXRlID0gZ2V0SXRlbVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtQ29udHJvbC5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBpZDogZ2V0SXRlbUNvbnRyb2xJZChzY29wZSwgcHJvcHMyLnZhbHVlKSxcbiAgICAgICAgXCJkYXRhLWFjdGl2ZVwiOiBkYXRhQXR0cihpdGVtU3RhdGUuYWN0aXZlKSxcbiAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0cnVlLFxuICAgICAgICAuLi5nZXRJdGVtRGF0YUF0dHJzKHByb3BzMilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SXRlbUhpZGRlbklucHV0UHJvcHMocHJvcHMyKSB7XG4gICAgICBjb25zdCBpdGVtU3RhdGUgPSBnZXRJdGVtU3RhdGUocHJvcHMyKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuaW5wdXQoe1xuICAgICAgICBcImRhdGEtb3duZWRieVwiOiBnZXRSb290SWQoc2NvcGUpLFxuICAgICAgICBpZDogZ2V0SXRlbUhpZGRlbklucHV0SWQoc2NvcGUsIHByb3BzMi52YWx1ZSksXG4gICAgICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICAgICAgbmFtZTogcHJvcChcIm5hbWVcIikgfHwgcHJvcChcImlkXCIpLFxuICAgICAgICBmb3JtOiBwcm9wKFwiZm9ybVwiKSxcbiAgICAgICAgdmFsdWU6IHByb3BzMi52YWx1ZSxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChyZWFkT25seSkge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQuY2hlY2tlZCkge1xuICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiU0VUX1ZBTFVFXCIsIHZhbHVlOiBwcm9wczIudmFsdWUsIGlzVHJ1c3RlZDogdHJ1ZSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uQmx1cigpIHtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfRk9DVVNFRFwiLCB2YWx1ZTogbnVsbCwgZm9jdXNlZDogZmFsc2UgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRm9jdXMoKSB7XG4gICAgICAgICAgY29uc3QgZm9jdXNWaXNpYmxlID0gaXNGb2N1c1Zpc2libGUoKTtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJTRVRfRk9DVVNFRFwiLCB2YWx1ZTogcHJvcHMyLnZhbHVlLCBmb2N1c2VkOiB0cnVlLCBmb2N1c1Zpc2libGUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uS2V5RG93bihldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9BQ1RJVkVcIiwgdmFsdWU6IHByb3BzMi52YWx1ZSwgYWN0aXZlOiB0cnVlIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25LZXlVcChldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFVF9BQ1RJVkVcIiwgdmFsdWU6IG51bGwgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlZDogaXRlbVN0YXRlLmRpc2FibGVkLFxuICAgICAgICBkZWZhdWx0Q2hlY2tlZDogaXRlbVN0YXRlLmNoZWNrZWQsXG4gICAgICAgIHN0eWxlOiB2aXN1YWxseUhpZGRlblN0eWxlXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEluZGljYXRvclByb3BzKCkge1xuICAgICAgY29uc3QgcmVjdCA9IGNvbnRleHQuZ2V0KFwiaW5kaWNhdG9yUmVjdFwiKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIGlkOiBnZXRJbmRpY2F0b3JJZChzY29wZSksXG4gICAgICAgIC4uLnBhcnRzLmluZGljYXRvci5hdHRycyxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICBoaWRkZW46IGNvbnRleHQuZ2V0KFwidmFsdWVcIikgPT0gbnVsbCxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGdyb3VwRGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtb3JpZW50YXRpb25cIjogcHJvcChcIm9yaWVudGF0aW9uXCIpLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIFwiLS10cmFuc2l0aW9uLXByb3BlcnR5XCI6IFwibGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0XCIsXG4gICAgICAgICAgXCItLWxlZnRcIjogcmVjdD8ubGVmdCxcbiAgICAgICAgICBcIi0tdG9wXCI6IHJlY3Q/LnRvcCxcbiAgICAgICAgICBcIi0td2lkdGhcIjogcmVjdD8ud2lkdGgsXG4gICAgICAgICAgXCItLWhlaWdodFwiOiByZWN0Py5oZWlnaHQsXG4gICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICB3aWxsQ2hhbmdlOiBcInZhcigtLXRyYW5zaXRpb24tcHJvcGVydHkpXCIsXG4gICAgICAgICAgdHJhbnNpdGlvblByb3BlcnR5OiBcInZhcigtLXRyYW5zaXRpb24tcHJvcGVydHkpXCIsXG4gICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiBjb250ZXh0LmdldChcImNhbkluZGljYXRvclRyYW5zaXRpb25cIikgPyBcInZhcigtLXRyYW5zaXRpb24tZHVyYXRpb24sIDE1MG1zKVwiIDogXCIwbXNcIixcbiAgICAgICAgICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IFwidmFyKC0tdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24pXCIsXG4gICAgICAgICAgW3Byb3AoXCJvcmllbnRhdGlvblwiKSA9PT0gXCJob3Jpem9udGFsXCIgPyBcImxlZnRcIiA6IFwidG9wXCJdOiBwcm9wKFwib3JpZW50YXRpb25cIikgPT09IFwiaG9yaXpvbnRhbFwiID8gXCJ2YXIoLS1sZWZ0KVwiIDogXCJ2YXIoLS10b3ApXCJcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxudmFyIHsgbm90IH0gPSBjcmVhdGVHdWFyZHMoKTtcbnZhciBtYWNoaW5lID0gY3JlYXRlTWFjaGluZSh7XG4gIHByb3BzKHsgcHJvcHM6IHByb3BzMiB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9yaWVudGF0aW9uOiBcInZlcnRpY2FsXCIsXG4gICAgICAuLi5wcm9wczJcbiAgICB9O1xuICB9LFxuICBpbml0aWFsU3RhdGUoKSB7XG4gICAgcmV0dXJuIFwiaWRsZVwiO1xuICB9LFxuICBjb250ZXh0KHsgcHJvcCwgYmluZGFibGUgfSkge1xuICAgIHJldHVybiB7XG4gICAgICB2YWx1ZTogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBwcm9wKFwiZGVmYXVsdFZhbHVlXCIpLFxuICAgICAgICB2YWx1ZTogcHJvcChcInZhbHVlXCIpLFxuICAgICAgICBvbkNoYW5nZSh2YWx1ZSkge1xuICAgICAgICAgIHByb3AoXCJvblZhbHVlQ2hhbmdlXCIpPy4oeyB2YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSkpLFxuICAgICAgYWN0aXZlVmFsdWU6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbFxuICAgICAgfSkpLFxuICAgICAgZm9jdXNlZFZhbHVlOiBiaW5kYWJsZSgoKSA9PiAoe1xuICAgICAgICBkZWZhdWx0VmFsdWU6IG51bGxcbiAgICAgIH0pKSxcbiAgICAgIGhvdmVyZWRWYWx1ZTogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBudWxsXG4gICAgICB9KSksXG4gICAgICBpbmRpY2F0b3JSZWN0OiBiaW5kYWJsZSgoKSA9PiAoe1xuICAgICAgICBkZWZhdWx0VmFsdWU6IHt9XG4gICAgICB9KSksXG4gICAgICBjYW5JbmRpY2F0b3JUcmFuc2l0aW9uOiBiaW5kYWJsZSgoKSA9PiAoe1xuICAgICAgICBkZWZhdWx0VmFsdWU6IGZhbHNlXG4gICAgICB9KSksXG4gICAgICBmaWVsZHNldERpc2FibGVkOiBiaW5kYWJsZSgoKSA9PiAoe1xuICAgICAgICBkZWZhdWx0VmFsdWU6IGZhbHNlXG4gICAgICB9KSksXG4gICAgICBzc3I6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZVxuICAgICAgfSkpXG4gICAgfTtcbiAgfSxcbiAgcmVmcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5kaWNhdG9yQ2xlYW51cDogbnVsbCxcbiAgICAgIGZvY3VzVmlzaWJsZVZhbHVlOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBpc0Rpc2FibGVkOiAoeyBwcm9wLCBjb250ZXh0IH0pID0+ICEhcHJvcChcImRpc2FibGVkXCIpIHx8IGNvbnRleHQuZ2V0KFwiZmllbGRzZXREaXNhYmxlZFwiKVxuICB9LFxuICBlbnRyeTogW1wic3luY0luZGljYXRvclJlY3RcIiwgXCJzeW5jU3NyXCJdLFxuICBleGl0OiBbXCJjbGVhbnVwT2JzZXJ2ZXJcIl0sXG4gIGVmZmVjdHM6IFtcInRyYWNrRm9ybUNvbnRyb2xTdGF0ZVwiLCBcInRyYWNrRm9jdXNWaXNpYmxlXCJdLFxuICB3YXRjaCh7IHRyYWNrLCBhY3Rpb24sIGNvbnRleHQgfSkge1xuICAgIHRyYWNrKFsoKSA9PiBjb250ZXh0LmdldChcInZhbHVlXCIpXSwgKCkgPT4ge1xuICAgICAgYWN0aW9uKFtcInNldEluZGljYXRvclRyYW5zaXRpb25cIiwgXCJzeW5jSW5kaWNhdG9yUmVjdFwiLCBcInN5bmNJbnB1dEVsZW1lbnRzXCJdKTtcbiAgICB9KTtcbiAgfSxcbiAgb246IHtcbiAgICBTRVRfVkFMVUU6IFtcbiAgICAgIHtcbiAgICAgICAgZ3VhcmQ6IG5vdChcImlzVHJ1c3RlZFwiKSxcbiAgICAgICAgYWN0aW9uczogW1wic2V0VmFsdWVcIiwgXCJkaXNwYXRjaENoYW5nZUV2ZW50XCJdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBhY3Rpb25zOiBbXCJzZXRWYWx1ZVwiXVxuICAgICAgfVxuICAgIF0sXG4gICAgU0VUX0hPVkVSRUQ6IHtcbiAgICAgIGFjdGlvbnM6IFtcInNldEhvdmVyZWRcIl1cbiAgICB9LFxuICAgIFNFVF9BQ1RJVkU6IHtcbiAgICAgIGFjdGlvbnM6IFtcInNldEFjdGl2ZVwiXVxuICAgIH0sXG4gICAgU0VUX0ZPQ1VTRUQ6IHtcbiAgICAgIGFjdGlvbnM6IFtcInNldEZvY3VzZWRcIl1cbiAgICB9XG4gIH0sXG4gIHN0YXRlczoge1xuICAgIGlkbGU6IHt9XG4gIH0sXG4gIGltcGxlbWVudGF0aW9uczoge1xuICAgIGd1YXJkczoge1xuICAgICAgaXNUcnVzdGVkOiAoeyBldmVudCB9KSA9PiAhIWV2ZW50LmlzVHJ1c3RlZFxuICAgIH0sXG4gICAgZWZmZWN0czoge1xuICAgICAgdHJhY2tGb3JtQ29udHJvbFN0YXRlKHsgY29udGV4dCwgc2NvcGUgfSkge1xuICAgICAgICByZXR1cm4gdHJhY2tGb3JtQ29udHJvbChnZXRSb290RWwoc2NvcGUpLCB7XG4gICAgICAgICAgb25GaWVsZHNldERpc2FibGVkQ2hhbmdlKGRpc2FibGVkKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcImZpZWxkc2V0RGlzYWJsZWRcIiwgZGlzYWJsZWQpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb25Gb3JtUmVzZXQoKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcInZhbHVlXCIsIGNvbnRleHQuaW5pdGlhbChcInZhbHVlXCIpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHRyYWNrRm9jdXNWaXNpYmxlKHsgc2NvcGUgfSkge1xuICAgICAgICByZXR1cm4gdHJhY2tGb2N1c1Zpc2libGUoeyByb290OiBzY29wZS5nZXRSb290Tm9kZT8uKCkgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhY3Rpb25zOiB7XG4gICAgICBzZXRWYWx1ZSh7IGNvbnRleHQsIGV2ZW50IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJ2YWx1ZVwiLCBldmVudC52YWx1ZSk7XG4gICAgICB9LFxuICAgICAgc2V0SG92ZXJlZCh7IGNvbnRleHQsIGV2ZW50IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJob3ZlcmVkVmFsdWVcIiwgZXZlbnQudmFsdWUpO1xuICAgICAgfSxcbiAgICAgIHNldEFjdGl2ZSh7IGNvbnRleHQsIGV2ZW50IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJhY3RpdmVWYWx1ZVwiLCBldmVudC52YWx1ZSk7XG4gICAgICB9LFxuICAgICAgc2V0Rm9jdXNlZCh7IGNvbnRleHQsIGV2ZW50LCByZWZzIH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJmb2N1c2VkVmFsdWVcIiwgZXZlbnQudmFsdWUpO1xuICAgICAgICByZWZzLnNldChcImZvY3VzVmlzaWJsZVZhbHVlXCIsIGV2ZW50LmZvY3VzVmlzaWJsZSA/IGV2ZW50LnZhbHVlIDogbnVsbCk7XG4gICAgICB9LFxuICAgICAgc3luY0lucHV0RWxlbWVudHMoeyBjb250ZXh0LCBzY29wZSB9KSB7XG4gICAgICAgIGNvbnN0IGlucHV0cyA9IGdldElucHV0RWxzKHNjb3BlKTtcbiAgICAgICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICAgICAgaW5wdXQuY2hlY2tlZCA9IGlucHV0LnZhbHVlID09PSBjb250ZXh0LmdldChcInZhbHVlXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBzZXRJbmRpY2F0b3JUcmFuc2l0aW9uKHsgY29udGV4dCB9KSB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwiY2FuSW5kaWNhdG9yVHJhbnNpdGlvblwiLCBpc1N0cmluZyhjb250ZXh0LmdldChcInZhbHVlXCIpKSk7XG4gICAgICB9LFxuICAgICAgY2xlYW51cE9ic2VydmVyKHsgcmVmcyB9KSB7XG4gICAgICAgIHJlZnMuZ2V0KFwiaW5kaWNhdG9yQ2xlYW51cFwiKT8uKCk7XG4gICAgICB9LFxuICAgICAgc3luY1Nzcih7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcInNzclwiLCBmYWxzZSk7XG4gICAgICB9LFxuICAgICAgc3luY0luZGljYXRvclJlY3QoeyBjb250ZXh0LCBzY29wZSwgcmVmcyB9KSB7XG4gICAgICAgIHJlZnMuZ2V0KFwiaW5kaWNhdG9yQ2xlYW51cFwiKT8uKCk7XG4gICAgICAgIGlmICghZ2V0SW5kaWNhdG9yRWwoc2NvcGUpKSByZXR1cm47XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY29udGV4dC5nZXQoXCJ2YWx1ZVwiKTtcbiAgICAgICAgY29uc3QgcmFkaW9FbCA9IGdldFJhZGlvRWwoc2NvcGUsIHZhbHVlKTtcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwgfHwgIXJhZGlvRWwpIHtcbiAgICAgICAgICBjb250ZXh0LnNldChcImNhbkluZGljYXRvclRyYW5zaXRpb25cIiwgZmFsc2UpO1xuICAgICAgICAgIGNvbnRleHQuc2V0KFwiaW5kaWNhdG9yUmVjdFwiLCB7fSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGluZGljYXRvckNsZWFudXAgPSB0cmFja0VsZW1lbnRSZWN0KFtyYWRpb0VsXSwge1xuICAgICAgICAgIG1lYXN1cmUoZWwpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRPZmZzZXRSZWN0KGVsKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uRW50cnkoeyByZWN0cyB9KSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcImluZGljYXRvclJlY3RcIiwgcmVzb2x2ZVJlY3QocmVjdHNbMF0pKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZWZzLnNldChcImluZGljYXRvckNsZWFudXBcIiwgaW5kaWNhdG9yQ2xlYW51cCk7XG4gICAgICB9LFxuICAgICAgZGlzcGF0Y2hDaGFuZ2VFdmVudCh7IGNvbnRleHQsIHNjb3BlIH0pIHtcbiAgICAgICAgY29uc3QgaW5wdXRFbHMgPSBnZXRJbnB1dEVscyhzY29wZSk7XG4gICAgICAgIGlucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgICAgICBjb25zdCBjaGVja2VkID0gaW5wdXRFbC52YWx1ZSA9PT0gY29udGV4dC5nZXQoXCJ2YWx1ZVwiKTtcbiAgICAgICAgICBpZiAoY2hlY2tlZCA9PT0gaW5wdXRFbC5jaGVja2VkKSByZXR1cm47XG4gICAgICAgICAgZGlzcGF0Y2hJbnB1dENoZWNrZWRFdmVudChpbnB1dEVsLCB7IGNoZWNrZWQgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG52YXIgcHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcbiAgXCJkaXJcIixcbiAgXCJkaXNhYmxlZFwiLFxuICBcImZvcm1cIixcbiAgXCJnZXRSb290Tm9kZVwiLFxuICBcImlkXCIsXG4gIFwiaWRzXCIsXG4gIFwibmFtZVwiLFxuICBcIm9uVmFsdWVDaGFuZ2VcIixcbiAgXCJvcmllbnRhdGlvblwiLFxuICBcInJlYWRPbmx5XCIsXG4gIFwidmFsdWVcIixcbiAgXCJkZWZhdWx0VmFsdWVcIlxuXSk7XG52YXIgc3BsaXRQcm9wcyA9IGNyZWF0ZVNwbGl0UHJvcHMocHJvcHMpO1xudmFyIGl0ZW1Qcm9wcyA9IGNyZWF0ZVByb3BzKCkoW1widmFsdWVcIiwgXCJkaXNhYmxlZFwiLCBcImludmFsaWRcIl0pO1xudmFyIHNwbGl0SXRlbVByb3BzID0gY3JlYXRlU3BsaXRQcm9wcyhpdGVtUHJvcHMpO1xuXG5leHBvcnQgeyBhbmF0b215LCBjb25uZWN0LCBpdGVtUHJvcHMsIG1hY2hpbmUsIHByb3BzLCBzcGxpdEl0ZW1Qcm9wcywgc3BsaXRQcm9wcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/rating-group/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/rating-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `rating:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `rating:${ctx.id}:label`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `rating:${ctx.id}:control`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`;\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getRadioEl = (ctx, value) => {\n  const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getControlEl(ctx), selector);\n};\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\nvar dispatchChangeEvent = (ctx, value) => {\n  const inputEl = getHiddenInputEl(ctx);\n  if (!inputEl) return;\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value });\n};\n\n// src/rating-group.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, scope, computed } = service;\n  const interactive = computed(\"isInteractive\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const value = context.get(\"value\");\n  const hoveredValue = context.get(\"hoveredValue\");\n  const translations = prop(\"translations\");\n  function getItemState(props2) {\n    const currentValue = computed(\"isHovering\") ? hoveredValue : value;\n    const equal = Math.ceil(currentValue) === props2.index;\n    const highlighted = props2.index <= currentValue || equal;\n    const half = equal && Math.abs(currentValue - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: computed(\"isHovering\"),\n    value,\n    hoveredValue,\n    count: prop(\"count\"),\n    items: Array.from({ length: prop(\"count\") }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({ type: \"SET_VALUE\", value: value2 });\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly,\n        required: prop(\"required\"),\n        id: getHiddenInputId(scope),\n        defaultValue: value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        htmlFor: getHiddenInputId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = getRadioEl(scope, Math.max(1, context.get(\"value\")));\n          radioEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: getControlId(scope),\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"GROUP_POINTER_OVER\" });\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"GROUP_POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const { index } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        id: getItemId(scope, index.toString()),\n        role: \"radio\",\n        tabIndex: (() => {\n          if (readOnly) return itemState.checked ? 0 : void 0;\n          if (disabled) return void 0;\n          return itemState.checked ? 0 : -1;\n        })(),\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-setsize\": prop(\"count\"),\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-half\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: prop(\"dir\")\n          });\n          const isMidway = percentX < 0.5;\n          send({ type: \"POINTER_OVER\", index, isMidway });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            ArrowUp() {\n              send({ type: \"ARROW_LEFT\" });\n            },\n            ArrowDown() {\n              send({ type: \"ARROW_RIGHT\" });\n            },\n            Space() {\n              send({ type: \"SPACE\", value: index });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK\", value: index });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        }\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      name: \"rating\",\n      count: 5,\n      dir: \"ltr\",\n      defaultValue: -1,\n      ...props2,\n      translations: {\n        ratingValueText: (index) => `${index} stars`,\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      hoveredValue: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          prop(\"onHoverChange\")?.({ hoveredValue: value });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  watch({ track, action, prop, context }) {\n    track([() => prop(\"allowHalf\")], () => {\n      action([\"roundValueIfNeeded\"]);\n    });\n    track([() => context.get(\"value\")], () => {\n      action([\"dispatchChangeEvent\"]);\n    });\n  },\n  computed: {\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ computed, prop }) => !(computed(\"isDisabled\") || prop(\"readOnly\")),\n    isHovering: ({ context }) => context.get(\"hoveredValue\") > -1\n  },\n  effects: [\"trackFormControlState\"],\n  on: {\n    SET_VALUE: {\n      actions: [\"setValue\"]\n    },\n    CLEAR_VALUE: {\n      actions: [\"clearValue\"]\n    }\n  },\n  states: {\n    idle: {\n      entry: [\"clearHoveredValue\"],\n      on: {\n        GROUP_POINTER_OVER: {\n          target: \"hover\"\n        },\n        FOCUS: {\n          target: \"focus\"\n        },\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        }\n      }\n    },\n    focus: {\n      on: {\n        POINTER_OVER: {\n          actions: [\"setHoveredValue\"]\n        },\n        GROUP_POINTER_LEAVE: {\n          actions: [\"clearHoveredValue\"]\n        },\n        BLUR: {\n          target: \"idle\"\n        },\n        SPACE: {\n          guard: \"isValueEmpty\",\n          actions: [\"setValue\"]\n        },\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        },\n        ARROW_LEFT: {\n          actions: [\"setPrevValue\", \"focusActiveRadio\"]\n        },\n        ARROW_RIGHT: {\n          actions: [\"setNextValue\", \"focusActiveRadio\"]\n        },\n        HOME: {\n          actions: [\"setValueToMin\", \"focusActiveRadio\"]\n        },\n        END: {\n          actions: [\"setValueToMax\", \"focusActiveRadio\"]\n        }\n      }\n    },\n    hover: {\n      on: {\n        POINTER_OVER: {\n          actions: [\"setHoveredValue\"]\n        },\n        GROUP_POINTER_LEAVE: [\n          {\n            guard: \"isRadioFocused\",\n            target: \"focus\",\n            actions: [\"clearHoveredValue\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"clearHoveredValue\"]\n          }\n        ],\n        CLICK: {\n          actions: [\"setValue\", \"focusActiveRadio\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isInteractive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n      isHoveredValueEmpty: ({ context }) => context.get(\"hoveredValue\") === -1,\n      isValueEmpty: ({ context }) => context.get(\"value\") <= 0,\n      isRadioFocused: ({ scope }) => !!getControlEl(scope)?.contains(scope.getActiveElement())\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      }\n    },\n    actions: {\n      clearHoveredValue({ context }) {\n        context.set(\"hoveredValue\", -1);\n      },\n      focusActiveRadio({ scope, context }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => getRadioEl(scope, context.get(\"value\"))?.focus());\n      },\n      setPrevValue({ context, prop }) {\n        const factor = prop(\"allowHalf\") ? 0.5 : 1;\n        context.set(\"value\", Math.max(0, context.get(\"value\") - factor));\n      },\n      setNextValue({ context, prop }) {\n        const factor = prop(\"allowHalf\") ? 0.5 : 1;\n        const value = context.get(\"value\") === -1 ? 0 : context.get(\"value\");\n        context.set(\"value\", Math.min(prop(\"count\"), value + factor));\n      },\n      setValueToMin({ context }) {\n        context.set(\"value\", 1);\n      },\n      setValueToMax({ context, prop }) {\n        context.set(\"value\", prop(\"count\"));\n      },\n      setValue({ context, event }) {\n        const hoveredValue = context.get(\"hoveredValue\");\n        const value = hoveredValue === -1 ? event.value : hoveredValue;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", -1);\n      },\n      setHoveredValue({ context, prop, event }) {\n        const half = prop(\"allowHalf\") && event.isMidway;\n        const factor = half ? 0.5 : 0;\n        context.set(\"hoveredValue\", event.index - factor);\n      },\n      roundValueIfNeeded({ context, prop }) {\n        if (prop(\"allowHalf\")) return;\n        context.set(\"value\", Math.round(context.get(\"value\")));\n      },\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\n  \"allowHalf\",\n  \"autoFocus\",\n  \"count\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onHoverChange\",\n  \"onValueChange\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"index\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/react/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/react/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   mergeProps: () => (/* reexport safe */ _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.mergeProps),\n/* harmony export */   normalizeProps: () => (/* binding */ normalizeProps),\n/* harmony export */   useMachine: () => (/* binding */ useMachine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ mergeProps,Portal,normalizeProps,useMachine auto */ \n\n\n\n\n\n\n\n// src/index.ts\nvar useSafeLayoutEffect = typeof globalThis.document !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_1__.useEffect;\n// src/bindable.ts\nfunction useBindable(props) {\n    const initial = props().value ?? props().defaultValue;\n    const eq = props().isEqual ?? Object.is;\n    const [initialValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initial);\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialValue);\n    const controlled = props().value !== void 0;\n    const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n    valueRef.current = controlled ? props().value : value;\n    const prevValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(valueRef.current);\n    useSafeLayoutEffect(()=>{\n        prevValue.current = valueRef.current;\n    }, [\n        value,\n        props().value\n    ]);\n    const setFn = (value2)=>{\n        const prev = prevValue.current;\n        const next = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(value2) ? value2(prev) : value2;\n        if (props().debug) {\n            console.log(`[bindable > ${props().debug}] setValue`, {\n                next,\n                prev\n            });\n        }\n        if (!controlled) setValue(next);\n        if (!eq(next, prev)) {\n            props().onChange?.(next, prev);\n        }\n    };\n    function get() {\n        return controlled ? props().value : value;\n    }\n    return {\n        initial: initialValue,\n        ref: valueRef,\n        get,\n        set (value2) {\n            const exec = props().sync ? react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync : _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.identity;\n            exec(()=>setFn(value2));\n        },\n        invoke (nextValue, prevValue2) {\n            props().onChange?.(nextValue, prevValue2);\n        },\n        hash (value2) {\n            return props().hash?.(value2) ?? String(value2);\n        }\n    };\n}\nuseBindable.cleanup = (fn)=>{\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>fn, []);\n};\nuseBindable.ref = (defaultValue)=>{\n    const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(defaultValue);\n    return {\n        get: ()=>value.current,\n        set: (next)=>{\n            value.current = next;\n        }\n    };\n};\nfunction useRefs(refs) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(refs);\n    return {\n        get (key) {\n            return ref.current[key];\n        },\n        set (key, value) {\n            ref.current[key] = value;\n        }\n    };\n}\nvar useTrack = (deps, effect)=>{\n    const render = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const called = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const mounted = render.current;\n        const run = mounted && called.current;\n        if (run) return effect();\n        called.current = true;\n    }, [\n        ...(deps ?? []).map((d)=>typeof d === \"function\" ? d() : d)\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        render.current = true;\n        return ()=>{\n            render.current = false;\n        };\n    }, []);\n};\n// src/machine.ts\nfunction useMachine(machine, userProps = {}) {\n    const scope = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const { id, ids, getRootNode } = userProps;\n        return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.createScope)({\n            id,\n            ids,\n            getRootNode\n        });\n    }, [\n        userProps\n    ]);\n    const debug = (...args)=>{\n        if (machine.debug) console.log(...args);\n    };\n    const props = machine.props?.({\n        props: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userProps),\n        scope\n    }) ?? userProps;\n    const prop = useProp(props);\n    const context = machine.context?.({\n        prop,\n        bindable: useBindable,\n        scope,\n        flush,\n        getContext () {\n            return ctx;\n        },\n        getComputed () {\n            return computed;\n        },\n        getRefs () {\n            return refs;\n        },\n        getEvent () {\n            return getEvent();\n        }\n    });\n    const contextRef = useLiveRef(context);\n    const ctx = {\n        get (key) {\n            return contextRef.current?.[key].ref.current;\n        },\n        set (key, value) {\n            contextRef.current?.[key].set(value);\n        },\n        initial (key) {\n            return contextRef.current?.[key].initial;\n        },\n        hash (key) {\n            const current = contextRef.current?.[key].get();\n            return contextRef.current?.[key].hash(current);\n        }\n    };\n    const effects = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(/* @__PURE__ */ new Map());\n    const transitionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const previousEventRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const eventRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        type: \"\"\n    });\n    const getEvent = ()=>({\n            ...eventRef.current,\n            current () {\n                return eventRef.current;\n            },\n            previous () {\n                return previousEventRef.current;\n            }\n        });\n    const getState = ()=>({\n            ...state,\n            matches (...values) {\n                return values.includes(state.ref.current);\n            },\n            hasTag (tag) {\n                return !!machine.states[state.ref.current]?.tags?.includes(tag);\n            }\n        });\n    const refs = useRefs(machine.refs?.({\n        prop,\n        context: ctx\n    }) ?? {});\n    const getParams = ()=>({\n            state: getState(),\n            context: ctx,\n            event: getEvent(),\n            prop,\n            send,\n            action,\n            guard,\n            track: useTrack,\n            refs,\n            computed,\n            flush,\n            scope,\n            choose\n        });\n    const action = (keys)=>{\n        const strs = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(keys) ? keys(getParams()) : keys;\n        if (!strs) return;\n        const fns = strs.map((s)=>{\n            const fn = machine.implementations?.actions?.[s];\n            if (!fn) (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js] No implementation found for action \"${JSON.stringify(s)}\"`);\n            return fn;\n        });\n        for (const fn of fns){\n            fn?.(getParams());\n        }\n    };\n    const guard = (str)=>{\n        if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(str)) return str(getParams());\n        return machine.implementations?.guards?.[str](getParams());\n    };\n    const effect = (keys)=>{\n        const strs = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(keys) ? keys(getParams()) : keys;\n        if (!strs) return;\n        const fns = strs.map((s)=>{\n            const fn = machine.implementations?.effects?.[s];\n            if (!fn) (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js] No implementation found for effect \"${JSON.stringify(s)}\"`);\n            return fn;\n        });\n        const cleanups = [];\n        for (const fn of fns){\n            const cleanup = fn?.(getParams());\n            if (cleanup) cleanups.push(cleanup);\n        }\n        return ()=>cleanups.forEach((fn)=>fn?.());\n    };\n    const choose = (transitions)=>{\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.toArray)(transitions).find((t)=>{\n            let result = !t.guard;\n            if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(t.guard)) result = !!guard(t.guard);\n            else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(t.guard)) result = t.guard(getParams());\n            return result;\n        });\n    };\n    const computed = (key)=>{\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.ensure)(machine.computed, ()=>`[zag-js] No computed object found on machine`);\n        const fn = machine.computed[key];\n        return fn({\n            context: ctx,\n            event: getEvent(),\n            prop,\n            refs,\n            scope,\n            computed\n        });\n    };\n    const state = useBindable(()=>({\n            defaultValue: machine.initialState({\n                prop\n            }),\n            onChange (nextState, prevState) {\n                if (prevState) {\n                    const exitEffects = effects.current.get(prevState);\n                    exitEffects?.();\n                    effects.current.delete(prevState);\n                }\n                if (prevState) {\n                    action(machine.states[prevState]?.exit);\n                }\n                action(transitionRef.current?.actions);\n                const cleanup = effect(machine.states[nextState]?.effects);\n                if (cleanup) effects.current.set(nextState, cleanup);\n                if (prevState === _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE) {\n                    action(machine.entry);\n                    const cleanup2 = effect(machine.effects);\n                    if (cleanup2) effects.current.set(_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE, cleanup2);\n                }\n                action(machine.states[nextState]?.entry);\n            }\n        }));\n    const hydratedStateRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);\n    const statusRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.NotStarted);\n    useSafeLayoutEffect(()=>{\n        queueMicrotask(()=>{\n            const started = statusRef.current === _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started;\n            statusRef.current = _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started;\n            debug(started ? \"rehydrating...\" : \"initializing...\");\n            const initialState = hydratedStateRef.current ?? state.initial;\n            state.invoke(initialState, started ? state.get() : _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE);\n        });\n        const fns = effects.current;\n        const currentState = state.ref.current;\n        return ()=>{\n            debug(\"unmounting...\");\n            hydratedStateRef.current = currentState;\n            statusRef.current = _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Stopped;\n            fns.forEach((fn)=>fn?.());\n            effects.current = /* @__PURE__ */ new Map();\n            transitionRef.current = null;\n            queueMicrotask(()=>{\n                action(machine.exit);\n            });\n        };\n    }, []);\n    const getCurrentState = ()=>{\n        if (\"ref\" in state) return state.ref.current;\n        return state.get();\n    };\n    const send = (event)=>{\n        queueMicrotask(()=>{\n            if (statusRef.current !== _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started) return;\n            previousEventRef.current = eventRef.current;\n            eventRef.current = event;\n            let currentState = getCurrentState();\n            const transitions = // @ts-ignore\n            machine.states[currentState].on?.[event.type] ?? // @ts-ignore\n            machine.on?.[event.type];\n            const transition = choose(transitions);\n            if (!transition) return;\n            transitionRef.current = transition;\n            const target = transition.target ?? currentState;\n            debug(\"transition\", event.type, transition.target || currentState, `(${transition.actions})`);\n            const changed = target !== currentState;\n            if (changed) {\n                (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(()=>state.set(target));\n            } else if (transition.reenter && !changed) {\n                state.invoke(currentState, currentState);\n            } else {\n                action(transition.actions ?? []);\n            }\n        });\n    };\n    machine.watch?.(getParams());\n    return {\n        state: getState(),\n        send,\n        context: ctx,\n        prop,\n        scope,\n        refs,\n        computed,\n        event: getEvent(),\n        getStatus: ()=>statusRef.current\n    };\n}\nfunction useLiveRef(value) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n    ref.current = value;\n    return ref;\n}\nfunction useProp(value) {\n    const ref = useLiveRef(value);\n    return function get(key) {\n        return ref.current[key];\n    };\n}\nfunction flush(fn) {\n    queueMicrotask(()=>{\n        (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(()=>fn());\n    });\n}\nvar normalizeProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createNormalizer)((v)=>v);\nvar Portal = (props)=>{\n    const { children, container, disabled, getRootNode } = props;\n    const isServer = \"undefined\" === \"undefined\";\n    if (isServer || disabled) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children\n    });\n    const doc = getRootNode?.().ownerDocument ?? document;\n    const mountNode = container?.current ?? doc.body;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children, (child)=>/*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(child, mountNode))\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/react/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/rect-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AffineTransform: () => (/* binding */ AffineTransform),\n/* harmony export */   addPoints: () => (/* binding */ addPoints),\n/* harmony export */   alignRect: () => (/* binding */ alignRect),\n/* harmony export */   clampPoint: () => (/* binding */ clampPoint),\n/* harmony export */   clampSize: () => (/* binding */ clampSize),\n/* harmony export */   closest: () => (/* binding */ closest),\n/* harmony export */   closestSideToPoint: () => (/* binding */ closestSideToPoint),\n/* harmony export */   closestSideToRect: () => (/* binding */ closestSideToRect),\n/* harmony export */   collisions: () => (/* binding */ collisions),\n/* harmony export */   constrainRect: () => (/* binding */ constrainRect),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   containsPoint: () => (/* binding */ containsPoint),\n/* harmony export */   containsRect: () => (/* binding */ containsRect),\n/* harmony export */   createPoint: () => (/* binding */ createPoint),\n/* harmony export */   createRect: () => (/* binding */ createRect),\n/* harmony export */   debugPolygon: () => (/* binding */ debugPolygon),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   distanceBtwEdges: () => (/* binding */ distanceBtwEdges),\n/* harmony export */   distanceFromPoint: () => (/* binding */ distanceFromPoint),\n/* harmony export */   distanceFromRect: () => (/* binding */ distanceFromRect),\n/* harmony export */   expand: () => (/* binding */ expand),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   getElementPolygon: () => (/* binding */ getElementPolygon),\n/* harmony export */   getElementRect: () => (/* binding */ getElementRect),\n/* harmony export */   getPointAngle: () => (/* binding */ getPointAngle),\n/* harmony export */   getRectCenters: () => (/* binding */ getRectCenters),\n/* harmony export */   getRectCorners: () => (/* binding */ getRectCorners),\n/* harmony export */   getRectEdges: () => (/* binding */ getRectEdges),\n/* harmony export */   getRectFromPoints: () => (/* binding */ getRectFromPoints),\n/* harmony export */   getRotationRect: () => (/* binding */ getRotationRect),\n/* harmony export */   getViewportRect: () => (/* binding */ getViewportRect),\n/* harmony export */   getWindowRect: () => (/* binding */ getWindowRect),\n/* harmony export */   inset: () => (/* binding */ inset),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   intersects: () => (/* binding */ intersects),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isPointEqual: () => (/* binding */ isPointEqual),\n/* harmony export */   isPointInPolygon: () => (/* binding */ isPointInPolygon),\n/* harmony export */   isRect: () => (/* binding */ isRect),\n/* harmony export */   isRectEqual: () => (/* binding */ isRectEqual),\n/* harmony export */   isSizeEqual: () => (/* binding */ isSizeEqual),\n/* harmony export */   isSymmetric: () => (/* binding */ isSymmetric),\n/* harmony export */   resizeRect: () => (/* binding */ resizeRect),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   shift: () => (/* binding */ shift),\n/* harmony export */   shrink: () => (/* binding */ shrink),\n/* harmony export */   subtractPoints: () => (/* binding */ subtractPoints),\n/* harmony export */   toRad: () => (/* binding */ toRad),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point, reference = rect.center) {\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => {\n  if (!b) return a;\n  return createPoint(a.x - b.x, a.y - b.y);\n};\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b?.width && a.height === b?.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b?.x && a.y === b?.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/remove-scroll/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   preventBodyScroll: () => (/* binding */ preventBodyScroll)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nvar LOCK_CLASSNAME = \"data-scroll-lock\";\nfunction getPaddingProperty(documentElement) {\n  const documentLeft = documentElement.getBoundingClientRect().left;\n  const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;\n  return scrollbarX ? \"paddingLeft\" : \"paddingRight\";\n}\nfunction preventBodyScroll(_document) {\n  const doc = _document ?? document;\n  const win = doc.defaultView ?? window;\n  const { documentElement, body } = doc;\n  const locked = body.hasAttribute(LOCK_CLASSNAME);\n  if (locked) return;\n  const scrollbarWidth = win.innerWidth - documentElement.clientWidth;\n  body.setAttribute(LOCK_CLASSNAME, \"\");\n  const setScrollbarWidthProperty = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyleProperty)(documentElement, \"--scrollbar-width\", `${scrollbarWidth}px`);\n  const paddingProperty = getPaddingProperty(documentElement);\n  const setBodyStyle = () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(body, {\n    overflow: \"hidden\",\n    [paddingProperty]: `${scrollbarWidth}px`\n  });\n  const setBodyStyleIOS = () => {\n    const { scrollX, scrollY, visualViewport } = win;\n    const offsetLeft = visualViewport?.offsetLeft ?? 0;\n    const offsetTop = visualViewport?.offsetTop ?? 0;\n    const restoreStyle = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(body, {\n      position: \"fixed\",\n      overflow: \"hidden\",\n      top: `${-(scrollY - Math.floor(offsetTop))}px`,\n      left: `${-(scrollX - Math.floor(offsetLeft))}px`,\n      right: \"0\",\n      [paddingProperty]: `${scrollbarWidth}px`\n    });\n    return () => {\n      restoreStyle?.();\n      win.scrollTo({ left: scrollX, top: scrollY, behavior: \"instant\" });\n    };\n  };\n  const cleanups = [setScrollbarWidthProperty(), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isIos)() ? setBodyStyleIOS() : setBodyStyle()];\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n    body.removeAttribute(LOCK_CLASSNAME);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG1FQUFnQiwwQ0FBMEMsZUFBZTtBQUNuSDtBQUNBLDZCQUE2QiwyREFBUTtBQUNyQztBQUNBLDBCQUEwQixlQUFlO0FBQ3pDLEdBQUc7QUFDSDtBQUNBLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBLGNBQWMsbUNBQW1DO0FBQ2pELGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0MsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsa0RBQWtEO0FBQ3ZFO0FBQ0E7QUFDQSxpREFBaUQsd0RBQUs7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AemFnLWpzL3JlbW92ZS1zY3JvbGwvZGlzdC9pbmRleC5tanM/Y2Y5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXRTdHlsZVByb3BlcnR5LCBzZXRTdHlsZSwgaXNJb3MgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIExPQ0tfQ0xBU1NOQU1FID0gXCJkYXRhLXNjcm9sbC1sb2NrXCI7XG5mdW5jdGlvbiBnZXRQYWRkaW5nUHJvcGVydHkoZG9jdW1lbnRFbGVtZW50KSB7XG4gIGNvbnN0IGRvY3VtZW50TGVmdCA9IGRvY3VtZW50RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuICBjb25zdCBzY3JvbGxiYXJYID0gTWF0aC5yb3VuZChkb2N1bWVudExlZnQpICsgZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQ7XG4gIHJldHVybiBzY3JvbGxiYXJYID8gXCJwYWRkaW5nTGVmdFwiIDogXCJwYWRkaW5nUmlnaHRcIjtcbn1cbmZ1bmN0aW9uIHByZXZlbnRCb2R5U2Nyb2xsKF9kb2N1bWVudCkge1xuICBjb25zdCBkb2MgPSBfZG9jdW1lbnQgPz8gZG9jdW1lbnQ7XG4gIGNvbnN0IHdpbiA9IGRvYy5kZWZhdWx0VmlldyA/PyB3aW5kb3c7XG4gIGNvbnN0IHsgZG9jdW1lbnRFbGVtZW50LCBib2R5IH0gPSBkb2M7XG4gIGNvbnN0IGxvY2tlZCA9IGJvZHkuaGFzQXR0cmlidXRlKExPQ0tfQ0xBU1NOQU1FKTtcbiAgaWYgKGxvY2tlZCkgcmV0dXJuO1xuICBjb25zdCBzY3JvbGxiYXJXaWR0aCA9IHdpbi5pbm5lcldpZHRoIC0gZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xuICBib2R5LnNldEF0dHJpYnV0ZShMT0NLX0NMQVNTTkFNRSwgXCJcIik7XG4gIGNvbnN0IHNldFNjcm9sbGJhcldpZHRoUHJvcGVydHkgPSAoKSA9PiBzZXRTdHlsZVByb3BlcnR5KGRvY3VtZW50RWxlbWVudCwgXCItLXNjcm9sbGJhci13aWR0aFwiLCBgJHtzY3JvbGxiYXJXaWR0aH1weGApO1xuICBjb25zdCBwYWRkaW5nUHJvcGVydHkgPSBnZXRQYWRkaW5nUHJvcGVydHkoZG9jdW1lbnRFbGVtZW50KTtcbiAgY29uc3Qgc2V0Qm9keVN0eWxlID0gKCkgPT4gc2V0U3R5bGUoYm9keSwge1xuICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgIFtwYWRkaW5nUHJvcGVydHldOiBgJHtzY3JvbGxiYXJXaWR0aH1weGBcbiAgfSk7XG4gIGNvbnN0IHNldEJvZHlTdHlsZUlPUyA9ICgpID0+IHtcbiAgICBjb25zdCB7IHNjcm9sbFgsIHNjcm9sbFksIHZpc3VhbFZpZXdwb3J0IH0gPSB3aW47XG4gICAgY29uc3Qgb2Zmc2V0TGVmdCA9IHZpc3VhbFZpZXdwb3J0Py5vZmZzZXRMZWZ0ID8/IDA7XG4gICAgY29uc3Qgb2Zmc2V0VG9wID0gdmlzdWFsVmlld3BvcnQ/Lm9mZnNldFRvcCA/PyAwO1xuICAgIGNvbnN0IHJlc3RvcmVTdHlsZSA9IHNldFN0eWxlKGJvZHksIHtcbiAgICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICAgIHRvcDogYCR7LShzY3JvbGxZIC0gTWF0aC5mbG9vcihvZmZzZXRUb3ApKX1weGAsXG4gICAgICBsZWZ0OiBgJHstKHNjcm9sbFggLSBNYXRoLmZsb29yKG9mZnNldExlZnQpKX1weGAsXG4gICAgICByaWdodDogXCIwXCIsXG4gICAgICBbcGFkZGluZ1Byb3BlcnR5XTogYCR7c2Nyb2xsYmFyV2lkdGh9cHhgXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJlc3RvcmVTdHlsZT8uKCk7XG4gICAgICB3aW4uc2Nyb2xsVG8oeyBsZWZ0OiBzY3JvbGxYLCB0b3A6IHNjcm9sbFksIGJlaGF2aW9yOiBcImluc3RhbnRcIiB9KTtcbiAgICB9O1xuICB9O1xuICBjb25zdCBjbGVhbnVwcyA9IFtzZXRTY3JvbGxiYXJXaWR0aFByb3BlcnR5KCksIGlzSW9zKCkgPyBzZXRCb2R5U3R5bGVJT1MoKSA6IHNldEJvZHlTdHlsZSgpXTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChmbikgPT4gZm4/LigpKTtcbiAgICBib2R5LnJlbW92ZUF0dHJpYnV0ZShMT0NLX0NMQVNTTkFNRSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IHByZXZlbnRCb2R5U2Nyb2xsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/scroll-area/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/scroll-area/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"scroll-area\").parts(\"root\", \"viewport\", \"content\", \"scrollbar\", \"thumb\", \"corner\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `scroll-area-${ctx.id}`;\nvar getViewportId = (ctx) => ctx.ids?.viewport ?? `scroll-area-${ctx.id}:viewport`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `scroll-area-${ctx.id}:content`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getViewportEl = (ctx) => ctx.getById(getViewportId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getScrollbarXEl = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getRootEl(ctx), `[data-part=scrollbar][data-orientation=horizontal][data-ownedby=\"${getRootId(ctx)}\"]`);\nvar getScrollbarYEl = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getRootEl(ctx), `[data-part=scrollbar][data-orientation=vertical][data-ownedby=\"${getRootId(ctx)}\"]`);\nvar getThumbXEl = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getScrollbarXEl(ctx), `[data-part=thumb][data-orientation=horizontal][data-ownedby=\"${getRootId(ctx)}\"]`);\nvar getThumbYEl = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getScrollbarYEl(ctx), `[data-part=thumb][data-orientation=vertical][data-ownedby=\"${getRootId(ctx)}\"]`);\nvar getCornerEl = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(getRootEl(ctx), `[data-part=corner][data-ownedby=\"${getRootId(ctx)}\"]`);\n\n// src/utils/scroll-progress.ts\nfunction getScrollProgress(element, scrollThreshold) {\n  if (!element) return EMPTY_SCROLL_PROGRESS;\n  let progressX = 0;\n  let progressY = 0;\n  const maxScrollX = element.scrollWidth - element.clientWidth;\n  if (maxScrollX > scrollThreshold) {\n    progressX = Math.min(1, Math.max(0, element.scrollLeft / maxScrollX));\n  }\n  const maxScrollY = element.scrollHeight - element.clientHeight;\n  if (maxScrollY > scrollThreshold) {\n    progressY = Math.min(1, Math.max(0, element.scrollTop / maxScrollY));\n  }\n  return { x: progressX, y: progressY };\n}\nvar EMPTY_SCROLL_PROGRESS = { x: 0, y: 0 };\n\n// src/utils/smooth-scroll.ts\nvar DURATION = 300;\nvar EASE_OUT_QUAD = (t) => t * (2 - t);\nfunction smoothScroll(node, options = {}) {\n  const { top, left, duration = DURATION, easing = EASE_OUT_QUAD, onComplete } = options;\n  if (!node) return;\n  const state = {\n    startTime: 0,\n    startScrollTop: node.scrollTop,\n    startScrollLeft: node.scrollLeft,\n    targetScrollTop: top ?? node.scrollTop,\n    targetScrollLeft: left ?? node.scrollLeft\n  };\n  let cancelled = false;\n  const cleanup = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n      state.rafId = void 0;\n    }\n    cancelled = true;\n  };\n  const animate = (currentTime) => {\n    if (cancelled) return;\n    if (state.startTime === 0) {\n      state.startTime = currentTime;\n    }\n    const elapsed = currentTime - state.startTime;\n    const progress = Math.min(elapsed / duration, 1);\n    const easedProgress = easing(progress);\n    const deltaTop = state.targetScrollTop - state.startScrollTop;\n    const deltaLeft = state.targetScrollLeft - state.startScrollLeft;\n    node.scrollTop = state.startScrollTop + deltaTop * easedProgress;\n    node.scrollLeft = state.startScrollLeft + deltaLeft * easedProgress;\n    if (progress < 1) {\n      state.rafId = requestAnimationFrame(animate);\n    } else {\n      onComplete?.();\n    }\n  };\n  state.rafId = requestAnimationFrame(animate);\n  return cleanup;\n}\n\n// src/utils/scroll-to.ts\nfunction scrollTo(node, options = {}) {\n  if (!node) return;\n  const { top, left, behavior = \"smooth\", easing, duration } = options;\n  if (behavior === \"smooth\") {\n    smoothScroll(node, { top, left, easing, duration });\n  } else {\n    const scrollOptions = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)({ behavior, top, left });\n    node.scrollTo(scrollOptions);\n  }\n}\nfunction scrollToEdge(node, edge, dir, behavior = \"smooth\", easing, duration) {\n  if (!node) return;\n  const maxLeft = node.scrollWidth - node.clientWidth;\n  const maxTop = node.scrollHeight - node.clientHeight;\n  const isRtl = dir === \"rtl\";\n  let targetScrollTop;\n  let targetScrollLeft;\n  switch (edge) {\n    case \"top\":\n      targetScrollTop = 0;\n      break;\n    case \"bottom\":\n      targetScrollTop = maxTop;\n      break;\n    case \"left\":\n      if (isRtl) {\n        const negative = node.scrollLeft <= 0;\n        targetScrollLeft = negative ? -maxLeft : 0;\n      } else {\n        targetScrollLeft = 0;\n      }\n      break;\n    case \"right\":\n      if (isRtl) {\n        const negative = node.scrollLeft <= 0;\n        targetScrollLeft = negative ? 0 : maxLeft;\n      } else {\n        targetScrollLeft = maxLeft;\n      }\n      break;\n  }\n  if (behavior === \"smooth\") {\n    smoothScroll(node, { top: targetScrollTop, left: targetScrollLeft, easing, duration });\n  } else {\n    const options = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)({ left: targetScrollLeft, top: targetScrollTop, behavior });\n    node.scrollTo(options);\n  }\n}\n\n// src/scroll-area.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, prop, scope } = service;\n  const dragging = state.matches(\"dragging\");\n  const hovering = context.get(\"hovering\");\n  const cornerSize = context.get(\"cornerSize\");\n  const thumbSize = context.get(\"thumbSize\");\n  const hiddenState = context.get(\"hiddenState\");\n  const atSides = context.get(\"atSides\");\n  return {\n    isAtTop: atSides.top,\n    isAtBottom: atSides.bottom,\n    isAtLeft: atSides.left,\n    isAtRight: atSides.right,\n    hasOverflowX: !hiddenState.scrollbarXHidden,\n    hasOverflowY: !hiddenState.scrollbarYHidden,\n    getScrollProgress() {\n      return getScrollProgress(getViewportEl(scope), 0);\n    },\n    scrollToEdge(details) {\n      const { edge, behavior } = details;\n      return scrollToEdge(getViewportEl(scope), edge, prop(\"dir\"), behavior);\n    },\n    scrollTo(details) {\n      return scrollTo(getViewportEl(scope), details);\n    },\n    getScrollbarState(props2) {\n      const horizontal = props2.orientation === \"horizontal\";\n      return {\n        hovering,\n        dragging,\n        scrolling: context.get(horizontal ? \"scrollingX\" : \"scrollingY\"),\n        hidden: horizontal ? hiddenState.scrollbarXHidden : hiddenState.scrollbarYHidden\n      };\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        role: \"presentation\",\n        \"data-overflow-x\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarXHidden),\n        \"data-overflow-y\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarYHidden),\n        onPointerEnter(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, target)) return;\n          send({ type: \"root.pointerenter\", pointerType: event.pointerType });\n        },\n        onPointerMove(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, target)) return;\n          send({ type: \"root.pointerenter\", pointerType: event.pointerType });\n        },\n        onPointerDown({ pointerType }) {\n          send({ type: \"root.pointerdown\", pointerType });\n        },\n        onPointerLeave(event) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"root.pointerleave\" });\n        },\n        style: {\n          position: \"relative\",\n          \"--corner-width\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(cornerSize?.width),\n          \"--corner-height\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(cornerSize?.height),\n          \"--thumb-width\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.width),\n          \"--thumb-height\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.height)\n        }\n      });\n    },\n    getViewportProps() {\n      const handleUserInteraction = () => {\n        send({ type: \"user.scroll\" });\n      };\n      return normalize.element({\n        ...parts.viewport.attrs,\n        role: \"presentation\",\n        \"data-ownedby\": getRootId(scope),\n        id: getViewportId(scope),\n        \"data-at-top\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(atSides.top),\n        \"data-at-bottom\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(atSides.bottom),\n        \"data-at-left\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(atSides.left),\n        \"data-at-right\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(atSides.right),\n        \"data-overflow-x\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarXHidden),\n        \"data-overflow-y\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarYHidden),\n        tabIndex: hiddenState.scrollbarXHidden || hiddenState.scrollbarYHidden ? void 0 : 0,\n        style: {\n          overflow: \"auto\"\n        },\n        onScroll(event) {\n          send({ type: \"viewport.scroll\", target: event.currentTarget });\n        },\n        onWheel: handleUserInteraction,\n        onTouchMove: handleUserInteraction,\n        onPointerMove: handleUserInteraction,\n        onPointerEnter: handleUserInteraction,\n        onKeyDown: handleUserInteraction\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: getContentId(scope),\n        role: \"presentation\",\n        \"data-overflow-x\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarXHidden),\n        \"data-overflow-y\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarYHidden),\n        style: {\n          minWidth: \"fit-content\"\n        }\n      });\n    },\n    getScrollbarProps(props2 = {}) {\n      const { orientation = \"vertical\" } = props2;\n      return normalize.element({\n        ...parts.scrollbar.attrs,\n        \"data-ownedby\": getRootId(scope),\n        \"data-orientation\": orientation,\n        \"data-scrolling\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(orientation === \"horizontal\" ? \"scrollingX\" : \"scrollingY\")),\n        \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(hovering),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-overflow-x\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarXHidden),\n        \"data-overflow-y\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarYHidden),\n        onPointerUp() {\n          send({ type: \"scrollbar.pointerup\", orientation });\n        },\n        onPointerDown(event) {\n          if (event.button !== 0) {\n            return;\n          }\n          if (event.currentTarget !== event.target) {\n            return;\n          }\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"scrollbar.pointerdown\", orientation, point });\n          event.stopPropagation();\n        },\n        style: {\n          position: \"absolute\",\n          touchAction: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n          ...orientation === \"vertical\" && {\n            top: 0,\n            bottom: `var(--corner-height)`,\n            insetInlineEnd: 0\n          },\n          ...orientation === \"horizontal\" && {\n            insetInlineStart: 0,\n            insetInlineEnd: `var(--corner-width)`,\n            bottom: 0\n          }\n        }\n      });\n    },\n    getThumbProps(props2 = {}) {\n      const { orientation = \"vertical\" } = props2;\n      return normalize.element({\n        ...parts.thumb.attrs,\n        \"data-ownedby\": getRootId(scope),\n        \"data-orientation\": orientation,\n        \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(hovering),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onPointerDown(event) {\n          if (event.button !== 0) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"thumb.pointerdown\", orientation, point });\n        },\n        style: {\n          ...orientation === \"vertical\" && {\n            height: \"var(--thumb-height)\"\n          },\n          ...orientation === \"horizontal\" && {\n            width: \"var(--thumb-width)\"\n          }\n        }\n      });\n    },\n    getCornerProps() {\n      return normalize.element({\n        ...parts.corner.attrs,\n        \"data-ownedby\": getRootId(scope),\n        \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(hovering),\n        \"data-state\": hiddenState.cornerHidden ? \"hidden\" : \"visible\",\n        \"data-overflow-x\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarXHidden),\n        \"data-overflow-y\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!hiddenState.scrollbarYHidden),\n        style: {\n          position: \"absolute\",\n          bottom: 0,\n          insetInlineEnd: 0,\n          width: \"var(--corner-width)\",\n          height: \"var(--corner-height)\"\n        }\n      });\n    }\n  };\n}\nfunction getScrollOffset(element, prop, axis) {\n  if (!element) return 0;\n  const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(element);\n  const start = axis === \"x\" ? \"Left\" : \"Top\";\n  const end = axis === \"x\" ? \"Right\" : \"Bottom\";\n  return parseFloat(styles[`${prop}${start}`]) + parseFloat(styles[`${prop}${end}`]);\n}\n\n// src/utils/scroll-sides.ts\nfunction getScrollSides(node, dir) {\n  const scrollTop = node.scrollTop;\n  const scrollLeft = node.scrollLeft;\n  const isRtl = dir === \"rtl\";\n  const threshold = 1;\n  const hasVerticalScroll = node.scrollHeight - node.clientHeight > threshold;\n  const hasHorizontalScroll = node.scrollWidth - node.clientWidth > threshold;\n  const maxScrollLeft = node.scrollWidth - node.clientWidth;\n  const maxScrollTop = node.scrollHeight - node.clientHeight;\n  let atLeft = false;\n  let atRight = false;\n  let atTop = false;\n  let atBottom = false;\n  if (hasHorizontalScroll) {\n    if (isRtl) {\n      if (scrollLeft <= 0) {\n        atLeft = Math.abs(scrollLeft) >= maxScrollLeft - threshold;\n        atRight = Math.abs(scrollLeft) <= threshold;\n      } else {\n        atLeft = scrollLeft <= threshold;\n        atRight = scrollLeft >= maxScrollLeft - threshold;\n      }\n    } else {\n      atLeft = scrollLeft <= threshold;\n      atRight = scrollLeft >= maxScrollLeft - threshold;\n    }\n  }\n  if (hasVerticalScroll) {\n    atTop = scrollTop <= threshold;\n    atBottom = scrollTop >= maxScrollTop - threshold;\n  }\n  return {\n    top: atTop,\n    right: atRight,\n    bottom: atBottom,\n    left: atLeft\n  };\n}\n\n// src/utils/timeout.ts\nvar EMPTY = 0;\nvar Timeout = class {\n  constructor() {\n    __publicField(this, \"currentId\", EMPTY);\n    __publicField(this, \"clear\", () => {\n      if (this.currentId !== EMPTY) {\n        clearTimeout(this.currentId);\n        this.currentId = EMPTY;\n      }\n    });\n    __publicField(this, \"disposeEffect\", () => {\n      return this.clear;\n    });\n  }\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = EMPTY;\n      fn();\n    }, delay);\n  }\n  isStarted() {\n    return this.currentId !== EMPTY;\n  }\n};\n\n// src/scroll-area.machine.ts\nvar MIN_THUMB_SIZE = 20;\nvar SCROLL_TIMEOUT = 1e3;\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      id: \"sv\",\n      ...props2\n    };\n  },\n  context({ bindable }) {\n    return {\n      scrollingX: bindable(() => ({ defaultValue: false })),\n      scrollingY: bindable(() => ({ defaultValue: false })),\n      hovering: bindable(() => ({ defaultValue: false })),\n      dragging: bindable(() => ({ defaultValue: false })),\n      touchModality: bindable(() => ({ defaultValue: false })),\n      atSides: bindable(() => ({\n        defaultValue: { top: true, right: false, bottom: false, left: true }\n      })),\n      cornerSize: bindable(() => ({\n        defaultValue: { width: 0, height: 0 }\n      })),\n      thumbSize: bindable(() => ({\n        defaultValue: { width: 0, height: 0 }\n      })),\n      hiddenState: bindable(() => ({\n        defaultValue: {\n          scrollbarYHidden: false,\n          scrollbarXHidden: false,\n          cornerHidden: false\n        },\n        hash(a) {\n          return `Y:${a.scrollbarYHidden} X:${a.scrollbarXHidden} C:${a.cornerHidden}`;\n        }\n      }))\n    };\n  },\n  refs() {\n    return {\n      orientation: \"vertical\",\n      scrollPosition: { x: 0, y: 0 },\n      scrollYTimeout: new Timeout(),\n      scrollXTimeout: new Timeout(),\n      scrollEndTimeout: new Timeout(),\n      startX: 0,\n      startY: 0,\n      startScrollTop: 0,\n      startScrollLeft: 0,\n      programmaticScroll: true\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  watch({ track, prop, context, send }) {\n    track([() => prop(\"dir\"), () => context.hash(\"hiddenState\")], () => {\n      send({ type: \"thumb.measure\" });\n    });\n  },\n  effects: [\"trackContentResize\", \"trackViewportVisibility\", \"trackWheelEvent\"],\n  entry: [\"checkHovering\"],\n  exit: [\"clearTimeouts\"],\n  on: {\n    \"thumb.measure\": {\n      actions: [\"setThumbSize\"]\n    },\n    \"viewport.scroll\": {\n      actions: [\"setThumbSize\", \"setScrolling\", \"setProgrammaticScroll\"]\n    },\n    \"root.pointerenter\": {\n      actions: [\"setTouchModality\", \"setHovering\"]\n    },\n    \"root.pointerdown\": {\n      actions: [\"setTouchModality\"]\n    },\n    \"root.pointerleave\": {\n      actions: [\"clearHovering\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"scrollbar.pointerdown\": {\n          target: \"dragging\",\n          actions: [\"scrollToPointer\", \"startDragging\"]\n        },\n        \"thumb.pointerdown\": {\n          target: \"dragging\",\n          actions: [\"startDragging\"]\n        }\n      }\n    },\n    dragging: {\n      effects: [\"trackPointerMove\"],\n      on: {\n        \"thumb.pointermove\": {\n          actions: [\"setDraggingScroll\"]\n        },\n        \"scrollbar.pointerup\": {\n          target: \"idle\",\n          actions: [\"stopDragging\"]\n        },\n        \"thumb.pointerup\": {\n          target: \"idle\",\n          actions: [\"clearScrolling\", \"stopDragging\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setTouchModality({ context, event }) {\n        context.set(\"touchModality\", event.pointerType === \"touch\");\n      },\n      setHovering({ context }) {\n        context.set(\"hovering\", true);\n      },\n      clearHovering({ context }) {\n        context.set(\"hovering\", false);\n      },\n      setProgrammaticScroll({ refs }) {\n        const scrollEndTimeout = refs.get(\"scrollEndTimeout\");\n        scrollEndTimeout.start(100, () => {\n          refs.set(\"programmaticScroll\", true);\n        });\n      },\n      clearScrolling({ context, event }) {\n        context.set(event.orientation === \"vertical\" ? \"scrollingY\" : \"scrollingX\", false);\n      },\n      setThumbSize({ context, scope, prop }) {\n        const viewportEl = getViewportEl(scope);\n        if (!viewportEl) return;\n        const scrollableContentHeight = viewportEl.scrollHeight;\n        const scrollableContentWidth = viewportEl.scrollWidth;\n        if (scrollableContentHeight === 0 || scrollableContentWidth === 0) return;\n        const scrollbarYEl = getScrollbarYEl(scope);\n        const scrollbarXEl = getScrollbarXEl(scope);\n        const thumbYEl = getThumbYEl(scope);\n        const thumbXEl = getThumbXEl(scope);\n        const viewportHeight = viewportEl.clientHeight;\n        const viewportWidth = viewportEl.clientWidth;\n        const scrollTop = viewportEl.scrollTop;\n        const scrollLeft = viewportEl.scrollLeft;\n        const scrollbarYHidden = viewportHeight >= scrollableContentHeight;\n        const scrollbarXHidden = viewportWidth >= scrollableContentWidth;\n        const ratioX = viewportWidth / scrollableContentWidth;\n        const ratioY = viewportHeight / scrollableContentHeight;\n        const nextWidth = scrollbarXHidden ? 0 : viewportWidth;\n        const nextHeight = scrollbarYHidden ? 0 : viewportHeight;\n        const scrollbarXOffset = getScrollOffset(scrollbarXEl, \"padding\", \"x\");\n        const scrollbarYOffset = getScrollOffset(scrollbarYEl, \"padding\", \"y\");\n        const thumbXOffset = getScrollOffset(thumbXEl, \"margin\", \"x\");\n        const thumbYOffset = getScrollOffset(thumbYEl, \"margin\", \"y\");\n        const idealNextWidth = nextWidth - scrollbarXOffset - thumbXOffset;\n        const idealNextHeight = nextHeight - scrollbarYOffset - thumbYOffset;\n        const maxNextWidth = scrollbarXEl ? Math.min(scrollbarXEl.offsetWidth, idealNextWidth) : idealNextWidth;\n        const maxNextHeight = scrollbarYEl ? Math.min(scrollbarYEl.offsetHeight, idealNextHeight) : idealNextHeight;\n        const clampedNextWidth = Math.max(MIN_THUMB_SIZE, maxNextWidth * ratioX);\n        const clampedNextHeight = Math.max(MIN_THUMB_SIZE, maxNextHeight * ratioY);\n        context.set(\"thumbSize\", (prevSize) => {\n          if (prevSize.height === clampedNextHeight && prevSize.width === clampedNextWidth) {\n            return prevSize;\n          }\n          return {\n            width: clampedNextWidth,\n            height: clampedNextHeight\n          };\n        });\n        if (scrollbarYEl && thumbYEl) {\n          const maxThumbOffsetY = scrollbarYEl.offsetHeight - clampedNextHeight - scrollbarYOffset - thumbYOffset;\n          const scrollRatioY = scrollTop / (scrollableContentHeight - viewportHeight);\n          const thumbOffsetY = Math.min(maxThumbOffsetY, Math.max(0, scrollRatioY * maxThumbOffsetY));\n          thumbYEl.style.transform = `translate3d(0,${thumbOffsetY}px,0)`;\n        }\n        if (scrollbarXEl && thumbXEl) {\n          const maxThumbOffsetX = scrollbarXEl.offsetWidth - clampedNextWidth - scrollbarXOffset - thumbXOffset;\n          const scrollRatioX = scrollLeft / (scrollableContentWidth - viewportWidth);\n          const thumbOffsetX = prop(\"dir\") === \"rtl\" ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(scrollRatioX * maxThumbOffsetX, -maxThumbOffsetX, 0) : (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(scrollRatioX * maxThumbOffsetX, 0, maxThumbOffsetX);\n          thumbXEl.style.transform = `translate3d(${thumbOffsetX}px,0,0)`;\n        }\n        const cornerEl = getCornerEl(scope);\n        if (cornerEl) {\n          if (scrollbarXHidden || scrollbarYHidden) {\n            context.set(\"cornerSize\", { width: 0, height: 0 });\n          } else if (!scrollbarXHidden && !scrollbarYHidden) {\n            const width = scrollbarYEl?.offsetWidth || 0;\n            const height = scrollbarXEl?.offsetHeight || 0;\n            context.set(\"cornerSize\", { width, height });\n          }\n        }\n        context.set(\"hiddenState\", (prevState) => {\n          const cornerHidden = scrollbarYHidden || scrollbarXHidden;\n          if (prevState.scrollbarYHidden === scrollbarYHidden && prevState.scrollbarXHidden === scrollbarXHidden && prevState.cornerHidden === cornerHidden) {\n            return prevState;\n          }\n          return {\n            scrollbarYHidden,\n            scrollbarXHidden,\n            cornerHidden\n          };\n        });\n        context.set(\"atSides\", (prev) => {\n          const next = getScrollSides(viewportEl, prop(\"dir\"));\n          if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(prev, next)) return prev;\n          return next;\n        });\n      },\n      checkHovering({ scope, context }) {\n        const viewportEl = getViewportEl(scope);\n        if (viewportEl?.matches(\":hover\")) {\n          context.set(\"hovering\", true);\n        }\n      },\n      setScrolling({ event, refs, context, prop }) {\n        const scrollPosition = {\n          x: event.target.scrollLeft,\n          y: event.target.scrollTop\n        };\n        const scrollPositionRef = refs.get(\"scrollPosition\");\n        const offsetX = scrollPosition.x - scrollPositionRef.x;\n        const offsetY = scrollPosition.y - scrollPositionRef.y;\n        refs.set(\"scrollPosition\", scrollPosition);\n        context.set(\"atSides\", (prev) => {\n          const next = getScrollSides(event.target, prop(\"dir\"));\n          if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(prev, next)) return prev;\n          return next;\n        });\n        if (offsetY !== 0) {\n          context.set(\"scrollingY\", true);\n          refs.get(\"scrollYTimeout\").start(SCROLL_TIMEOUT, () => {\n            context.set(\"scrollingY\", false);\n          });\n        }\n        if (offsetX !== 0) {\n          context.set(\"scrollingX\", true);\n          refs.get(\"scrollXTimeout\").start(SCROLL_TIMEOUT, () => {\n            context.set(\"scrollingX\", false);\n          });\n        }\n      },\n      scrollToPointer({ event, scope, prop }) {\n        const viewportEl = getViewportEl(scope);\n        if (!viewportEl) return;\n        const thumbYRef = getThumbYEl(scope);\n        const scrollbarYRef = getScrollbarYEl(scope);\n        const thumbXRef = getThumbXEl(scope);\n        const scrollbarXRef = getScrollbarXEl(scope);\n        const client = event.point;\n        if (thumbYRef && scrollbarYRef && event.orientation === \"vertical\") {\n          const thumbYOffset = getScrollOffset(thumbYRef, \"margin\", \"y\");\n          const scrollbarYOffset = getScrollOffset(scrollbarYRef, \"padding\", \"y\");\n          const thumbHeight = thumbYRef.offsetHeight;\n          const trackRectY = scrollbarYRef.getBoundingClientRect();\n          const clickY = client.y - trackRectY.top - thumbHeight / 2 - scrollbarYOffset + thumbYOffset / 2;\n          const scrollableContentHeight = viewportEl.scrollHeight;\n          const viewportHeight = viewportEl.clientHeight;\n          const maxThumbOffsetY = scrollbarYRef.offsetHeight - thumbHeight - scrollbarYOffset - thumbYOffset;\n          const scrollRatioY = clickY / maxThumbOffsetY;\n          const newScrollTop = scrollRatioY * (scrollableContentHeight - viewportHeight);\n          viewportEl.scrollTop = newScrollTop;\n        }\n        if (thumbXRef && scrollbarXRef && event.orientation === \"horizontal\") {\n          const thumbXOffset = getScrollOffset(thumbXRef, \"margin\", \"x\");\n          const scrollbarXOffset = getScrollOffset(scrollbarXRef, \"padding\", \"x\");\n          const thumbWidth = thumbXRef.offsetWidth;\n          const trackRectX = scrollbarXRef.getBoundingClientRect();\n          const clickX = client.x - trackRectX.left - thumbWidth / 2 - scrollbarXOffset + thumbXOffset / 2;\n          const scrollableContentWidth = viewportEl.scrollWidth;\n          const viewportWidth = viewportEl.clientWidth;\n          const maxThumbOffsetX = scrollbarXRef.offsetWidth - thumbWidth - scrollbarXOffset - thumbXOffset;\n          const scrollRatioX = clickX / maxThumbOffsetX;\n          let newScrollLeft;\n          if (prop(\"dir\") === \"rtl\") {\n            newScrollLeft = (1 - scrollRatioX) * (scrollableContentWidth - viewportWidth);\n            if (viewportEl.scrollLeft <= 0) {\n              newScrollLeft = -newScrollLeft;\n            }\n          } else {\n            newScrollLeft = scrollRatioX * (scrollableContentWidth - viewportWidth);\n          }\n          viewportEl.scrollLeft = newScrollLeft;\n        }\n      },\n      startDragging({ event, refs, scope }) {\n        refs.set(\"startX\", event.point.x);\n        refs.set(\"startY\", event.point.y);\n        refs.set(\"orientation\", event.orientation);\n        const viewportEl = getViewportEl(scope);\n        if (!viewportEl) return;\n        refs.set(\"startScrollTop\", viewportEl.scrollTop);\n        refs.set(\"startScrollLeft\", viewportEl.scrollLeft);\n      },\n      setDraggingScroll({ event, refs, scope, context }) {\n        const startY = refs.get(\"startY\");\n        const startX = refs.get(\"startX\");\n        const startScrollTop = refs.get(\"startScrollTop\");\n        const startScrollLeft = refs.get(\"startScrollLeft\");\n        const client = event.point;\n        const deltaY = client.y - startY;\n        const deltaX = client.x - startX;\n        const viewportEl = getViewportEl(scope);\n        if (!viewportEl) return;\n        const scrollableContentHeight = viewportEl.scrollHeight;\n        const viewportHeight = viewportEl.clientHeight;\n        const scrollableContentWidth = viewportEl.scrollWidth;\n        const viewportWidth = viewportEl.clientWidth;\n        const orientation = refs.get(\"orientation\");\n        const thumbYEl = getThumbYEl(scope);\n        const scrollbarYEl = getScrollbarYEl(scope);\n        if (thumbYEl && scrollbarYEl && orientation === \"vertical\") {\n          const scrollbarYOffset = getScrollOffset(scrollbarYEl, \"padding\", \"y\");\n          const thumbYOffset = getScrollOffset(thumbYEl, \"margin\", \"y\");\n          const thumbHeight = thumbYEl.offsetHeight;\n          const maxThumbOffsetY = scrollbarYEl.offsetHeight - thumbHeight - scrollbarYOffset - thumbYOffset;\n          const scrollRatioY = deltaY / maxThumbOffsetY;\n          viewportEl.scrollTop = startScrollTop + scrollRatioY * (scrollableContentHeight - viewportHeight);\n          context.set(\"scrollingY\", true);\n          refs.get(\"scrollYTimeout\").start(SCROLL_TIMEOUT, () => {\n            context.set(\"scrollingY\", false);\n          });\n        }\n        const thumbXEl = getThumbXEl(scope);\n        const scrollbarXEl = getScrollbarXEl(scope);\n        if (thumbXEl && scrollbarXEl && orientation === \"horizontal\") {\n          const scrollbarXOffset = getScrollOffset(scrollbarXEl, \"padding\", \"x\");\n          const thumbXOffset = getScrollOffset(thumbXEl, \"margin\", \"x\");\n          const thumbWidth = thumbXEl.offsetWidth;\n          const maxThumbOffsetX = scrollbarXEl.offsetWidth - thumbWidth - scrollbarXOffset - thumbXOffset;\n          const scrollRatioX = deltaX / maxThumbOffsetX;\n          viewportEl.scrollLeft = startScrollLeft + scrollRatioX * (scrollableContentWidth - viewportWidth);\n          context.set(\"scrollingX\", true);\n          refs.get(\"scrollXTimeout\").start(SCROLL_TIMEOUT, () => {\n            context.set(\"scrollingX\", false);\n          });\n        }\n      },\n      stopDragging({ refs }) {\n        refs.set(\"orientation\", null);\n      },\n      clearTimeouts({ refs }) {\n        refs.get(\"scrollYTimeout\").clear();\n        refs.get(\"scrollXTimeout\").clear();\n        refs.get(\"scrollEndTimeout\").clear();\n      }\n    },\n    effects: {\n      trackContentResize({ scope, send }) {\n        const contentEl = getContentEl(scope);\n        if (!contentEl) return;\n        const win = scope.getWin();\n        const obs = new win.ResizeObserver(() => {\n          setTimeout(() => {\n            send({ type: \"thumb.measure\" });\n          }, 1);\n        });\n        obs.observe(contentEl);\n        return () => {\n          obs.disconnect();\n        };\n      },\n      trackViewportVisibility({ scope, send }) {\n        const win = scope.getWin();\n        const viewportEl = getViewportEl(scope);\n        if (!viewportEl) return;\n        const observer = new win.IntersectionObserver((entries) => {\n          entries.forEach((entry) => {\n            if (entry.intersectionRatio > 0) {\n              send({ type: \"thumb.measure\" });\n              observer.disconnect();\n            }\n          });\n        });\n        observer.observe(viewportEl);\n        return () => {\n          observer.disconnect();\n        };\n      },\n      trackWheelEvent({ scope }) {\n        const scrollbarYEl = getScrollbarYEl(scope);\n        const scrollbarXEl = getScrollbarXEl(scope);\n        if (!scrollbarYEl && !scrollbarXEl) return;\n        const onWheel = (event) => {\n          const viewportEl = getViewportEl(scope);\n          if (!viewportEl || event.ctrlKey) return;\n          const orientation = event.currentTarget.dataset.orientation;\n          if (orientation === \"vertical\") {\n            const canScrollY = viewportEl.scrollHeight > viewportEl.clientHeight;\n            const atTop = viewportEl.scrollTop === 0 && event.deltaY < 0;\n            const atBottom = viewportEl.scrollTop === viewportEl.scrollHeight - viewportEl.clientHeight && event.deltaY > 0;\n            const shouldScroll = canScrollY && event.deltaY !== 0 && !(atTop || atBottom);\n            if (!shouldScroll) return;\n            event.preventDefault();\n            viewportEl.scrollTop += event.deltaY;\n          } else if (orientation === \"horizontal\") {\n            const canScrollX = viewportEl.scrollWidth > viewportEl.clientWidth;\n            const atLeft = viewportEl.scrollLeft === 0 && event.deltaX < 0;\n            const atRight = viewportEl.scrollLeft === viewportEl.scrollWidth - viewportEl.clientWidth && event.deltaX > 0;\n            const shouldScroll = canScrollX && event.deltaX !== 0 && !(atLeft || atRight);\n            if (!shouldScroll) return;\n            event.preventDefault();\n            viewportEl.scrollLeft += event.deltaX;\n          }\n        };\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)(\n          scrollbarYEl && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(scrollbarYEl, \"wheel\", onWheel, { passive: false }),\n          scrollbarXEl && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(scrollbarXEl, \"wheel\", onWheel, { passive: false })\n        );\n      },\n      trackPointerMove({ scope, send, refs }) {\n        const doc = scope.getDoc();\n        const orientation = refs.get(\"orientation\");\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(doc, {\n          onPointerMove({ point }) {\n            send({ type: \"thumb.pointermove\", orientation, point });\n          },\n          onPointerUp() {\n            send({ type: \"thumb.pointerup\", orientation });\n          }\n        });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"dir\", \"getRootNode\", \"ids\", \"id\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/scroll-area/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/select/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/select/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/select.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"select\").parts(\n  \"label\",\n  \"positioner\",\n  \"trigger\",\n  \"indicator\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"list\",\n  \"content\",\n  \"root\",\n  \"control\",\n  \"valueText\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.ListCollection({ items: [] });\n};\n\n// src/select.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `select:${ctx.id}`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`;\nvar getClearTriggerId = (ctx) => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `select:${ctx.id}:control`;\nvar getItemId = (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`;\nvar getHiddenSelectId = (ctx) => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`;\nvar getItemGroupId = (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`;\nvar getItemGroupLabelId = (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`;\nvar getHiddenSelectEl = (ctx) => ctx.getById(getHiddenSelectId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getClearTriggerEl = (ctx) => ctx.getById(getClearTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getItemEl = (ctx, id) => {\n  if (id == null) return null;\n  return ctx.getById(getItemId(ctx, id));\n};\n\n// src/select.connect.ts\nfunction connect(service, normalize) {\n  const { context, prop, scope, state, computed, send } = service;\n  const disabled = prop(\"disabled\") || context.get(\"fieldsetDisabled\");\n  const invalid = prop(\"invalid\");\n  const readOnly = prop(\"readOnly\");\n  const composite = prop(\"composite\");\n  const collection2 = prop(\"collection\");\n  const open = state.hasTag(\"open\");\n  const focused = state.matches(\"focused\");\n  const highlightedValue = context.get(\"highlightedValue\");\n  const highlightedItem = context.get(\"highlightedItem\");\n  const selectedItems = context.get(\"selectedItems\");\n  const currentPlacement = context.get(\"currentPlacement\");\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const interactive = computed(\"isInteractive\");\n  const ariaActiveDescendant = highlightedValue ? getItemId(scope, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const _disabled = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.ensure)(value, () => `[zag-js] No value found for item ${JSON.stringify(props2.item)}`);\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: context.get(\"value\").includes(value)\n    };\n  }\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: currentPlacement\n  });\n  return {\n    open,\n    focused,\n    empty: context.get(\"value\").length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: computed(\"hasSelectedItems\"),\n    value: context.get(\"value\"),\n    valueAsString: computed(\"valueAsString\"),\n    collection: collection2,\n    multiple: !!prop(\"multiple\"),\n    disabled: !!disabled,\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    focus() {\n      getTriggerEl(scope)?.focus({ preventScroll: true });\n    },\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    selectAll() {\n      send({ type: \"VALUE.SET\", value: collection2.getValues() });\n    },\n    setHighlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    clearHighlightValue() {\n      send({ type: \"HIGHLIGHTED_VALUE.CLEAR\" });\n    },\n    clearValue(value) {\n      if (value) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        dir: prop(\"dir\"),\n        id: getLabelId(scope),\n        ...parts.label.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly),\n        htmlFor: getHiddenSelectId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        id: getTriggerId(scope),\n        disabled,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": getContentId(scope),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": getLabelId(scope),\n        ...parts.trigger.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly),\n        \"data-placement\": currentPlacement,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(!computed(\"hasSelectedItems\")),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onFocus() {\n          send({ type: \"TRIGGER.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"TRIGGER.ARROW_UP\" });\n            },\n            ArrowDown(event2) {\n              send({ type: event2.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\" });\n            },\n            ArrowLeft() {\n              send({ type: \"TRIGGER.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"TRIGGER.ARROW_RIGHT\" });\n            },\n            Home() {\n              send({ type: \"TRIGGER.HOME\" });\n            },\n            End() {\n              send({ type: \"TRIGGER.END\" });\n            },\n            Enter() {\n              send({ type: \"TRIGGER.ENTER\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TRIGGER.TYPEAHEAD\", key: event2.key });\n              } else {\n                send({ type: \"TRIGGER.ENTER\" });\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: \"vertical\"\n          })];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(readOnly)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: getItemId(scope, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.highlighted),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.ariaAttr)(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.value === highlightedValue) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value });\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"pointerup\", value: itemState.value });\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return;\n          if (props2.persistFocus) return;\n          if (event.pointerType !== \"mouse\") return;\n          const pointerMoved = service.event.previous()?.type.includes(\"POINTER\");\n          if (!pointerMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: getItemGroupLabelId(scope, htmlFor),\n        dir: prop(\"dir\"),\n        role: \"presentation\"\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(disabled),\n        id: getItemGroupId(scope, id),\n        \"aria-labelledby\": getItemGroupLabelId(scope, id),\n        role: \"group\",\n        dir: prop(\"dir\")\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: getClearTriggerId(scope),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.dataAttr)(invalid),\n        disabled,\n        hidden: !computed(\"hasSelectedItems\"),\n        dir: prop(\"dir\"),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"CLEAR.CLICK\" });\n        }\n      });\n    },\n    getHiddenSelectProps() {\n      const value = context.get(\"value\");\n      const defaultValue = prop(\"multiple\") ? value : value?.[0];\n      return normalize.select({\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        disabled,\n        multiple: prop(\"multiple\"),\n        required: prop(\"required\"),\n        \"aria-hidden\": true,\n        id: getHiddenSelectId(scope),\n        defaultValue,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          getTriggerEl(scope)?.focus({ preventScroll: true });\n        },\n        \"aria-labelledby\": getLabelId(scope)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: prop(\"dir\"),\n        id: getContentId(scope),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": prop(\"multiple\") && composite ? true : void 0,\n        \"aria-labelledby\": getLabelId(scope),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isSelfTarget)(event)) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CONTENT.ARROW_UP\" });\n            },\n            ArrowDown() {\n              send({ type: \"CONTENT.ARROW_DOWN\" });\n            },\n            Home() {\n              send({ type: \"CONTENT.HOME\" });\n            },\n            End() {\n              send({ type: \"CONTENT.END\" });\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", src: \"keydown.enter\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventKey)(event)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.isEditableElement)(target)) {\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : void 0,\n        \"aria-labelledby\": getTriggerId(scope),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": !composite && prop(\"multiple\") ? true : void 0\n      });\n    }\n  };\n}\nvar { and, not, or } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      loopFocus: false,\n      closeOnSelect: !props2.multiple,\n      composite: true,\n      defaultValue: [],\n      ...props2,\n      collection: props2.collection ?? collection.empty(),\n      positioning: {\n        placement: \"bottom-start\",\n        gutter: 8,\n        ...props2.positioning\n      }\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          const items = prop(\"collection\").findMany(value);\n          return prop(\"onValueChange\")?.({ value, items });\n        }\n      })),\n      highlightedValue: bindable(() => ({\n        defaultValue: prop(\"defaultHighlightedValue\") || null,\n        value: prop(\"highlightedValue\"),\n        onChange(value) {\n          prop(\"onHighlightChange\")?.({\n            highlightedValue: value,\n            highlightedItem: prop(\"collection\").find(value),\n            highlightedIndex: prop(\"collection\").indexOf(value)\n          });\n        }\n      })),\n      currentPlacement: bindable(() => ({\n        defaultValue: void 0\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      highlightedItem: bindable(() => ({\n        defaultValue: null\n      })),\n      selectedItems: bindable(() => {\n        const value = prop(\"value\") ?? prop(\"defaultValue\") ?? [];\n        const items = prop(\"collection\").findMany(value);\n        return { defaultValue: items };\n      })\n    };\n  },\n  refs() {\n    return {\n      typeahead: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getByTypeahead.defaultOptions }\n    };\n  },\n  computed: {\n    hasSelectedItems: ({ context }) => context.get(\"value\").length > 0,\n    isTypingAhead: ({ refs }) => refs.get(\"typeahead\").keysSoFar !== \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || !!context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n    valueAsString: ({ context, prop }) => prop(\"collection\").stringifyItems(context.get(\"selectedItems\"))\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"idle\";\n  },\n  entry: [\"syncSelectElement\"],\n  watch({ context, prop, track, action }) {\n    track([() => context.get(\"value\").toString()], () => {\n      action([\"syncSelectedItems\", \"syncSelectElement\", \"dispatchChangeEvent\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n    track([() => context.get(\"highlightedValue\")], () => {\n      action([\"syncHighlightedItem\"]);\n    });\n    track([() => prop(\"collection\").toString()], () => {\n      action([\"syncCollection\"]);\n    });\n  },\n  on: {\n    \"HIGHLIGHTED_VALUE.SET\": {\n      actions: [\"setHighlightedItem\"]\n    },\n    \"HIGHLIGHTED_VALUE.CLEAR\": {\n      actions: [\"clearHighlightedItem\"]\n    },\n    \"ITEM.SELECT\": {\n      actions: [\"selectItem\"]\n    },\n    \"ITEM.CLEAR\": {\n      actions: [\"clearItem\"]\n    },\n    \"VALUE.SET\": {\n      actions: [\"setSelectedItems\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearSelectedItems\"]\n    },\n    \"CLEAR.CLICK\": {\n      actions: [\"clearSelectedItems\", \"focusTriggerEl\"]\n    }\n  },\n  effects: [\"trackFormControlState\"],\n  states: {\n    idle: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          }\n        ],\n        \"TRIGGER.FOCUS\": {\n          target: \"focused\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    focused: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": [\n          {\n            guard: \"isTriggerClickEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n          },\n          {\n            guard: \"isTriggerArrowUpEvent\",\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightComputedLastItem\"]\n          },\n          {\n            guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"highlightComputedFirstItem\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\"]\n          }\n        ],\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n          }\n        ],\n        \"TRIGGER.BLUR\": {\n          target: \"idle\"\n        },\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n          }\n        ],\n        \"TRIGGER.ENTER\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_UP\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedLastItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_DOWN\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_LEFT\": [\n          {\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectPreviousItem\"]\n          },\n          {\n            guard: not(\"multiple\"),\n            actions: [\"selectLastItem\"]\n          }\n        ],\n        \"TRIGGER.ARROW_RIGHT\": [\n          {\n            guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n            actions: [\"selectNextItem\"]\n          },\n          {\n            guard: not(\"multiple\"),\n            actions: [\"selectFirstItem\"]\n          }\n        ],\n        \"TRIGGER.HOME\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectFirstItem\"]\n        },\n        \"TRIGGER.END\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectLastItem\"]\n        },\n        \"TRIGGER.TYPEAHEAD\": {\n          guard: not(\"multiple\"),\n          actions: [\"selectMatchingItem\"]\n        }\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      exit: [\"scrollContentToTop\"],\n      effects: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n      on: {\n        \"CONTROLLED.CLOSE\": [\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"clearHighlightedItem\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"restoreFocus\",\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }\n        ],\n        \"TRIGGER.CLICK\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"focused\",\n            actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n          }\n        ],\n        \"ITEM.CLICK\": [\n          {\n            guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnSelect\",\n            target: \"focused\",\n            actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n          },\n          {\n            actions: [\"selectHighlightedItem\"]\n          }\n        ],\n        \"CONTENT.HOME\": {\n          actions: [\"highlightFirstItem\"]\n        },\n        \"CONTENT.END\": {\n          actions: [\"highlightLastItem\"]\n        },\n        \"CONTENT.ARROW_DOWN\": [\n          {\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n            actions: [\"highlightFirstItem\"]\n          },\n          {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightNextItem\"]\n          },\n          {\n            actions: [\"highlightFirstItem\"]\n          }\n        ],\n        \"CONTENT.ARROW_UP\": [\n          {\n            guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n            actions: [\"highlightLastItem\"]\n          },\n          {\n            guard: \"hasHighlightedItem\",\n            actions: [\"highlightPreviousItem\"]\n          },\n          {\n            actions: [\"highlightLastItem\"]\n          }\n        ],\n        \"CONTENT.TYPEAHEAD\": {\n          actions: [\"highlightMatchingItem\"]\n        },\n        \"ITEM.POINTER_MOVE\": {\n          actions: [\"highlightItem\"]\n        },\n        \"ITEM.POINTER_LEAVE\": {\n          actions: [\"clearHighlightedItem\"]\n        },\n        \"POSITIONING.SET\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      loop: ({ prop }) => !!prop(\"loopFocus\"),\n      multiple: ({ prop }) => !!prop(\"multiple\"),\n      hasSelectedItems: ({ computed }) => !!computed(\"hasSelectedItems\"),\n      hasHighlightedItem: ({ context }) => context.get(\"highlightedValue\") != null,\n      isFirstItemHighlighted: ({ context, prop }) => context.get(\"highlightedValue\") === prop(\"collection\").firstValue,\n      isLastItemHighlighted: ({ context, prop }) => context.get(\"highlightedValue\") === prop(\"collection\").lastValue,\n      closeOnSelect: ({ prop, event }) => !!(event.closeOnSelect ?? prop(\"closeOnSelect\")),\n      restoreFocus: ({ event }) => restoreFocusFn(event),\n      // guard assertions (for controlled mode)\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0,\n      isTriggerClickEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.CLICK\",\n      isTriggerEnterEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ENTER\",\n      isTriggerArrowUpEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n      isTriggerArrowDownEvent: ({ event }) => event.previousEvent?.type === \"TRIGGER.ARROW_DOWN\"\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.trackFormControl)(getHiddenSelectEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            const value = context.initial(\"value\");\n            context.set(\"value\", value);\n          }\n        });\n      },\n      trackDismissableElement({ scope, send, prop }) {\n        const contentEl = () => getContentEl(scope);\n        let restoreFocus = true;\n        return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(contentEl, {\n          defer: true,\n          exclude: [getTriggerEl(scope), getClearTriggerEl(scope)],\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n          }\n        });\n      },\n      computePlacement({ context, prop, scope }) {\n        const positioning = prop(\"positioning\");\n        context.set(\"currentPlacement\", positioning.placement);\n        const triggerEl = () => getTriggerEl(scope);\n        const positionerEl = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(triggerEl, positionerEl, {\n          defer: true,\n          ...positioning,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      scrollToHighlightedItem({ context, prop, scope, event }) {\n        const exec = (immediate) => {\n          const highlightedValue = context.get(\"highlightedValue\");\n          if (highlightedValue == null) return;\n          if (event.current().type.includes(\"POINTER\")) return;\n          const contentEl2 = getContentEl(scope);\n          const scrollToIndexFn = prop(\"scrollToIndexFn\");\n          if (scrollToIndexFn) {\n            const highlightedIndex = prop(\"collection\").indexOf(highlightedValue);\n            scrollToIndexFn?.({\n              index: highlightedIndex,\n              immediate,\n              getElement: () => getItemEl(scope, highlightedValue)\n            });\n            return;\n          }\n          const itemEl = getItemEl(scope, highlightedValue);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n        };\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => exec(true));\n        const contentEl = () => getContentEl(scope);\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.observeAttributes)(contentEl, {\n          defer: true,\n          attributes: [\"data-activedescendant\"],\n          callback() {\n            exec(false);\n          }\n        });\n      }\n    },\n    actions: {\n      reposition({ context, prop, scope, event }) {\n        const positionerEl = () => getPositionerEl(scope);\n        (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(getTriggerEl(scope), positionerEl, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility({ send, prop, event }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      },\n      highlightPreviousItem({ context, prop }) {\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (highlightedValue == null) return;\n        const value = prop(\"collection\").getPreviousValue(highlightedValue, 1, prop(\"loopFocus\"));\n        if (value == null) return;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightNextItem({ context, prop }) {\n        const highlightedValue = context.get(\"highlightedValue\");\n        if (highlightedValue == null) return;\n        const value = prop(\"collection\").getNextValue(highlightedValue, 1, prop(\"loopFocus\"));\n        if (value == null) return;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightFirstItem({ context, prop }) {\n        const value = prop(\"collection\").firstValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightLastItem({ context, prop }) {\n        const value = prop(\"collection\").lastValue;\n        context.set(\"highlightedValue\", value);\n      },\n      setInitialFocus({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => {\n          const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.getInitialFocus)({\n            root: getContentEl(scope)\n          });\n          element?.focus({ preventScroll: true });\n        });\n      },\n      focusTriggerEl({ event, scope }) {\n        if (!restoreFocusFn(event)) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_4__.raf)(() => {\n          const element = getTriggerEl(scope);\n          element?.focus({ preventScroll: true });\n        });\n      },\n      selectHighlightedItem({ context, prop, event }) {\n        let value = event.value ?? context.get(\"highlightedValue\");\n        if (value == null || !prop(\"collection\").has(value)) return;\n        prop(\"onSelect\")?.({ value });\n        const nullable = prop(\"deselectable\") && !prop(\"multiple\") && context.get(\"value\").includes(value);\n        value = nullable ? null : value;\n        context.set(\"value\", (prev) => {\n          if (value == null) return [];\n          if (prop(\"multiple\")) return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(prev, value);\n          return [value];\n        });\n      },\n      highlightComputedFirstItem({ context, prop, computed }) {\n        const collection2 = prop(\"collection\");\n        const value = computed(\"hasSelectedItems\") ? collection2.sort(context.get(\"value\"))[0] : collection2.firstValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightComputedLastItem({ context, prop, computed }) {\n        const collection2 = prop(\"collection\");\n        const value = computed(\"hasSelectedItems\") ? collection2.sort(context.get(\"value\"))[0] : collection2.lastValue;\n        context.set(\"highlightedValue\", value);\n      },\n      highlightFirstSelectedItem({ context, prop, computed }) {\n        if (!computed(\"hasSelectedItems\")) return;\n        const value = prop(\"collection\").sort(context.get(\"value\"))[0];\n        context.set(\"highlightedValue\", value);\n      },\n      highlightItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      highlightMatchingItem({ context, prop, event, refs }) {\n        const value = prop(\"collection\").search(event.key, {\n          state: refs.get(\"typeahead\"),\n          currentValue: context.get(\"highlightedValue\")\n        });\n        if (value == null) return;\n        context.set(\"highlightedValue\", value);\n      },\n      setHighlightedItem({ context, event }) {\n        context.set(\"highlightedValue\", event.value);\n      },\n      clearHighlightedItem({ context }) {\n        context.set(\"highlightedValue\", null);\n      },\n      selectItem({ context, prop, event }) {\n        prop(\"onSelect\")?.({ value: event.value });\n        const nullable = prop(\"deselectable\") && !prop(\"multiple\") && context.get(\"value\").includes(event.value);\n        const value = nullable ? null : event.value;\n        context.set(\"value\", (prev) => {\n          if (value == null) return [];\n          if (prop(\"multiple\")) return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(prev, value);\n          return [value];\n        });\n      },\n      clearItem({ context, event }) {\n        context.set(\"value\", (prev) => prev.filter((v) => v !== event.value));\n      },\n      setSelectedItems({ context, event }) {\n        context.set(\"value\", event.value);\n      },\n      clearSelectedItems({ context }) {\n        context.set(\"value\", []);\n      },\n      selectPreviousItem({ context, prop }) {\n        const [firstItem] = context.get(\"value\");\n        const value = prop(\"collection\").getPreviousValue(firstItem);\n        if (value) context.set(\"value\", [value]);\n      },\n      selectNextItem({ context, prop }) {\n        const [firstItem] = context.get(\"value\");\n        const value = prop(\"collection\").getNextValue(firstItem);\n        if (value) context.set(\"value\", [value]);\n      },\n      selectFirstItem({ context, prop }) {\n        const value = prop(\"collection\").firstValue;\n        if (value) context.set(\"value\", [value]);\n      },\n      selectLastItem({ context, prop }) {\n        const value = prop(\"collection\").lastValue;\n        if (value) context.set(\"value\", [value]);\n      },\n      selectMatchingItem({ context, prop, event, refs }) {\n        const value = prop(\"collection\").search(event.key, {\n          state: refs.get(\"typeahead\"),\n          currentValue: context.get(\"value\")[0]\n        });\n        if (value == null) return;\n        context.set(\"value\", [value]);\n      },\n      scrollContentToTop({ prop, scope }) {\n        if (prop(\"scrollToIndexFn\")) {\n          const firstValue = prop(\"collection\").firstValue;\n          prop(\"scrollToIndexFn\")?.({\n            index: 0,\n            immediate: true,\n            getElement: () => getItemEl(scope, firstValue)\n          });\n        } else {\n          getContentEl(scope)?.scrollTo(0, 0);\n        }\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      syncSelectElement({ context, prop, scope }) {\n        const selectEl = getHiddenSelectEl(scope);\n        if (!selectEl) return;\n        if (context.get(\"value\").length === 0 && !prop(\"multiple\")) {\n          selectEl.selectedIndex = -1;\n          return;\n        }\n        for (const option of selectEl.options) {\n          option.selected = context.get(\"value\").includes(option.value);\n        }\n      },\n      syncCollection({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedItem = collection2.find(context.get(\"highlightedValue\"));\n        if (highlightedItem) context.set(\"highlightedItem\", highlightedItem);\n        const selectedItems = collection2.findMany(context.get(\"value\"));\n        context.set(\"selectedItems\", selectedItems);\n      },\n      syncSelectedItems({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const prevSelectedItems = context.get(\"selectedItems\");\n        const value = context.get(\"value\");\n        const selectedItems = value.map((value2) => {\n          const item = prevSelectedItems.find((item2) => collection2.getItemValue(item2) === value2);\n          return item || collection2.find(value2);\n        });\n        context.set(\"selectedItems\", selectedItems);\n      },\n      syncHighlightedItem({ context, prop }) {\n        const collection2 = prop(\"collection\");\n        const highlightedValue = context.get(\"highlightedValue\");\n        const highlightedItem = highlightedValue ? collection2.find(highlightedValue) : null;\n        context.set(\"highlightedItem\", highlightedItem);\n      },\n      dispatchChangeEvent({ scope }) {\n        queueMicrotask(() => {\n          const node = getHiddenSelectEl(scope);\n          if (!node) return;\n          const win = scope.getWin();\n          const changeEvent = new win.Event(\"change\", { bubbles: true, composed: true });\n          node.dispatchEvent(changeEvent);\n        });\n      }\n    }\n  }\n});\nfunction restoreFocusFn(event) {\n  const v = event.restoreFocus ?? event.previousEvent?.restoreFocus;\n  return v == null || !!v;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"closeOnSelect\",\n  \"collection\",\n  \"composite\",\n  \"defaultHighlightedValue\",\n  \"defaultOpen\",\n  \"defaultValue\",\n  \"deselectable\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"onValueChange\",\n  \"open\",\n  \"positioning\",\n  \"readOnly\",\n  \"required\",\n  \"scrollToIndexFn\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/select/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/slider/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/slider/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitThumbProps: () => (/* binding */ splitThumbProps),\n/* harmony export */   thumbProps: () => (/* binding */ thumbProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/slider.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`;\nvar getThumbId = (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`;\nvar getHiddenInputId = (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`;\nvar getRangeId = (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`;\nvar getValueTextId = (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`;\nvar getMarkerId = (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = (ctx) => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const { prop, scope } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: { y: true }\n  });\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPercentValue)(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: value2 });\n  });\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const { prop, computed } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? `${valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - valuePercent[0]}%`;\n      return { start, end };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return { start: `${lastPercent}%`, end: \"0%\" };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(params) {\n  const { computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  const { context, prop } = params;\n  const { height = 0 } = context.get(\"thumbSize\") ?? {};\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  const { computed, context, prop } = params;\n  const { width = 0 } = context.get(\"thumbSize\") ?? {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueTransformer)([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const { computed, prop } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return `${percent}%`;\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(params, value) {\n  const { prop } = params;\n  const percent = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const { computed, prop } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const { computed } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const { context, computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-width\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.width),\n    \"--slider-thumb-height\": (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toPx)(thumbSize?.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(params, value) {\n  const { computed } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--translate-x) var(--translate-y)\",\n    \"--translate-x\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--translate-y\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const { context, prop } = params;\n  const step = prop(\"step\") * prop(\"minStepsBetweenThumbs\");\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueRanges)(context.get(\"value\"), prop(\"min\"), prop(\"max\"), step)[index];\n}\nfunction constrainValue(params, value, index) {\n  const { prop } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.snapValueToStep)(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPreviousStepValue)(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getNextStepValue)(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const { context } = params;\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getClosestValueIndex)(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const { state, send, context, prop, computed, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getPercentValue)(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize2.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          getFirstThumbEl(scope)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize2.element({\n        ...parts.root.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      });\n    },\n    getValueTextProps() {\n      return normalize2.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        id: getValueTextId(scope)\n      });\n    },\n    getTrackProps() {\n      return normalize2.element({\n        ...parts.track.attrs,\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = prop(\"getAriaValueText\")?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element({\n        ...parts.thumb.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused && focusedIndex === index),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize2.input({\n        name: name ?? (prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element({\n        id: getRangeId(scope),\n        ...parts.range.attrs,\n        dir: prop(\"dir\"),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      });\n    },\n    getControlProps() {\n      return normalize2.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize2.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element({\n        ...parts.marker.attrs,\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValueRanges)(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map((range) => {\n    const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.snapValueToStep)(range.value, range.min, range.max, step);\n    const rangeValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(snapValue, range.min, range.max);\n    if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(rangeValue, min, max)) {\n      throw new Error(\n        \"[zag-js/slider] The configured `min`, `max`, `step` or `minStepsBetweenThumbs` values are invalid\"\n      );\n    }\n    return rangeValue;\n  });\n};\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    const step = props2.step ?? 1;\n    const defaultValue = props2.defaultValue ?? [min];\n    const minStepsBetweenThumbs = props2.minStepsBetweenThumbs ?? 0;\n    return {\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs,\n      ...props2,\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFocusChange\")?.({ focusedIndex: value, value: ctx.get(\"value\") });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\",\n    isVertical: ({ prop }) => prop(\"orientation\") === \"vertical\",\n    isRtl: ({ prop }) => prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\",\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop, computed }) => !(prop(\"readOnly\") || computed(\"isDisabled\")),\n    hasMeasuredThumbSize: ({ context }) => context.get(\"thumbSize\") != null,\n    valuePercent({ context, prop }) {\n      return context.get(\"value\").map((value) => 100 * (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.getValuePercent)(value, prop(\"min\"), prop(\"max\")));\n    }\n  },\n  watch({ track, action, context }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: ({ event }) => event.index != null\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove({ scope, send }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(scope.getDoc(), {\n          onPointerMove(info) {\n            send({ type: \"POINTER_MOVE\", point: info.point });\n          },\n          onPointerUp() {\n            send({ type: \"POINTER_UP\" });\n          }\n        });\n      },\n      trackThumbSize({ context, scope, prop }) {\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackElementRect)(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            if (rects.length === 0) return;\n            const size = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.pick)(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements({ context, scope }) {\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd({ prop, context }) {\n        queueMicrotask(() => {\n          prop(\"onValueChangeEnd\")?.({ value: context.get(\"value\") });\n        });\n      },\n      setClosestThumbIndex(params) {\n        const { context, event } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const { context, event } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb({ scope, context }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl?.focus({ preventScroll: true });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { min } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { max } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const { context, event } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.setValueAtIndex)(prev, event.index, value));\n      },\n      setValue(params) {\n        const { context, event } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar thumbProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"index\", \"name\"]);\nvar splitThumbProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(thumbProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/slider/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/steps/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/steps/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/steps.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"steps\").parts(\n  \"root\",\n  \"list\",\n  \"item\",\n  \"trigger\",\n  \"indicator\",\n  \"separator\",\n  \"content\",\n  \"nextTrigger\",\n  \"prevTrigger\",\n  \"progress\"\n);\nvar parts = anatomy.build();\n\n// src/steps.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `steps:${ctx.id}`;\nvar getListId = (ctx) => ctx.ids?.list ?? `steps:${ctx.id}:list`;\nvar getTriggerId = (ctx, index) => ctx.ids?.triggerId?.(index) ?? `steps:${ctx.id}:trigger:${index}`;\nvar getContentId = (ctx, index) => ctx.ids?.contentId?.(index) ?? `steps:${ctx.id}:content:${index}`;\n\n// src/steps.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, computed, prop, scope } = service;\n  const step = context.get(\"step\");\n  const count = prop(\"count\");\n  const percent = computed(\"percent\");\n  const hasNextStep = computed(\"hasNextStep\");\n  const hasPrevStep = computed(\"hasPrevStep\");\n  const getItemState = (props2) => ({\n    triggerId: getTriggerId(scope, props2.index),\n    contentId: getContentId(scope, props2.index),\n    current: props2.index === step,\n    completed: props2.index < step,\n    incomplete: props2.index > step,\n    index: props2.index,\n    first: props2.index === 0,\n    last: props2.index === count - 1\n  });\n  const goToNextStep = () => {\n    send({ type: \"STEP.NEXT\", src: \"next.trigger.click\" });\n  };\n  const goToPrevStep = () => {\n    send({ type: \"STEP.PREV\", src: \"prev.trigger.click\" });\n  };\n  const resetStep = () => {\n    send({ type: \"STEP.RESET\", src: \"reset.trigger.click\" });\n  };\n  const setStep = (value) => {\n    send({ type: \"STEP.SET\", value, src: \"api.setValue\" });\n  };\n  return {\n    value: step,\n    count,\n    percent,\n    hasNextStep,\n    hasPrevStep,\n    isCompleted: computed(\"completed\"),\n    goToNextStep,\n    goToPrevStep,\n    resetStep,\n    getItemState,\n    setStep,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        style: {\n          \"--percent\": `${percent}%`\n        }\n      });\n    },\n    getListProps() {\n      const arr = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.fromLength)(count);\n      const triggerIds = arr.map((_, index) => getTriggerId(scope, index));\n      return normalize.element({\n        ...parts.list.attrs,\n        dir: prop(\"dir\"),\n        id: getListId(scope),\n        role: \"tablist\",\n        \"aria-owns\": triggerIds.join(\" \"),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: prop(\"dir\"),\n        \"aria-current\": itemState.current ? \"step\" : void 0,\n        \"data-orientation\": prop(\"orientation\")\n      });\n    },\n    getTriggerProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: itemState.triggerId,\n        role: \"tab\",\n        dir: prop(\"dir\"),\n        tabIndex: !prop(\"linear\") || itemState.current ? 0 : -1,\n        \"aria-selected\": itemState.current,\n        \"aria-controls\": itemState.contentId,\n        \"data-state\": itemState.current ? \"open\" : \"closed\",\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.completed),\n        \"data-current\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.current),\n        \"data-incomplete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.incomplete),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"linear\")) return;\n          send({ type: \"STEP.SET\", value: props2.index, src: \"trigger.click\" });\n        }\n      });\n    },\n    getContentProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: itemState.contentId,\n        role: \"tabpanel\",\n        tabIndex: 0,\n        hidden: !itemState.current,\n        \"data-state\": itemState.current ? \"open\" : \"closed\",\n        \"data-orientation\": prop(\"orientation\"),\n        \"aria-labelledby\": itemState.triggerId\n      });\n    },\n    getIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.completed),\n        \"data-current\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.current),\n        \"data-incomplete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.incomplete)\n      });\n    },\n    getSeparatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.separator.attrs,\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.completed),\n        \"data-current\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.current),\n        \"data-incomplete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(itemState.incomplete)\n      });\n    },\n    getNextTriggerProps() {\n      return normalize.button({\n        ...parts.nextTrigger.attrs,\n        dir: prop(\"dir\"),\n        type: \"button\",\n        disabled: !hasNextStep,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          goToNextStep();\n        }\n      });\n    },\n    getPrevTriggerProps() {\n      return normalize.button({\n        dir: prop(\"dir\"),\n        ...parts.prevTrigger.attrs,\n        type: \"button\",\n        disabled: !hasPrevStep,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          goToPrevStep();\n        }\n      });\n    },\n    getProgressProps() {\n      return normalize.element({\n        dir: prop(\"dir\"),\n        ...parts.progress.attrs,\n        role: \"progressbar\",\n        \"aria-valuenow\": percent,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuetext\": `${percent}% complete`,\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(percent === 100)\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultStep: 0,\n      count: 1,\n      linear: false,\n      orientation: \"horizontal\",\n      ...props2\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      step: bindable(() => ({\n        defaultValue: prop(\"defaultStep\"),\n        value: prop(\"step\"),\n        onChange(value) {\n          prop(\"onStepChange\")?.({ step: value });\n          const completed = value == prop(\"count\");\n          if (completed) prop(\"onStepComplete\")?.();\n        }\n      }))\n    };\n  },\n  computed: {\n    percent: ({ context, prop }) => context.get(\"step\") / prop(\"count\") * 100,\n    hasNextStep: ({ context, prop }) => context.get(\"step\") < prop(\"count\"),\n    hasPrevStep: ({ context }) => context.get(\"step\") > 0,\n    completed: ({ context, prop }) => context.get(\"step\") === prop(\"count\")\n  },\n  initialState() {\n    return \"idle\";\n  },\n  entry: [\"validateStep\"],\n  states: {\n    idle: {\n      on: {\n        \"STEP.SET\": {\n          actions: [\"setStep\"]\n        },\n        \"STEP.NEXT\": {\n          actions: [\"goToNextStep\"]\n        },\n        \"STEP.PREV\": {\n          actions: [\"goToPrevStep\"]\n        },\n        \"STEP.RESET\": {\n          actions: [\"resetStep\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      goToNextStep({ context, prop }) {\n        const value = Math.min(context.get(\"step\") + 1, prop(\"count\"));\n        context.set(\"step\", value);\n      },\n      goToPrevStep({ context }) {\n        const value = Math.max(context.get(\"step\") - 1, 0);\n        context.set(\"step\", value);\n      },\n      resetStep({ context }) {\n        context.set(\"step\", 0);\n      },\n      setStep({ context, event }) {\n        context.set(\"step\", event.value);\n      },\n      validateStep({ context, prop }) {\n        validateStep(prop(\"count\"), context.get(\"step\"));\n      }\n    }\n  }\n});\nvar validateStep = (count, step) => {\n  if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isValueWithinRange)(step, 0, count)) {\n    throw new RangeError(`[zag-js/steps] step index ${step} is out of bounds`);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"count\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"linear\",\n  \"onStepChange\",\n  \"onStepComplete\",\n  \"orientation\",\n  \"step\",\n  \"defaultStep\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/steps/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/switch/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/switch/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/switch.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\");\nvar parts = anatomy.build();\n\n// src/switch.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `switch:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`;\nvar getThumbId = (ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/switch.connect.ts\nfunction connect(service, normalize) {\n  const { context, send, prop, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const checked = !!context.get(\"checked\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"active\")),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"hovered\")),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"invalid\"))\n  };\n  return {\n    checked,\n    disabled,\n    focused,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          if (disabled) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            getHiddenInputEl(scope)?.focus();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getThumbId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": prop(\"invalid\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultChecked: false,\n      label: \"switch\",\n      value: \"on\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(value) {\n          prop(\"onCheckedChange\")?.({ checked: value });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      })),\n      focusVisible: bindable(() => ({\n        defaultValue: false\n      })),\n      active: bindable(() => ({\n        defaultValue: false\n      })),\n      focused: bindable(() => ({\n        defaultValue: false\n      })),\n      hovered: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isDisabled: ({ context, prop }) => prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  watch({ track, prop, context, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ computed, scope, context }) {\n        if (computed(\"isDisabled\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"isDisabled\")) return;\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode() });\n      },\n      trackFormControlState({ context, send, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            const checked = context.initial(\"checked\");\n            send({ type: \"CHECKED.SET\", checked: !!checked, src: \"form-reset\" });\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, !!context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\")) {\n          context.set(\"focused\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context }) {\n        context.set(\"checked\", !context.get(\"checked\"));\n      },\n      dispatchChangeEvent({ context, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: context.get(\"checked\") });\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"checked\",\n  \"defaultChecked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/switch/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tabs/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/tabs/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   contentProps: () => (/* binding */ contentProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitContentProps: () => (/* binding */ splitContentProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitTriggerProps: () => (/* binding */ splitTriggerProps),\n/* harmony export */   triggerProps: () => (/* binding */ triggerProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/tabs.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tabs\").parts(\"root\", \"list\", \"trigger\", \"content\", \"indicator\");\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `tabs:${ctx.id}`;\nvar getListId = (ctx) => ctx.ids?.list ?? `tabs:${ctx.id}:list`;\nvar getContentId = (ctx, id) => ctx.ids?.content ?? `tabs:${ctx.id}:content-${id}`;\nvar getTriggerId = (ctx, id) => ctx.ids?.trigger ?? `tabs:${ctx.id}:trigger-${id}`;\nvar getIndicatorId = (ctx) => ctx.ids?.indicator ?? `tabs:${ctx.id}:indicator`;\nvar getListEl = (ctx) => ctx.getById(getListId(ctx));\nvar getContentEl = (ctx, id) => ctx.getById(getContentId(ctx, id));\nvar getTriggerEl = (ctx, id) => ctx.getById(getTriggerId(ctx, id));\nvar getIndicatorEl = (ctx) => ctx.getById(getIndicatorId(ctx));\nvar getElements = (ctx) => {\n  const ownerId = CSS.escape(getListId(ctx));\n  const selector = `[role=tab][data-ownedby='${ownerId}']:not([disabled])`;\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(getListEl(ctx), selector);\n};\nvar getFirstTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(getElements(ctx));\nvar getLastTriggerEl = (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(getElements(ctx));\nvar getNextTriggerEl = (ctx, opts) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(getElements(ctx), getTriggerId(ctx, opts.value), opts.loopFocus);\nvar getPrevTriggerEl = (ctx, opts) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(getElements(ctx), getTriggerId(ctx, opts.value), opts.loopFocus);\nvar getOffsetRect = (el) => {\n  return {\n    left: el?.offsetLeft ?? 0,\n    top: el?.offsetTop ?? 0,\n    width: el?.offsetWidth ?? 0,\n    height: el?.offsetHeight ?? 0\n  };\n};\nvar getRectById = (ctx, id) => {\n  const tab = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.itemById)(getElements(ctx), getTriggerId(ctx, id));\n  return resolveRect(getOffsetRect(tab));\n};\nvar resolveRect = (rect) => ({\n  width: `${rect.width}px`,\n  height: `${rect.height}px`,\n  left: `${rect.left}px`,\n  top: `${rect.top}px`\n});\n\n// src/tabs.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, prop, scope } = service;\n  const translations = prop(\"translations\");\n  const focused = state.matches(\"focused\");\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const composite = prop(\"composite\");\n  function getTriggerState(props2) {\n    return {\n      selected: context.get(\"value\") === props2.value,\n      focused: context.get(\"focusedValue\") === props2.value,\n      disabled: !!props2.disabled\n    };\n  }\n  return {\n    value: context.get(\"value\"),\n    focusedValue: context.get(\"focusedValue\"),\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    clearValue() {\n      send({ type: \"CLEAR_VALUE\" });\n    },\n    setIndicatorRect(value) {\n      const id = getTriggerId(scope, value);\n      send({ type: \"SET_INDICATOR_RECT\", id });\n    },\n    syncTabIndex() {\n      send({ type: \"SYNC_TAB_INDEX\" });\n    },\n    selectNext(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectNext\" });\n      send({ type: \"ARROW_NEXT\", src: \"selectNext\" });\n    },\n    selectPrev(fromValue) {\n      send({ type: \"TAB_FOCUS\", value: fromValue, src: \"selectPrev\" });\n      send({ type: \"ARROW_PREV\", src: \"selectPrev\" });\n    },\n    focus() {\n      const value = context.get(\"value\");\n      if (!value) return;\n      getTriggerEl(scope, value)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        dir: prop(\"dir\")\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        id: getListId(scope),\n        role: \"tablist\",\n        dir: prop(\"dir\"),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"aria-label\": translations?.listLabel,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const keyMap = {\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_NEXT\", key: \"ArrowDown\" });\n            },\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_PREV\", key: \"ArrowUp\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_PREV\", key: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_NEXT\", key: \"ArrowRight\" });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          let key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n            return;\n          }\n        }\n      });\n    },\n    getTriggerState,\n    getTriggerProps(props2) {\n      const { value, disabled } = props2;\n      const triggerState = getTriggerState(props2);\n      return normalize.button({\n        ...parts.trigger.attrs,\n        role: \"tab\",\n        type: \"button\",\n        disabled,\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-disabled\": disabled,\n        \"data-value\": value,\n        \"aria-selected\": triggerState.selected,\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(triggerState.selected),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(triggerState.focused),\n        \"aria-controls\": triggerState.selected ? getContentId(scope, value) : void 0,\n        \"data-ownedby\": getListId(scope),\n        \"data-ssr\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"ssr\")),\n        id: getTriggerId(scope, value),\n        tabIndex: triggerState.selected && composite ? 0 : -1,\n        onFocus() {\n          send({ type: \"TAB_FOCUS\", value });\n        },\n        onBlur(event) {\n          const target = event.relatedTarget;\n          if (target?.getAttribute(\"role\") !== \"tab\") {\n            send({ type: \"TAB_BLUR\" });\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TAB_CLICK\", value });\n        }\n      });\n    },\n    getContentProps(props2) {\n      const { value } = props2;\n      const selected = context.get(\"value\") === value;\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        id: getContentId(scope, value),\n        tabIndex: composite ? 0 : -1,\n        \"aria-labelledby\": getTriggerId(scope, value),\n        role: \"tabpanel\",\n        \"data-ownedby\": getListId(scope),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(selected),\n        \"data-orientation\": prop(\"orientation\"),\n        hidden: !selected\n      });\n    },\n    getIndicatorProps() {\n      const indicatorRect = context.get(\"indicatorRect\");\n      const indicatorTransition = context.get(\"indicatorTransition\");\n      return normalize.element({\n        id: getIndicatorId(scope),\n        ...parts.indicator.attrs,\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        style: {\n          \"--transition-property\": \"left, right, top, bottom, width, height\",\n          \"--left\": indicatorRect.left,\n          \"--top\": indicatorRect.top,\n          \"--width\": indicatorRect.width,\n          \"--height\": indicatorRect.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: indicatorTransition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [isHorizontal ? \"left\" : \"top\"]: isHorizontal ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { createMachine } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.setup)();\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      dir: \"ltr\",\n      orientation: \"horizontal\",\n      activationMode: \"automatic\",\n      loopFocus: true,\n      composite: true,\n      navigate(details) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.clickIfLink)(details.node);\n      },\n      defaultValue: null,\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      focusedValue: bindable(() => ({\n        defaultValue: prop(\"value\") || prop(\"defaultValue\"),\n        sync: true,\n        onChange(value) {\n          prop(\"onFocusChange\")?.({ focusedValue: value });\n        }\n      })),\n      ssr: bindable(() => ({ defaultValue: true })),\n      indicatorTransition: bindable(() => ({ defaultValue: false })),\n      indicatorRect: bindable(() => ({\n        defaultValue: { left: \"0px\", top: \"0px\", width: \"0px\", height: \"0px\" }\n      }))\n    };\n  },\n  watch({ context, prop, track, action }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"allowIndicatorTransition\", \"syncIndicatorRect\", \"syncTabIndex\", \"navigateIfNeeded\"]);\n    });\n    track([() => prop(\"dir\"), () => prop(\"orientation\")], () => {\n      action([\"syncIndicatorRect\"]);\n    });\n  },\n  on: {\n    SET_VALUE: {\n      actions: [\"setValue\"]\n    },\n    CLEAR_VALUE: {\n      actions: [\"clearValue\"]\n    },\n    SET_INDICATOR_RECT: {\n      actions: [\"setIndicatorRect\"]\n    },\n    SYNC_TAB_INDEX: {\n      actions: [\"syncTabIndex\"]\n    }\n  },\n  entry: [\"syncIndicatorRect\", \"syncTabIndex\", \"syncSsr\"],\n  exit: [\"cleanupObserver\"],\n  states: {\n    idle: {\n      on: {\n        TAB_FOCUS: {\n          target: \"focused\",\n          actions: [\"setFocusedValue\"]\n        },\n        TAB_CLICK: {\n          target: \"focused\",\n          actions: [\"setFocusedValue\", \"setValue\"]\n        }\n      }\n    },\n    focused: {\n      on: {\n        TAB_CLICK: {\n          actions: [\"setFocusedValue\", \"setValue\"]\n        },\n        ARROW_PREV: [\n          {\n            guard: \"selectOnFocus\",\n            actions: [\"focusPrevTab\", \"selectFocusedTab\"]\n          },\n          {\n            actions: [\"focusPrevTab\"]\n          }\n        ],\n        ARROW_NEXT: [\n          {\n            guard: \"selectOnFocus\",\n            actions: [\"focusNextTab\", \"selectFocusedTab\"]\n          },\n          {\n            actions: [\"focusNextTab\"]\n          }\n        ],\n        HOME: [\n          {\n            guard: \"selectOnFocus\",\n            actions: [\"focusFirstTab\", \"selectFocusedTab\"]\n          },\n          {\n            actions: [\"focusFirstTab\"]\n          }\n        ],\n        END: [\n          {\n            guard: \"selectOnFocus\",\n            actions: [\"focusLastTab\", \"selectFocusedTab\"]\n          },\n          {\n            actions: [\"focusLastTab\"]\n          }\n        ],\n        TAB_FOCUS: {\n          actions: [\"setFocusedValue\"]\n        },\n        TAB_BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      selectOnFocus: ({ prop }) => prop(\"activationMode\") === \"automatic\"\n    },\n    actions: {\n      selectFocusedTab({ context, prop }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const focusedValue = context.get(\"focusedValue\");\n          if (!focusedValue) return;\n          const nullable = prop(\"deselectable\") && context.get(\"value\") === focusedValue;\n          const value = nullable ? null : focusedValue;\n          context.set(\"value\", value);\n        });\n      },\n      setFocusedValue({ context, event, flush }) {\n        if (event.value == null) return;\n        flush(() => {\n          context.set(\"focusedValue\", event.value);\n        });\n      },\n      clearFocusedValue({ context }) {\n        context.set(\"focusedValue\", null);\n      },\n      setValue({ context, event, prop }) {\n        const nullable = prop(\"deselectable\") && context.get(\"value\") === context.get(\"focusedValue\");\n        context.set(\"value\", nullable ? null : event.value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", null);\n      },\n      focusFirstTab({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getFirstTriggerEl(scope)?.focus();\n        });\n      },\n      focusLastTab({ scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          getLastTriggerEl(scope)?.focus();\n        });\n      },\n      focusNextTab({ context, prop, scope, event }) {\n        const focusedValue = event.value ?? context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getNextTriggerEl(scope, {\n          value: focusedValue,\n          loopFocus: prop(\"loopFocus\")\n        });\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          if (prop(\"composite\")) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            context.set(\"focusedValue\", triggerEl.dataset.value);\n          }\n        });\n      },\n      focusPrevTab({ context, prop, scope, event }) {\n        const focusedValue = event.value ?? context.get(\"focusedValue\");\n        if (!focusedValue) return;\n        const triggerEl = getPrevTriggerEl(scope, {\n          value: focusedValue,\n          loopFocus: prop(\"loopFocus\")\n        });\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          if (prop(\"composite\")) {\n            triggerEl?.focus();\n          } else if (triggerEl?.dataset.value != null) {\n            context.set(\"focusedValue\", triggerEl.dataset.value);\n          }\n        });\n      },\n      syncTabIndex({ context, scope }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const value = context.get(\"value\");\n          if (!value) return;\n          const contentEl = getContentEl(scope, value);\n          if (!contentEl) return;\n          const focusables = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getFocusables)(contentEl);\n          if (focusables.length > 0) {\n            contentEl.removeAttribute(\"tabindex\");\n          } else {\n            contentEl.setAttribute(\"tabindex\", \"0\");\n          }\n        });\n      },\n      cleanupObserver({ refs }) {\n        const cleanup = refs.get(\"indicatorCleanup\");\n        if (cleanup) cleanup();\n      },\n      allowIndicatorTransition({ context }) {\n        context.set(\"indicatorTransition\", true);\n      },\n      setIndicatorRect({ context, event, scope }) {\n        const value = event.id ?? context.get(\"value\");\n        const indicatorEl = getIndicatorEl(scope);\n        if (!indicatorEl) return;\n        if (!value) {\n          context.set(\"indicatorTransition\", false);\n          return;\n        }\n        const triggerEl = getTriggerEl(scope, value);\n        if (!triggerEl) return;\n        context.set(\"indicatorRect\", getRectById(scope, value));\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\n          context.set(\"indicatorTransition\", false);\n        });\n      },\n      syncSsr({ context }) {\n        context.set(\"ssr\", false);\n      },\n      syncIndicatorRect({ context, refs, scope }) {\n        const cleanup = refs.get(\"indicatorCleanup\");\n        if (cleanup) cleanup();\n        const value = context.get(\"value\");\n        if (!value) {\n          context.set(\"indicatorTransition\", false);\n          return;\n        }\n        const triggerEl = getTriggerEl(scope, value);\n        const indicatorEl = getIndicatorEl(scope);\n        if (!triggerEl || !indicatorEl) return;\n        const indicatorCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackElementRect)([triggerEl], {\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            const [rect] = rects;\n            context.set(\"indicatorRect\", resolveRect(rect));\n          }\n        });\n        refs.set(\"indicatorCleanup\", indicatorCleanup);\n      },\n      navigateIfNeeded({ context, prop, scope }) {\n        const value = context.get(\"value\");\n        if (!value) return;\n        const triggerEl = getTriggerEl(scope, value);\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isAnchorElement)(triggerEl)) {\n          prop(\"navigate\")?.({ value, node: triggerEl, href: triggerEl.href });\n        }\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"activationMode\",\n  \"composite\",\n  \"deselectable\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar triggerProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"disabled\", \"value\"]);\nvar splitTriggerProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(triggerProps);\nvar contentProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"value\"]);\nvar splitContentProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(contentProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tabs/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/toast/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/toast/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   createStore: () => (/* binding */ createToastStore),\n/* harmony export */   group: () => (/* binding */ group),\n/* harmony export */   machine: () => (/* binding */ machine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/toast-group.connect.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"toast\").parts(\n  \"group\",\n  \"root\",\n  \"title\",\n  \"description\",\n  \"actionTrigger\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/toast.dom.ts\nvar getRegionId = (placement) => `toast-group:${placement}`;\nvar getRegionEl = (ctx, placement) => ctx.getById(`toast-group:${placement}`);\nvar getRootId = (ctx) => `toast:${ctx.id}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getTitleId = (ctx) => `toast:${ctx.id}:title`;\nvar getDescriptionId = (ctx) => `toast:${ctx.id}:description`;\nvar getCloseTriggerId = (ctx) => `toast${ctx.id}:close`;\nvar defaultTimeouts = {\n  info: 5e3,\n  error: 5e3,\n  success: 2e3,\n  loading: Infinity,\n  DEFAULT: 5e3\n};\nfunction getToastDuration(duration, type) {\n  return duration ?? defaultTimeouts[type] ?? defaultTimeouts.DEFAULT;\n}\nvar getOffsets = (offsets) => typeof offsets === \"string\" ? { left: offsets, right: offsets, bottom: offsets, top: offsets } : offsets;\nfunction getGroupPlacementStyle(service, placement) {\n  const { prop, computed, context } = service;\n  const { offsets, gap } = prop(\"store\").attrs;\n  const heights = context.get(\"heights\");\n  const computedOffset = getOffsets(offsets);\n  const rtl = prop(\"dir\") === \"rtl\";\n  const computedPlacement = placement.replace(\"-start\", rtl ? \"-right\" : \"-left\").replace(\"-end\", rtl ? \"-left\" : \"-right\");\n  const isRighty = computedPlacement.includes(\"right\");\n  const isLefty = computedPlacement.includes(\"left\");\n  const styles = {\n    position: \"fixed\",\n    pointerEvents: computed(\"count\") > 0 ? void 0 : \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"--gap\": `${gap}px`,\n    \"--first-height\": `${heights[0]?.height || 0}px`,\n    zIndex: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.MAX_Z_INDEX\n  };\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  styles.alignItems = alignItems;\n  if (computedPlacement.includes(\"top\")) {\n    const offset = computedOffset.top;\n    styles.top = `max(env(safe-area-inset-top, 0px), ${offset})`;\n  }\n  if (computedPlacement.includes(\"bottom\")) {\n    const offset = computedOffset.bottom;\n    styles.bottom = `max(env(safe-area-inset-bottom, 0px), ${offset})`;\n  }\n  if (!computedPlacement.includes(\"left\")) {\n    const offset = computedOffset.right;\n    styles.insetInlineEnd = `calc(env(safe-area-inset-right, 0px) + ${offset})`;\n  }\n  if (!computedPlacement.includes(\"right\")) {\n    const offset = computedOffset.left;\n    styles.insetInlineStart = `calc(env(safe-area-inset-left, 0px) + ${offset})`;\n  }\n  return styles;\n}\nfunction getPlacementStyle(service, visible) {\n  const { prop, context, computed } = service;\n  const parent = prop(\"parent\");\n  const placement = parent.computed(\"placement\");\n  const { gap } = parent.prop(\"store\").attrs;\n  const [side] = placement.split(\"-\");\n  const mounted = context.get(\"mounted\");\n  const remainingTime = context.get(\"remainingTime\");\n  const height = computed(\"height\");\n  const frontmost = computed(\"frontmost\");\n  const sibling = !frontmost;\n  const overlap = !prop(\"stacked\");\n  const stacked = prop(\"stacked\");\n  const type = prop(\"type\");\n  const duration = type === \"loading\" ? Number.MAX_SAFE_INTEGER : remainingTime;\n  const offset = computed(\"heightIndex\") * gap + computed(\"heightBefore\");\n  const styles = {\n    position: \"absolute\",\n    pointerEvents: \"auto\",\n    \"--opacity\": \"0\",\n    \"--remove-delay\": `${prop(\"removeDelay\")}ms`,\n    \"--duration\": `${duration}ms`,\n    \"--initial-height\": `${height}px`,\n    \"--offset\": `${offset}px`,\n    \"--index\": prop(\"index\"),\n    \"--z-index\": computed(\"zIndex\"),\n    \"--lift-amount\": \"calc(var(--lift) * var(--gap))\",\n    \"--y\": \"100%\",\n    \"--x\": \"0\"\n  };\n  const assign = (overrides) => Object.assign(styles, overrides);\n  if (side === \"top\") {\n    assign({\n      top: \"0\",\n      \"--sign\": \"-1\",\n      \"--y\": \"-100%\",\n      \"--lift\": \"1\"\n    });\n  } else if (side === \"bottom\") {\n    assign({\n      bottom: \"0\",\n      \"--sign\": \"1\",\n      \"--y\": \"100%\",\n      \"--lift\": \"-1\"\n    });\n  }\n  if (mounted) {\n    assign({\n      \"--y\": \"0\",\n      \"--opacity\": \"1\"\n    });\n    if (stacked) {\n      assign({\n        \"--y\": \"calc(var(--lift) * var(--offset))\",\n        \"--height\": \"var(--initial-height)\"\n      });\n    }\n  }\n  if (!visible) {\n    assign({\n      \"--opacity\": \"0\",\n      pointerEvents: \"none\"\n    });\n  }\n  if (sibling && overlap) {\n    assign({\n      \"--base-scale\": \"var(--index) * 0.05 + 1\",\n      \"--y\": \"calc(var(--lift-amount) * var(--index))\",\n      \"--scale\": \"calc(-1 * var(--base-scale))\",\n      \"--height\": \"var(--first-height)\"\n    });\n    if (!visible) {\n      assign({\n        \"--y\": \"calc(var(--sign) * 40%)\"\n      });\n    }\n  }\n  if (sibling && stacked && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * var(--offset) + var(--lift) * -100%)\"\n    });\n  }\n  if (frontmost && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * -100%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostBeforeStyle(service, visible) {\n  const { computed } = service;\n  const styles = {\n    position: \"absolute\",\n    inset: \"0\",\n    scale: \"1 2\",\n    pointerEvents: visible ? \"none\" : \"auto\"\n  };\n  const assign = (overrides) => Object.assign(styles, overrides);\n  if (computed(\"frontmost\") && !visible) {\n    assign({\n      height: \"calc(var(--initial-height) + 80%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostAfterStyle() {\n  return {\n    position: \"absolute\",\n    left: \"0\",\n    height: \"calc(var(--gap) + 2px)\",\n    bottom: \"100%\",\n    width: \"100%\"\n  };\n}\n\n// src/toast-group.connect.ts\nfunction groupConnect(service, normalize) {\n  const { context, prop, send, refs, computed } = service;\n  return {\n    getCount() {\n      return context.get(\"toasts\").length;\n    },\n    getToasts() {\n      return context.get(\"toasts\");\n    },\n    getGroupProps(options = {}) {\n      const { label = \"Notifications\" } = options;\n      const { hotkey } = prop(\"store\").attrs;\n      const hotkeyLabel = hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n      const placement = computed(\"placement\");\n      const [side, align = \"center\"] = placement.split(\"-\");\n      return normalize.element({\n        ...parts.group.attrs,\n        dir: prop(\"dir\"),\n        tabIndex: -1,\n        \"aria-label\": `${placement} ${label} ${hotkeyLabel}`,\n        id: getRegionId(placement),\n        \"data-placement\": placement,\n        \"data-side\": side,\n        \"data-align\": align,\n        \"aria-live\": \"polite\",\n        role: \"region\",\n        style: getGroupPlacementStyle(service, placement),\n        onMouseMove() {\n          send({ type: \"REGION.POINTER_ENTER\", placement });\n        },\n        onMouseLeave() {\n          send({ type: \"REGION.POINTER_LEAVE\", placement });\n        },\n        onFocus(event) {\n          send({ type: \"REGION.FOCUS\", target: event.relatedTarget });\n        },\n        onBlur(event) {\n          if (refs.get(\"isFocusWithin\") && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) {\n            queueMicrotask(() => send({ type: \"REGION.BLUR\" }));\n          }\n        }\n      });\n    },\n    subscribe(fn) {\n      const store = prop(\"store\");\n      return store.subscribe(() => fn(context.get(\"toasts\")));\n    }\n  };\n}\nvar groupMachine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props }) {\n    return {\n      dir: \"ltr\",\n      id: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.uuid)(),\n      ...props,\n      store: props.store\n    };\n  },\n  initialState({ prop }) {\n    return prop(\"store\").attrs.overlap ? \"overlap\" : \"stack\";\n  },\n  refs() {\n    return {\n      lastFocusedEl: null,\n      isFocusWithin: false,\n      dismissableCleanup: void 0\n    };\n  },\n  context({ bindable }) {\n    return {\n      toasts: bindable(() => ({\n        defaultValue: [],\n        sync: true,\n        hash: (toasts) => toasts.map((t) => t.id).join(\",\")\n      })),\n      heights: bindable(() => ({\n        defaultValue: [],\n        sync: true\n      }))\n    };\n  },\n  computed: {\n    count: ({ context }) => context.get(\"toasts\").length,\n    overlap: ({ prop }) => prop(\"store\").attrs.overlap,\n    placement: ({ prop }) => prop(\"store\").attrs.placement\n  },\n  effects: [\"subscribeToStore\", \"trackDocumentVisibility\", \"trackHotKeyPress\"],\n  watch({ track, context, action }) {\n    track([() => context.hash(\"toasts\")], () => {\n      queueMicrotask(() => {\n        action([\"collapsedIfEmpty\", \"setDismissableBranch\"]);\n      });\n    });\n  },\n  exit: [\"clearDismissableBranch\", \"clearLastFocusedEl\"],\n  on: {\n    \"DOC.HOTKEY\": {\n      actions: [\"focusRegionEl\"]\n    },\n    \"REGION.BLUR\": [\n      {\n        guard: \"isOverlapping\",\n        target: \"overlap\",\n        actions: [\"collapseToasts\", \"resumeToasts\", \"restoreLastFocusedEl\"]\n      },\n      {\n        target: \"stack\",\n        actions: [\"resumeToasts\", \"restoreLastFocusedEl\"]\n      }\n    ],\n    \"TOAST.REMOVE\": {\n      actions: [\"removeToast\", \"removeHeight\"]\n    },\n    \"TOAST.PAUSE\": {\n      actions: [\"pauseToasts\"]\n    }\n  },\n  states: {\n    stack: {\n      on: {\n        \"REGION.POINTER_LEAVE\": [\n          {\n            guard: \"isOverlapping\",\n            target: \"overlap\",\n            actions: [\"resumeToasts\", \"collapseToasts\"]\n          },\n          {\n            actions: [\"resumeToasts\"]\n          }\n        ],\n        \"REGION.OVERLAP\": {\n          target: \"overlap\",\n          actions: [\"collapseToasts\"]\n        },\n        \"REGION.FOCUS\": {\n          actions: [\"setLastFocusedEl\", \"pauseToasts\"]\n        },\n        \"REGION.POINTER_ENTER\": {\n          actions: [\"pauseToasts\"]\n        }\n      }\n    },\n    overlap: {\n      on: {\n        \"REGION.STACK\": {\n          target: \"stack\",\n          actions: [\"expandToasts\"]\n        },\n        \"REGION.POINTER_ENTER\": {\n          target: \"stack\",\n          actions: [\"pauseToasts\", \"expandToasts\"]\n        },\n        \"REGION.FOCUS\": {\n          target: \"stack\",\n          actions: [\"setLastFocusedEl\", \"pauseToasts\", \"expandToasts\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOverlapping: ({ computed }) => computed(\"overlap\")\n    },\n    effects: {\n      subscribeToStore({ context, prop }) {\n        return prop(\"store\").subscribe((toast) => {\n          if (toast.dismiss) {\n            context.set(\"toasts\", (prev) => prev.filter((t) => t.id !== toast.id));\n            return;\n          }\n          context.set(\"toasts\", (prev) => {\n            const index = prev.findIndex((t) => t.id === toast.id);\n            if (index !== -1) {\n              return [...prev.slice(0, index), { ...prev[index], ...toast }, ...prev.slice(index + 1)];\n            }\n            return [toast, ...prev];\n          });\n        });\n      },\n      trackHotKeyPress({ prop, send }) {\n        const handleKeyDown = (event) => {\n          const { hotkey } = prop(\"store\").attrs;\n          const isHotkeyPressed = hotkey.every((key) => event[key] || event.code === key);\n          if (!isHotkeyPressed) return;\n          send({ type: \"DOC.HOTKEY\" });\n        };\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(document, \"keydown\", handleKeyDown, { capture: true });\n      },\n      trackDocumentVisibility({ prop, send, scope }) {\n        const { pauseOnPageIdle } = prop(\"store\").attrs;\n        if (!pauseOnPageIdle) return;\n        const doc = scope.getDoc();\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"visibilitychange\", () => {\n          const isHidden = doc.visibilityState === \"hidden\";\n          send({ type: isHidden ? \"PAUSE_ALL\" : \"RESUME_ALL\" });\n        });\n      }\n    },\n    actions: {\n      setDismissableBranch({ refs, context, computed, scope }) {\n        const toasts = context.get(\"toasts\");\n        const placement = computed(\"placement\");\n        const hasToasts = toasts.length > 0;\n        if (!hasToasts) {\n          refs.get(\"dismissableCleanup\")?.();\n          return;\n        }\n        if (hasToasts && refs.get(\"dismissableCleanup\")) {\n          return;\n        }\n        const groupEl = () => getRegionEl(scope, placement);\n        const cleanup = (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__.trackDismissableBranch)(groupEl, { defer: true });\n        refs.set(\"dismissableCleanup\", cleanup);\n      },\n      clearDismissableBranch({ refs }) {\n        refs.get(\"dismissableCleanup\")?.();\n      },\n      focusRegionEl({ scope, computed }) {\n        queueMicrotask(() => {\n          getRegionEl(scope, computed(\"placement\"))?.focus();\n        });\n      },\n      pauseToasts({ prop }) {\n        prop(\"store\").pause();\n      },\n      resumeToasts({ prop }) {\n        prop(\"store\").resume();\n      },\n      expandToasts({ prop }) {\n        prop(\"store\").expand();\n      },\n      collapseToasts({ prop }) {\n        prop(\"store\").collapse();\n      },\n      removeToast({ prop, event }) {\n        prop(\"store\").remove(event.id);\n      },\n      removeHeight({ event, context }) {\n        if (event?.id == null) return;\n        queueMicrotask(() => {\n          context.set(\"heights\", (heights) => heights.filter((height) => height.id !== event.id));\n        });\n      },\n      collapsedIfEmpty({ send, computed }) {\n        if (!computed(\"overlap\") || computed(\"count\") > 1) return;\n        send({ type: \"REGION.OVERLAP\" });\n      },\n      setLastFocusedEl({ refs, event }) {\n        if (refs.get(\"isFocusWithin\") || !event.target) return;\n        refs.set(\"isFocusWithin\", true);\n        refs.set(\"lastFocusedEl\", event.target);\n      },\n      restoreLastFocusedEl({ refs }) {\n        if (!refs.get(\"lastFocusedEl\")) return;\n        refs.get(\"lastFocusedEl\")?.focus({ preventScroll: true });\n        refs.set(\"lastFocusedEl\", null);\n        refs.set(\"isFocusWithin\", false);\n      },\n      clearLastFocusedEl({ refs }) {\n        if (!refs.get(\"lastFocusedEl\")) return;\n        refs.get(\"lastFocusedEl\")?.focus({ preventScroll: true });\n        refs.set(\"lastFocusedEl\", null);\n        refs.set(\"isFocusWithin\", false);\n      }\n    }\n  }\n});\nfunction connect(service, normalize) {\n  const { state, send, prop, scope, context, computed } = service;\n  const visible = state.hasTag(\"visible\");\n  const paused = state.hasTag(\"paused\");\n  const mounted = context.get(\"mounted\");\n  const frontmost = computed(\"frontmost\");\n  const placement = prop(\"parent\").computed(\"placement\");\n  const type = prop(\"type\");\n  const stacked = prop(\"stacked\");\n  const title = prop(\"title\");\n  const description = prop(\"description\");\n  const action = prop(\"action\");\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return {\n    type,\n    title,\n    description,\n    placement,\n    visible,\n    paused,\n    closable: !!prop(\"closable\"),\n    pause() {\n      send({ type: \"PAUSE\" });\n    },\n    resume() {\n      send({ type: \"RESUME\" });\n    },\n    dismiss() {\n      send({ type: \"DISMISS\", src: \"programmatic\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        \"data-state\": visible ? \"open\" : \"closed\",\n        \"data-type\": type,\n        \"data-placement\": placement,\n        \"data-align\": align,\n        \"data-side\": side,\n        \"data-mounted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(mounted),\n        \"data-paused\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(paused),\n        \"data-first\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(frontmost),\n        \"data-sibling\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!frontmost),\n        \"data-stack\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(stacked),\n        \"data-overlap\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(!stacked),\n        role: \"status\",\n        \"aria-atomic\": \"true\",\n        \"aria-describedby\": description ? getDescriptionId(scope) : void 0,\n        \"aria-labelledby\": title ? getTitleId(scope) : void 0,\n        tabIndex: 0,\n        style: getPlacementStyle(service, visible),\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key == \"Escape\") {\n            send({ type: \"DISMISS\", src: \"keyboard\" });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    /* Leave a ghost div to avoid setting hover to false when transitioning out */\n    getGhostBeforeProps() {\n      return normalize.element({\n        \"data-ghost\": \"before\",\n        style: getGhostBeforeStyle(service, visible)\n      });\n    },\n    /* Needed to avoid setting hover to false when in between toasts */\n    getGhostAfterProps() {\n      return normalize.element({\n        \"data-ghost\": \"after\",\n        style: getGhostAfterStyle()\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: getDescriptionId(scope)\n      });\n    },\n    getActionTriggerProps() {\n      return normalize.button({\n        ...parts.actionTrigger.attrs,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          action?.onClick?.();\n          send({ type: \"DISMISS\", src: \"user\" });\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        id: getCloseTriggerId(scope),\n        ...parts.closeTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": \"Dismiss notification\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DISMISS\", src: \"user\" });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props }) {\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.ensureProps)(props, [\"id\", \"type\", \"parent\", \"removeDelay\"], \"toast\");\n    return {\n      closable: true,\n      ...props,\n      duration: getToastDuration(props.duration, props.type)\n    };\n  },\n  initialState({ prop }) {\n    const persist = prop(\"type\") === \"loading\" || prop(\"duration\") === Infinity;\n    return persist ? \"visible:persist\" : \"visible\";\n  },\n  context({ prop, bindable }) {\n    return {\n      remainingTime: bindable(() => ({\n        defaultValue: getToastDuration(prop(\"duration\"), prop(\"type\"))\n      })),\n      createdAt: bindable(() => ({\n        defaultValue: Date.now()\n      })),\n      mounted: bindable(() => ({\n        defaultValue: false\n      })),\n      initialHeight: bindable(() => ({\n        defaultValue: 0\n      }))\n    };\n  },\n  refs() {\n    return {\n      closeTimerStartTime: Date.now(),\n      lastCloseStartTimerStartTime: 0\n    };\n  },\n  computed: {\n    zIndex: ({ prop }) => {\n      const toasts = prop(\"parent\").context.get(\"toasts\");\n      const index = toasts.findIndex((toast) => toast.id === prop(\"id\"));\n      return toasts.length - index;\n    },\n    height: ({ prop }) => {\n      const heights = prop(\"parent\").context.get(\"heights\");\n      const height = heights.find((height2) => height2.id === prop(\"id\"));\n      return height?.height ?? 0;\n    },\n    heightIndex: ({ prop }) => {\n      const heights = prop(\"parent\").context.get(\"heights\");\n      return heights.findIndex((height) => height.id === prop(\"id\"));\n    },\n    frontmost: ({ prop }) => prop(\"index\") === 0,\n    heightBefore: ({ prop }) => {\n      const heights = prop(\"parent\").context.get(\"heights\");\n      const heightIndex = heights.findIndex((height) => height.id === prop(\"id\"));\n      return heights.reduce((prev, curr, reducerIndex) => {\n        if (reducerIndex >= heightIndex) return prev;\n        return prev + curr.height;\n      }, 0);\n    },\n    shouldPersist: ({ prop }) => prop(\"type\") === \"loading\" || prop(\"duration\") === Infinity\n  },\n  watch({ track, prop, send }) {\n    track([() => prop(\"message\")], () => {\n      const message = prop(\"message\");\n      if (message) send({ type: message, src: \"programmatic\" });\n    });\n    track([() => prop(\"type\"), () => prop(\"duration\")], () => {\n      send({ type: \"UPDATE\" });\n    });\n  },\n  on: {\n    UPDATE: [\n      {\n        guard: \"shouldPersist\",\n        target: \"visible:persist\",\n        actions: [\"resetCloseTimer\"]\n      },\n      {\n        target: \"visible:updating\",\n        actions: [\"resetCloseTimer\"]\n      }\n    ],\n    MEASURE: {\n      actions: [\"measureHeight\"]\n    }\n  },\n  entry: [\"setMounted\", \"measureHeight\", \"invokeOnVisible\"],\n  effects: [\"trackHeight\"],\n  states: {\n    \"visible:updating\": {\n      tags: [\"visible\", \"updating\"],\n      effects: [\"waitForNextTick\"],\n      on: {\n        SHOW: {\n          target: \"visible\"\n        }\n      }\n    },\n    \"visible:persist\": {\n      tags: [\"visible\", \"paused\"],\n      on: {\n        RESUME: {\n          guard: not(\"isLoadingType\"),\n          target: \"visible\",\n          actions: [\"setCloseTimer\"]\n        },\n        DISMISS: {\n          target: \"dismissing\"\n        }\n      }\n    },\n    visible: {\n      tags: [\"visible\"],\n      effects: [\"waitForDuration\"],\n      on: {\n        DISMISS: {\n          target: \"dismissing\"\n        },\n        PAUSE: {\n          target: \"visible:persist\",\n          actions: [\"syncRemainingTime\"]\n        }\n      }\n    },\n    dismissing: {\n      entry: [\"invokeOnDismiss\"],\n      effects: [\"waitForRemoveDelay\"],\n      on: {\n        REMOVE: {\n          target: \"unmounted\",\n          actions: [\"notifyParentToRemove\"]\n        }\n      }\n    },\n    unmounted: {\n      entry: [\"invokeOnUnmount\"]\n    }\n  },\n  implementations: {\n    effects: {\n      waitForRemoveDelay({ prop, send }) {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.setRafTimeout)(() => {\n          send({ type: \"REMOVE\", src: \"timer\" });\n        }, prop(\"removeDelay\"));\n      },\n      waitForDuration({ send, context, computed }) {\n        if (computed(\"shouldPersist\")) return;\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.setRafTimeout)(() => {\n          send({ type: \"DISMISS\", src: \"timer\" });\n        }, context.get(\"remainingTime\"));\n      },\n      waitForNextTick({ send }) {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.setRafTimeout)(() => {\n          send({ type: \"SHOW\", src: \"timer\" });\n        }, 0);\n      },\n      trackHeight({ scope, prop }) {\n        let cleanup;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const rootEl = getRootEl(scope);\n          if (!rootEl) return;\n          const syncHeight = () => {\n            const originalHeight = rootEl.style.height;\n            rootEl.style.height = \"auto\";\n            const height = rootEl.getBoundingClientRect().height;\n            rootEl.style.height = originalHeight;\n            const item = { id: prop(\"id\"), height };\n            setHeight(prop(\"parent\"), item);\n          };\n          const win = scope.getWin();\n          const observer = new win.MutationObserver(syncHeight);\n          observer.observe(rootEl, {\n            childList: true,\n            subtree: true,\n            characterData: true\n          });\n          cleanup = () => observer.disconnect();\n        });\n        return () => cleanup?.();\n      }\n    },\n    guards: {\n      isLoadingType: ({ prop }) => prop(\"type\") === \"loading\",\n      shouldPersist: ({ computed }) => computed(\"shouldPersist\")\n    },\n    actions: {\n      setMounted({ context }) {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          context.set(\"mounted\", true);\n        });\n      },\n      measureHeight({ scope, prop, context }) {\n        queueMicrotask(() => {\n          const rootEl = getRootEl(scope);\n          if (!rootEl) return;\n          const originalHeight = rootEl.style.height;\n          rootEl.style.height = \"auto\";\n          const height = rootEl.getBoundingClientRect().height;\n          rootEl.style.height = originalHeight;\n          context.set(\"initialHeight\", height);\n          const item = { id: prop(\"id\"), height };\n          setHeight(prop(\"parent\"), item);\n        });\n      },\n      setCloseTimer({ refs }) {\n        refs.set(\"closeTimerStartTime\", Date.now());\n      },\n      resetCloseTimer({ context, refs, prop }) {\n        refs.set(\"closeTimerStartTime\", Date.now());\n        context.set(\"remainingTime\", getToastDuration(prop(\"duration\"), prop(\"type\")));\n      },\n      syncRemainingTime({ context, refs }) {\n        context.set(\"remainingTime\", (prev) => {\n          const closeTimerStartTime = refs.get(\"closeTimerStartTime\");\n          const elapsedTime = Date.now() - closeTimerStartTime;\n          refs.set(\"lastCloseStartTimerStartTime\", Date.now());\n          return prev - elapsedTime;\n        });\n      },\n      notifyParentToRemove({ prop }) {\n        const parent = prop(\"parent\");\n        parent.send({ type: \"TOAST.REMOVE\", id: prop(\"id\") });\n      },\n      invokeOnDismiss({ prop, event }) {\n        prop(\"onStatusChange\")?.({ status: \"dismissing\", src: event.src });\n      },\n      invokeOnUnmount({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"unmounted\" });\n      },\n      invokeOnVisible({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"visible\" });\n      }\n    }\n  }\n});\nfunction setHeight(parent, item) {\n  const { id, height } = item;\n  parent.context.set(\"heights\", (prev) => {\n    const alreadyExists = prev.find((i) => i.id === id);\n    if (!alreadyExists) {\n      return [{ id, height }, ...prev];\n    } else {\n      return prev.map((i) => i.id === id ? { ...i, height } : i);\n    }\n  });\n}\nvar withDefaults = (options, defaults) => {\n  return { ...defaults, ...(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.compact)(options) };\n};\nfunction createToastStore(props) {\n  const attrs = withDefaults(props, {\n    placement: \"bottom\",\n    overlap: false,\n    max: 24,\n    gap: 16,\n    offsets: \"1rem\",\n    hotkey: [\"altKey\", \"KeyT\"],\n    removeDelay: 200,\n    pauseOnPageIdle: true\n  });\n  let subscribers = [];\n  let toasts = [];\n  let dismissedToasts = /* @__PURE__ */ new Set();\n  let toastQueue = [];\n  const subscribe = (subscriber) => {\n    subscribers.push(subscriber);\n    return () => {\n      const index = subscribers.indexOf(subscriber);\n      subscribers.splice(index, 1);\n    };\n  };\n  const publish = (data) => {\n    subscribers.forEach((subscriber) => subscriber(data));\n    return data;\n  };\n  const addToast = (data) => {\n    if (toasts.length >= attrs.max) {\n      toastQueue.push(data);\n      return;\n    }\n    publish(data);\n    toasts.unshift(data);\n  };\n  const processQueue = () => {\n    while (toastQueue.length > 0 && toasts.length < attrs.max) {\n      const nextToast = toastQueue.shift();\n      if (nextToast) {\n        publish(nextToast);\n        toasts.unshift(nextToast);\n      }\n    }\n  };\n  const create = (data) => {\n    const id = data.id ?? `toast:${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.uuid)()}`;\n    const exists = toasts.find((toast) => toast.id === id);\n    if (dismissedToasts.has(id)) dismissedToasts.delete(id);\n    if (exists) {\n      toasts = toasts.map((toast) => {\n        if (toast.id === id) {\n          return publish({ ...toast, ...data, id });\n        }\n        return toast;\n      });\n    } else {\n      addToast({\n        id,\n        duration: attrs.duration,\n        removeDelay: attrs.removeDelay,\n        type: \"info\",\n        ...data,\n        stacked: !attrs.overlap,\n        gap: attrs.gap\n      });\n    }\n    return id;\n  };\n  const remove = (id) => {\n    dismissedToasts.add(id);\n    if (!id) {\n      toasts.forEach((toast) => {\n        subscribers.forEach((subscriber) => subscriber({ id: toast.id, dismiss: true }));\n      });\n      toasts = [];\n      toastQueue = [];\n    } else {\n      subscribers.forEach((subscriber) => subscriber({ id, dismiss: true }));\n      toasts = toasts.filter((toast) => toast.id !== id);\n      processQueue();\n    }\n    return id;\n  };\n  const error = (data) => {\n    return create({ ...data, type: \"error\" });\n  };\n  const success = (data) => {\n    return create({ ...data, type: \"success\" });\n  };\n  const info = (data) => {\n    return create({ ...data, type: \"info\" });\n  };\n  const warning = (data) => {\n    return create({ ...data, type: \"warning\" });\n  };\n  const loading = (data) => {\n    return create({ ...data, type: \"loading\" });\n  };\n  const getVisibleToasts = () => {\n    return toasts.filter((toast) => !dismissedToasts.has(toast.id));\n  };\n  const getCount = () => {\n    return toasts.length;\n  };\n  const promise = (promise2, options, shared = {}) => {\n    if (!options || !options.loading) {\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.warn)(\"[zag-js > toast] toaster.promise() requires at least a 'loading' option to be specified\");\n      return;\n    }\n    const id = create({\n      ...shared,\n      ...options.loading,\n      promise: promise2,\n      type: \"loading\"\n    });\n    let removable = true;\n    let result;\n    const prom = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(promise2).then(async (response) => {\n      result = [\"resolve\", response];\n      if (isHttpResponse(response) && !response.ok) {\n        removable = false;\n        const errorOptions = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(options.error, `HTTP Error! status: ${response.status}`);\n        create({ ...shared, ...errorOptions, id, type: \"error\" });\n      } else if (options.success !== void 0) {\n        removable = false;\n        const successOptions = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(options.success, response);\n        create({ ...shared, ...successOptions, id, type: \"success\" });\n      }\n    }).catch(async (error2) => {\n      result = [\"reject\", error2];\n      if (options.error !== void 0) {\n        removable = false;\n        const errorOptions = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.runIfFn)(options.error, error2);\n        create({ ...shared, ...errorOptions, id, type: \"error\" });\n      }\n    }).finally(() => {\n      if (removable) {\n        remove(id);\n      }\n      options.finally?.();\n    });\n    const unwrap = () => new Promise(\n      (resolve, reject) => prom.then(() => result[0] === \"reject\" ? reject(result[1]) : resolve(result[1])).catch(reject)\n    );\n    return { id, unwrap };\n  };\n  const update = (id, data) => {\n    return create({ id, ...data });\n  };\n  const pause = (id) => {\n    if (id != null) {\n      toasts = toasts.map((toast) => {\n        if (toast.id === id) return publish({ ...toast, message: \"PAUSE\" });\n        return toast;\n      });\n    } else {\n      toasts = toasts.map((toast) => publish({ ...toast, message: \"PAUSE\" }));\n    }\n  };\n  const resume = (id) => {\n    if (id != null) {\n      toasts = toasts.map((toast) => {\n        if (toast.id === id) return publish({ ...toast, message: \"RESUME\" });\n        return toast;\n      });\n    } else {\n      toasts = toasts.map((toast) => publish({ ...toast, message: \"RESUME\" }));\n    }\n  };\n  const dismiss = (id) => {\n    if (id != null) {\n      toasts = toasts.map((toast) => {\n        if (toast.id === id) return publish({ ...toast, message: \"DISMISS\" });\n        return toast;\n      });\n    } else {\n      toasts = toasts.map((toast) => publish({ ...toast, message: \"DISMISS\" }));\n    }\n  };\n  const isVisible = (id) => {\n    return !dismissedToasts.has(id) && !!toasts.find((toast) => toast.id === id);\n  };\n  const isDismissed = (id) => {\n    return dismissedToasts.has(id);\n  };\n  const expand = () => {\n    toasts = toasts.map((toast) => publish({ ...toast, stacked: true }));\n  };\n  const collapse = () => {\n    toasts = toasts.map((toast) => publish({ ...toast, stacked: false }));\n  };\n  return {\n    attrs,\n    subscribe,\n    create,\n    update,\n    remove,\n    dismiss,\n    error,\n    success,\n    info,\n    warning,\n    loading,\n    getVisibleToasts,\n    getCount,\n    promise,\n    pause,\n    resume,\n    isVisible,\n    isDismissed,\n    expand,\n    collapse\n  };\n}\nvar isHttpResponse = (data) => {\n  return data && typeof data === \"object\" && \"ok\" in data && typeof data.ok === \"boolean\" && \"status\" in data && typeof data.status === \"number\";\n};\n\n// src/index.ts\nvar group = {\n  connect: groupConnect,\n  machine: groupMachine\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/toast/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/toggle/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/toggle/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n// src/toggle.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"toggle\", [\"root\", \"indicator\"]);\nvar parts = anatomy.build();\nfunction connect(service, normalize) {\n  const { context, prop, send } = service;\n  const pressed = context.get(\"pressed\");\n  return {\n    pressed,\n    disabled: !!prop(\"disabled\"),\n    setPressed(value) {\n      send({ type: \"PRESS.SET\", value });\n    },\n    getRootProps() {\n      return normalize.element({\n        type: \"button\",\n        ...parts.root.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-pressed\": pressed,\n        \"data-state\": pressed ? \"on\" : \"off\",\n        \"data-pressed\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(pressed),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"PRESS.TOGGLE\" });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(prop(\"disabled\")),\n        \"data-pressed\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(pressed),\n        \"data-state\": pressed ? \"on\" : \"off\"\n      });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      defaultPressed: false,\n      ...props2\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      pressed: bindable(() => ({\n        value: prop(\"pressed\"),\n        defaultValue: prop(\"defaultPressed\"),\n        onChange(value) {\n          prop(\"onPressedChange\")?.(value);\n        }\n      }))\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  on: {\n    \"PRESS.TOGGLE\": {\n      actions: [\"togglePressed\"]\n    },\n    \"PRESS.SET\": {\n      actions: [\"setPressed\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    actions: {\n      togglePressed({ context }) {\n        context.set(\"pressed\", !context.get(\"pressed\"));\n      },\n      setPressed({ context, event }) {\n        context.set(\"pressed\", event.value);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_3__.createProps)()([\"defaultPressed\", \"pressed\", \"onPressedChange\", \"disabled\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90b2dnbGUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUNIO0FBQ0E7QUFDRDtBQUNLOztBQUVqRDtBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQTtBQUNBLFVBQVUsc0JBQXNCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQVE7QUFDaEMseUJBQXlCLDJEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx3QkFBd0IsMkRBQVE7QUFDaEM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBYTtBQUMzQixVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0EsT0FBTztBQUNQLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSwwREFBVztBQUN2QixpQkFBaUIsK0RBQWdCOztBQUV1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvdG9nZ2xlL2Rpc3QvaW5kZXgubWpzP2I0NGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQW5hdG9teSB9IGZyb20gJ0B6YWctanMvYW5hdG9teSc7XG5pbXBvcnQgeyBkYXRhQXR0ciB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGNyZWF0ZU1hY2hpbmUgfSBmcm9tICdAemFnLWpzL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcbmltcG9ydCB7IGNyZWF0ZVNwbGl0UHJvcHMgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcblxuLy8gc3JjL3RvZ2dsZS5hbmF0b215LnRzXG52YXIgYW5hdG9teSA9IGNyZWF0ZUFuYXRvbXkoXCJ0b2dnbGVcIiwgW1wicm9vdFwiLCBcImluZGljYXRvclwiXSk7XG52YXIgcGFydHMgPSBhbmF0b215LmJ1aWxkKCk7XG5mdW5jdGlvbiBjb25uZWN0KHNlcnZpY2UsIG5vcm1hbGl6ZSkge1xuICBjb25zdCB7IGNvbnRleHQsIHByb3AsIHNlbmQgfSA9IHNlcnZpY2U7XG4gIGNvbnN0IHByZXNzZWQgPSBjb250ZXh0LmdldChcInByZXNzZWRcIik7XG4gIHJldHVybiB7XG4gICAgcHJlc3NlZCxcbiAgICBkaXNhYmxlZDogISFwcm9wKFwiZGlzYWJsZWRcIiksXG4gICAgc2V0UHJlc3NlZCh2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiUFJFU1MuU0VUXCIsIHZhbHVlIH0pO1xuICAgIH0sXG4gICAgZ2V0Um9vdFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgdHlwZTogXCJidXR0b25cIixcbiAgICAgICAgLi4ucGFydHMucm9vdC5hdHRycyxcbiAgICAgICAgZGlzYWJsZWQ6IHByb3AoXCJkaXNhYmxlZFwiKSxcbiAgICAgICAgXCJhcmlhLXByZXNzZWRcIjogcHJlc3NlZCxcbiAgICAgICAgXCJkYXRhLXN0YXRlXCI6IHByZXNzZWQgPyBcIm9uXCIgOiBcIm9mZlwiLFxuICAgICAgICBcImRhdGEtcHJlc3NlZFwiOiBkYXRhQXR0cihwcmVzc2VkKSxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKHByb3AoXCJkaXNhYmxlZFwiKSksXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChwcm9wKFwiZGlzYWJsZWRcIikpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJQUkVTUy5UT0dHTEVcIiB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJbmRpY2F0b3JQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmluZGljYXRvci5hdHRycyxcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKHByb3AoXCJkaXNhYmxlZFwiKSksXG4gICAgICAgIFwiZGF0YS1wcmVzc2VkXCI6IGRhdGFBdHRyKHByZXNzZWQpLFxuICAgICAgICBcImRhdGEtc3RhdGVcIjogcHJlc3NlZCA/IFwib25cIiA6IFwib2ZmXCJcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbnZhciBtYWNoaW5lID0gY3JlYXRlTWFjaGluZSh7XG4gIHByb3BzKHsgcHJvcHM6IHByb3BzMiB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRlZmF1bHRQcmVzc2VkOiBmYWxzZSxcbiAgICAgIC4uLnByb3BzMlxuICAgIH07XG4gIH0sXG4gIGNvbnRleHQoeyBwcm9wLCBiaW5kYWJsZSB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHByZXNzZWQ6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIHZhbHVlOiBwcm9wKFwicHJlc3NlZFwiKSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBwcm9wKFwiZGVmYXVsdFByZXNzZWRcIiksXG4gICAgICAgIG9uQ2hhbmdlKHZhbHVlKSB7XG4gICAgICAgICAgcHJvcChcIm9uUHJlc3NlZENoYW5nZVwiKT8uKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSkpXG4gICAgfTtcbiAgfSxcbiAgaW5pdGlhbFN0YXRlKCkge1xuICAgIHJldHVybiBcImlkbGVcIjtcbiAgfSxcbiAgb246IHtcbiAgICBcIlBSRVNTLlRPR0dMRVwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJ0b2dnbGVQcmVzc2VkXCJdXG4gICAgfSxcbiAgICBcIlBSRVNTLlNFVFwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJzZXRQcmVzc2VkXCJdXG4gICAgfVxuICB9LFxuICBzdGF0ZXM6IHtcbiAgICBpZGxlOiB7fVxuICB9LFxuICBpbXBsZW1lbnRhdGlvbnM6IHtcbiAgICBhY3Rpb25zOiB7XG4gICAgICB0b2dnbGVQcmVzc2VkKHsgY29udGV4dCB9KSB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwicHJlc3NlZFwiLCAhY29udGV4dC5nZXQoXCJwcmVzc2VkXCIpKTtcbiAgICAgIH0sXG4gICAgICBzZXRQcmVzc2VkKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcInByZXNzZWRcIiwgZXZlbnQudmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG52YXIgcHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcImRlZmF1bHRQcmVzc2VkXCIsIFwicHJlc3NlZFwiLCBcIm9uUHJlc3NlZENoYW5nZVwiLCBcImRpc2FibGVkXCJdKTtcbnZhciBzcGxpdFByb3BzID0gY3JlYXRlU3BsaXRQcm9wcyhwcm9wcyk7XG5cbmV4cG9ydCB7IGFuYXRvbXksIGNvbm5lY3QsIG1hY2hpbmUsIHByb3BzLCBzcGxpdFByb3BzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/toggle/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/tooltip/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/tooltip.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/tooltip.dom.ts\nvar getTriggerId = (scope) => scope.ids?.trigger ?? `tooltip:${scope.id}:trigger`;\nvar getContentId = (scope) => scope.ids?.content ?? `tooltip:${scope.id}:content`;\nvar getArrowId = (scope) => scope.ids?.arrow ?? `tooltip:${scope.id}:arrow`;\nvar getPositionerId = (scope) => scope.ids?.positioner ?? `tooltip:${scope.id}:popper`;\nvar getTriggerEl = (scope) => scope.getById(getTriggerId(scope));\nvar getPositionerEl = (scope) => scope.getById(getPositionerId(scope));\nvar store = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createStore)({ id: null });\n\n// src/tooltip.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, scope, prop, event: _event } = service;\n  const id = prop(\"id\");\n  const hasAriaLabel = !!prop(\"aria-label\");\n  const open = state.matches(\"open\", \"closing\");\n  const triggerId = getTriggerId(scope);\n  const contentId = getContentId(scope);\n  const disabled = prop(\"disabled\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\", \"closing\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"open\" : \"close\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"positioning.set\", options });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: prop(\"dir\"),\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnClick\")) return;\n          send({ type: \"close\", src: \"trigger.click\" });\n        },\n        onFocus(event) {\n          queueMicrotask(() => {\n            if (event.defaultPrevented) return;\n            if (disabled) return;\n            if (_event.src === \"trigger.pointerdown\") return;\n            if (!(0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.isFocusVisible)()) return;\n            send({ type: \"open\", src: \"trigger.focus\" });\n          });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.get(\"id\")) {\n            send({ type: \"close\", src: \"trigger.blur\" });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isLeftClick)(event)) return;\n          if (!prop(\"closeOnPointerDown\")) return;\n          if (id === store.get(\"id\")) {\n            send({ type: \"close\", src: \"trigger.pointerdown\" });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"pointer.move\" });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter() {\n          send({ type: \"content.pointer.move\" });\n        },\n        onPointerLeave() {\n          send({ type: \"content.pointer.leave\" });\n        },\n        style: {\n          pointerEvents: prop(\"interactive\") ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar { and, not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)({\n  initialState: ({ prop }) => {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  props({ props: props2 }) {\n    const closeOnClick = props2.closeOnClick ?? true;\n    const closeOnPointerDown = props2.closeOnPointerDown ?? closeOnClick;\n    return {\n      id: \"x\",\n      openDelay: 1e3,\n      closeDelay: 500,\n      closeOnEscape: true,\n      interactive: false,\n      closeOnScroll: true,\n      disabled: false,\n      ...props2,\n      closeOnPointerDown,\n      closeOnClick,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  effects: [\"trackFocusVisible\", \"trackStore\"],\n  context: ({ bindable }) => ({\n    currentPlacement: bindable(() => ({ defaultValue: void 0 })),\n    hasPointerMoveOpened: bindable(() => ({ defaultValue: false }))\n  }),\n  watch({ track, action, prop }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"closeIfDisabled\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      entry: [\"clearGlobalId\"],\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": {\n          actions: [\"clearPointerMoveOpened\"]\n        },\n        \"pointer.move\": [\n          {\n            guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n            target: \"opening\"\n          },\n          {\n            guard: not(\"hasPointerMoveOpened\"),\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    opening: {\n      effects: [\"trackScroll\", \"trackPointerlockChange\", \"waitForOpenDelay\"],\n      on: {\n        \"after.openDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    open: {\n      effects: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n      entry: [\"setGlobalId\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isVisible\",\n            target: \"closing\",\n            actions: [\"clearPointerMoveOpened\"]\n          },\n          // == group ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        \"content.pointer.leave\": {\n          guard: \"isInteractive\",\n          target: \"closing\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        \"after.closeDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.move\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"content.pointer.move\": {\n          guard: \"isInteractive\",\n          target: \"open\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      noVisibleTooltip: () => store.get(\"id\") === null,\n      isVisible: ({ prop }) => prop(\"id\") === store.get(\"id\"),\n      isInteractive: ({ prop }) => !!prop(\"interactive\"),\n      hasPointerMoveOpened: ({ context }) => context.get(\"hasPointerMoveOpened\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0\n    },\n    actions: {\n      setGlobalId: ({ prop }) => {\n        store.set(\"id\", prop(\"id\"));\n      },\n      clearGlobalId: ({ prop }) => {\n        if (prop(\"id\") === store.get(\"id\")) {\n          store.set(\"id\", null);\n        }\n      },\n      invokeOnOpen: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      closeIfDisabled: ({ prop, send }) => {\n        if (!prop(\"disabled\")) return;\n        send({ type: \"close\", src: \"disabled.change\" });\n      },\n      reposition: ({ context, event, prop, scope }) => {\n        if (event.type !== \"positioning.set\") return;\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility: ({ prop, event, send }) => {\n        queueMicrotask(() => {\n          send({\n            type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\",\n            previousEvent: event\n          });\n        });\n      },\n      setPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", true);\n      },\n      clearPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", false);\n      }\n    },\n    effects: {\n      trackFocusVisible: ({ scope }) => {\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      },\n      trackPositioning: ({ context, prop, scope }) => {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackPointerlockChange: ({ send, scope }) => {\n        const doc = scope.getDoc();\n        const onChange = () => send({ type: \"close\", src: \"pointerlock:change\" });\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(doc, \"pointerlockchange\", onChange, false);\n      },\n      trackScroll: ({ send, prop, scope }) => {\n        if (!prop(\"closeOnScroll\")) return;\n        const triggerEl = getTriggerEl(scope);\n        if (!triggerEl) return;\n        const overflowParents = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getOverflowAncestors)(triggerEl);\n        const cleanups = overflowParents.map((overflowParent) => {\n          const onScroll = () => {\n            send({ type: \"close\", src: \"scroll\" });\n          };\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(overflowParent, \"scroll\", onScroll, {\n            passive: true,\n            capture: true\n          });\n        });\n        return () => {\n          cleanups.forEach((fn) => fn?.());\n        };\n      },\n      trackStore: ({ prop, send }) => {\n        let cleanup;\n        queueMicrotask(() => {\n          cleanup = store.subscribe(() => {\n            if (store.get(\"id\") !== prop(\"id\")) {\n              send({ type: \"close\", src: \"id.change\" });\n            }\n          });\n        });\n        return () => cleanup?.();\n      },\n      trackEscapeKey: ({ send, prop }) => {\n        if (!prop(\"closeOnEscape\")) return;\n        const onKeyDown = (event) => {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isComposingEvent)(event)) return;\n          if (event.key !== \"Escape\") return;\n          event.stopPropagation();\n          send({ type: \"close\", src: \"keydown.escape\" });\n        };\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.addDomEvent)(document, \"keydown\", onKeyDown, true);\n      },\n      waitForOpenDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.openDelay\" });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.closeDelay\" });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"aria-label\",\n  \"closeDelay\",\n  \"closeOnEscape\",\n  \"closeOnPointerDown\",\n  \"closeOnScroll\",\n  \"closeOnClick\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"interactive\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tree-view/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/tree-view/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   filePathCollection: () => (/* binding */ filePathCollection),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/tree-view.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tree-view\").parts(\n  \"branch\",\n  \"branchContent\",\n  \"branchControl\",\n  \"branchIndentGuide\",\n  \"branchIndicator\",\n  \"branchText\",\n  \"branchTrigger\",\n  \"item\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"label\",\n  \"nodeCheckbox\",\n  \"root\",\n  \"tree\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.TreeCollection(options);\n};\ncollection.empty = () => {\n  return new _zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.TreeCollection({ rootNode: { children: [] } });\n};\nfunction filePathCollection(paths) {\n  return (0,_zag_js_collection__WEBPACK_IMPORTED_MODULE_1__.filePathToTree)(paths);\n}\n\n// src/tree-view.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `tree:${ctx.id}:root`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `tree:${ctx.id}:label`;\nvar getNodeId = (ctx, value) => ctx.ids?.node?.(value) ?? `tree:${ctx.id}:node:${value}`;\nvar getTreeId = (ctx) => ctx.ids?.tree ?? `tree:${ctx.id}:tree`;\nvar focusNode = (ctx, value) => {\n  if (value == null) return;\n  ctx.getById(getNodeId(ctx, value))?.focus();\n};\nfunction getCheckedState(collection2, node, checkedValue) {\n  const value = collection2.getNodeValue(node);\n  if (!collection2.isBranchNode(node)) {\n    return checkedValue.includes(value);\n  }\n  const childValues = collection2.getDescendantValues(value);\n  const allChecked = childValues.every((v) => checkedValue.includes(v));\n  const someChecked = childValues.some((v) => checkedValue.includes(v));\n  return allChecked ? true : someChecked ? \"indeterminate\" : false;\n}\nfunction toggleBranchChecked(collection2, value, checkedValue) {\n  const childValues = collection2.getDescendantValues(value);\n  const allChecked = childValues.every((child) => checkedValue.includes(child));\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)(allChecked ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(checkedValue, ...childValues) : (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(checkedValue, ...childValues));\n}\nfunction getCheckedValueMap(collection2, checkedValue) {\n  const map = /* @__PURE__ */ new Map();\n  collection2.visit({\n    onEnter: (node) => {\n      const value = collection2.getNodeValue(node);\n      const isBranch = collection2.isBranchNode(node);\n      const checked = getCheckedState(collection2, node, checkedValue);\n      map.set(value, {\n        type: isBranch ? \"branch\" : \"leaf\",\n        checked\n      });\n    }\n  });\n  return map;\n}\n\n// src/tree-view.connect.ts\nfunction connect(service, normalize) {\n  const { context, scope, computed, prop, send } = service;\n  const collection2 = prop(\"collection\");\n  const expandedValue = Array.from(context.get(\"expandedValue\"));\n  const selectedValue = Array.from(context.get(\"selectedValue\"));\n  const checkedValue = Array.from(context.get(\"checkedValue\"));\n  const isTypingAhead = computed(\"isTypingAhead\");\n  const focusedValue = context.get(\"focusedValue\");\n  const loadingStatus = context.get(\"loadingStatus\");\n  function getNodeState(props2) {\n    const { node, indexPath } = props2;\n    const value = collection2.getNodeValue(node);\n    const firstNode = collection2.getFirstNode();\n    const firstNodeValue = firstNode ? collection2.getNodeValue(firstNode) : null;\n    return {\n      id: getNodeId(scope, value),\n      value,\n      indexPath,\n      valuePath: collection2.getValuePath(indexPath),\n      disabled: Boolean(node.disabled),\n      focused: focusedValue == null ? firstNodeValue == value : focusedValue === value,\n      selected: selectedValue.includes(value),\n      expanded: expandedValue.includes(value),\n      loading: loadingStatus[value] === \"loading\",\n      depth: indexPath.length,\n      isBranch: collection2.isBranchNode(node),\n      get checked() {\n        return getCheckedState(collection2, node, checkedValue);\n      }\n    };\n  }\n  return {\n    collection: collection2,\n    expandedValue,\n    selectedValue,\n    checkedValue,\n    toggleChecked(value, isBranch) {\n      send({ type: \"CHECKED.TOGGLE\", value, isBranch });\n    },\n    setChecked(value) {\n      send({ type: \"CHECKED.SET\", value });\n    },\n    clearChecked() {\n      send({ type: \"CHECKED.CLEAR\" });\n    },\n    getCheckedMap() {\n      return getCheckedValueMap(collection2, checkedValue);\n    },\n    expand(value) {\n      send({ type: value ? \"BRANCH.EXPAND\" : \"EXPANDED.ALL\", value });\n    },\n    collapse(value) {\n      send({ type: value ? \"BRANCH.COLLAPSE\" : \"EXPANDED.CLEAR\", value });\n    },\n    deselect(value) {\n      send({ type: value ? \"NODE.DESELECT\" : \"SELECTED.CLEAR\", value });\n    },\n    select(value) {\n      send({ type: value ? \"NODE.SELECT\" : \"SELECTED.ALL\", value, isTrusted: false });\n    },\n    getVisibleNodes() {\n      return computed(\"visibleNodes\").map(({ node }) => node);\n    },\n    focus(value) {\n      focusNode(scope, value);\n    },\n    selectParent(value) {\n      const parentNode = collection2.getParentNode(value);\n      if (!parentNode) return;\n      const _selectedValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(selectedValue, collection2.getNodeValue(parentNode));\n      send({ type: \"SELECTED.SET\", value: _selectedValue, src: \"select.parent\" });\n    },\n    expandParent(value) {\n      const parentNode = collection2.getParentNode(value);\n      if (!parentNode) return;\n      const _expandedValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(expandedValue, collection2.getNodeValue(parentNode));\n      send({ type: \"EXPANDED.SET\", value: _expandedValue, src: \"expand.parent\" });\n    },\n    setExpandedValue(value) {\n      const _expandedValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)(value);\n      send({ type: \"EXPANDED.SET\", value: _expandedValue });\n    },\n    setSelectedValue(value) {\n      const _selectedValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)(value);\n      send({ type: \"SELECTED.SET\", value: _selectedValue });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: getRootId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        id: getLabelId(scope),\n        dir: prop(\"dir\")\n      });\n    },\n    getTreeProps() {\n      return normalize.element({\n        ...parts.tree.attrs,\n        id: getTreeId(scope),\n        dir: prop(\"dir\"),\n        role: \"tree\",\n        \"aria-label\": \"Tree View\",\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-multiselectable\": prop(\"selectionMode\") === \"multiple\" || void 0,\n        tabIndex: -1,\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isComposingEvent)(event)) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isEditableElement)(target)) return;\n          const node = target?.closest(\"[data-part=branch-control], [data-part=item]\");\n          if (!node) return;\n          const nodeId = node.dataset.value;\n          if (nodeId == null) {\n            console.warn(`[zag-js/tree-view] Node id not found for node`, node);\n            return;\n          }\n          const isBranchNode = node.matches(\"[data-part=branch-control]\");\n          const keyMap = {\n            ArrowDown(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2)) return;\n              event2.preventDefault();\n              send({ type: \"NODE.ARROW_DOWN\", id: nodeId, shiftKey: event2.shiftKey });\n            },\n            ArrowUp(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2)) return;\n              event2.preventDefault();\n              send({ type: \"NODE.ARROW_UP\", id: nodeId, shiftKey: event2.shiftKey });\n            },\n            ArrowLeft(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2) || node.dataset.disabled) return;\n              event2.preventDefault();\n              send({ type: isBranchNode ? \"BRANCH_NODE.ARROW_LEFT\" : \"NODE.ARROW_LEFT\", id: nodeId });\n            },\n            ArrowRight(event2) {\n              if (!isBranchNode || node.dataset.disabled) return;\n              event2.preventDefault();\n              send({ type: \"BRANCH_NODE.ARROW_RIGHT\", id: nodeId });\n            },\n            Home(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2)) return;\n              event2.preventDefault();\n              send({ type: \"NODE.HOME\", id: nodeId, shiftKey: event2.shiftKey });\n            },\n            End(event2) {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2)) return;\n              event2.preventDefault();\n              send({ type: \"NODE.END\", id: nodeId, shiftKey: event2.shiftKey });\n            },\n            Space(event2) {\n              if (node.dataset.disabled) return;\n              if (isTypingAhead) {\n                send({ type: \"TREE.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Enter(event2) {\n              if (node.dataset.disabled) return;\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isAnchorElement)(target) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event2)) return;\n              send({ type: isBranchNode ? \"BRANCH_NODE.CLICK\" : \"NODE.CLICK\", id: nodeId, src: \"keyboard\" });\n              if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isAnchorElement)(target)) {\n                event2.preventDefault();\n              }\n            },\n            \"*\"(event2) {\n              if (node.dataset.disabled) return;\n              event2.preventDefault();\n              send({ type: \"SIBLINGS.EXPAND\", id: nodeId });\n            },\n            a(event2) {\n              if (!event2.metaKey || node.dataset.disabled) return;\n              event2.preventDefault();\n              send({ type: \"SELECTED.ALL\", moveFocus: true });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event, { dir: prop(\"dir\") });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            return;\n          }\n          if (!_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event)) return;\n          send({ type: \"TREE.TYPEAHEAD\", key: event.key, id: nodeId });\n          event.preventDefault();\n        }\n      });\n    },\n    getNodeState,\n    getItemProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        id: nodeState.id,\n        dir: prop(\"dir\"),\n        \"data-ownedby\": getTreeId(scope),\n        \"data-path\": props2.indexPath.join(\"/\"),\n        \"data-value\": nodeState.value,\n        tabIndex: nodeState.focused ? 0 : -1,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.focused),\n        role: \"treeitem\",\n        \"aria-current\": nodeState.selected ? \"true\" : void 0,\n        \"aria-selected\": nodeState.disabled ? void 0 : nodeState.selected,\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.selected),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(nodeState.disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"aria-level\": nodeState.depth,\n        \"data-depth\": nodeState.depth,\n        style: {\n          \"--depth\": nodeState.depth\n        },\n        onFocus(event) {\n          event.stopPropagation();\n          send({ type: \"NODE.FOCUS\", id: nodeState.value });\n        },\n        onClick(event) {\n          if (nodeState.disabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isAnchorElement)(event.currentTarget) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event)) return;\n          const isMetaKey = event.metaKey || event.ctrlKey;\n          send({ type: \"NODE.CLICK\", id: nodeState.value, shiftKey: event.shiftKey, ctrlKey: isMetaKey });\n          event.stopPropagation();\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isAnchorElement)(event.currentTarget)) {\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getNodeState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.selected),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.focused)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getNodeState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        \"aria-hidden\": true,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.selected),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.focused),\n        hidden: !itemState.selected\n      });\n    },\n    getBranchProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branch.attrs,\n        \"data-depth\": nodeState.depth,\n        dir: prop(\"dir\"),\n        \"data-branch\": nodeState.value,\n        role: \"treeitem\",\n        \"data-ownedby\": getTreeId(scope),\n        \"data-value\": nodeState.value,\n        \"aria-level\": nodeState.depth,\n        \"aria-selected\": nodeState.disabled ? void 0 : nodeState.selected,\n        \"data-path\": props2.indexPath.join(\"/\"),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.selected),\n        \"aria-expanded\": nodeState.expanded,\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(nodeState.disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"data-loading\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.loading),\n        \"aria-busy\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(nodeState.loading),\n        style: {\n          \"--depth\": nodeState.depth\n        }\n      });\n    },\n    getBranchIndicatorProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchIndicator.attrs,\n        \"aria-hidden\": true,\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.selected),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.focused),\n        \"data-loading\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.loading)\n      });\n    },\n    getBranchTriggerProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchTrigger.attrs,\n        role: \"button\",\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"data-value\": nodeState.value,\n        \"data-loading\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.loading),\n        disabled: nodeState.loading,\n        onClick(event) {\n          if (nodeState.disabled || nodeState.loading) return;\n          send({ type: \"BRANCH_TOGGLE.CLICK\", id: nodeState.value });\n          event.stopPropagation();\n        }\n      });\n    },\n    getBranchControlProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchControl.attrs,\n        role: \"button\",\n        id: nodeState.id,\n        dir: prop(\"dir\"),\n        tabIndex: nodeState.focused ? 0 : -1,\n        \"data-path\": props2.indexPath.join(\"/\"),\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"data-selected\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.selected),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.focused),\n        \"data-value\": nodeState.value,\n        \"data-depth\": nodeState.depth,\n        \"data-loading\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.loading),\n        \"aria-busy\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(nodeState.loading),\n        onFocus(event) {\n          send({ type: \"NODE.FOCUS\", id: nodeState.value });\n          event.stopPropagation();\n        },\n        onClick(event) {\n          if (nodeState.disabled) return;\n          if (nodeState.loading) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isAnchorElement)(event.currentTarget) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isModifierKey)(event)) return;\n          const isMetaKey = event.metaKey || event.ctrlKey;\n          send({ type: \"BRANCH_NODE.CLICK\", id: nodeState.value, shiftKey: event.shiftKey, ctrlKey: isMetaKey });\n          event.stopPropagation();\n        }\n      });\n    },\n    getBranchTextProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"data-loading\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.loading)\n      });\n    },\n    getBranchContentProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchContent.attrs,\n        role: \"group\",\n        dir: prop(\"dir\"),\n        \"data-state\": nodeState.expanded ? \"open\" : \"closed\",\n        \"data-depth\": nodeState.depth,\n        \"data-path\": props2.indexPath.join(\"/\"),\n        \"data-value\": nodeState.value,\n        hidden: !nodeState.expanded\n      });\n    },\n    getBranchIndentGuideProps(props2) {\n      const nodeState = getNodeState(props2);\n      return normalize.element({\n        ...parts.branchIndentGuide.attrs,\n        \"data-depth\": nodeState.depth\n      });\n    },\n    getNodeCheckboxProps(props2) {\n      const nodeState = getNodeState(props2);\n      const checkedState = nodeState.checked;\n      return normalize.element({\n        ...parts.nodeCheckbox.attrs,\n        tabIndex: -1,\n        role: \"checkbox\",\n        \"data-state\": checkedState === true ? \"checked\" : checkedState === false ? \"unchecked\" : \"indeterminate\",\n        \"aria-checked\": checkedState === true ? \"true\" : checkedState === false ? \"false\" : \"mixed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(nodeState.disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (nodeState.disabled) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isLeftClick)(event)) return;\n          send({ type: \"CHECKED.TOGGLE\", value: nodeState.value, isBranch: nodeState.isBranch });\n          event.stopPropagation();\n          const node = event.currentTarget.closest(\"[role=treeitem]\");\n          node?.focus({ preventScroll: true });\n        }\n      });\n    }\n  };\n}\nfunction expandBranches(params, values) {\n  const { context, prop, refs } = params;\n  if (!prop(\"loadChildren\")) {\n    context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(prev, ...values)));\n    return;\n  }\n  const loadingStatus = context.get(\"loadingStatus\");\n  const [loadedValues, loadingValues] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.partition)(values, (value) => loadingStatus[value] === \"loaded\");\n  if (loadedValues.length > 0) {\n    context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(prev, ...loadedValues)));\n  }\n  if (loadingValues.length === 0) return;\n  const collection2 = prop(\"collection\");\n  const [nodeWithChildren, nodeWithoutChildren] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.partition)(loadingValues, (id) => {\n    const node = collection2.findNode(id);\n    return collection2.getNodeChildren(node).length > 0;\n  });\n  if (nodeWithChildren.length > 0) {\n    context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(prev, ...nodeWithChildren)));\n  }\n  if (nodeWithoutChildren.length === 0) return;\n  context.set(\"loadingStatus\", (prev) => ({\n    ...prev,\n    ...nodeWithoutChildren.reduce((acc, id) => ({ ...acc, [id]: \"loading\" }), {})\n  }));\n  const nodesToLoad = nodeWithoutChildren.map((id) => {\n    const indexPath = collection2.getIndexPath(id);\n    const valuePath = collection2.getValuePath(indexPath);\n    const node = collection2.findNode(id);\n    return { id, indexPath, valuePath, node };\n  });\n  const pendingAborts = refs.get(\"pendingAborts\");\n  const loadChildren = prop(\"loadChildren\");\n  (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.ensure)(loadChildren, () => \"[zag-js/tree-view] `loadChildren` is required for async expansion\");\n  const proms = nodesToLoad.map(({ id, indexPath, valuePath, node }) => {\n    const existingAbort = pendingAborts.get(id);\n    if (existingAbort) {\n      existingAbort.abort();\n      pendingAborts.delete(id);\n    }\n    const abortController = new AbortController();\n    pendingAborts.set(id, abortController);\n    return loadChildren({\n      valuePath,\n      indexPath,\n      node,\n      signal: abortController.signal\n    });\n  });\n  Promise.allSettled(proms).then((results) => {\n    const loadedValues2 = [];\n    const nodeWithErrors = [];\n    const nextLoadingStatus = context.get(\"loadingStatus\");\n    let collection3 = prop(\"collection\");\n    results.forEach((result, index) => {\n      const { id, indexPath, node, valuePath } = nodesToLoad[index];\n      if (result.status === \"fulfilled\") {\n        nextLoadingStatus[id] = \"loaded\";\n        loadedValues2.push(id);\n        collection3 = collection3.replace(indexPath, { ...node, children: result.value });\n      } else {\n        pendingAborts.delete(id);\n        Reflect.deleteProperty(nextLoadingStatus, id);\n        nodeWithErrors.push({ node, error: result.reason, indexPath, valuePath });\n      }\n    });\n    context.set(\"loadingStatus\", nextLoadingStatus);\n    if (loadedValues2.length) {\n      context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(prev, ...loadedValues2)));\n      prop(\"onLoadChildrenComplete\")?.({ collection: collection3 });\n    }\n    if (nodeWithErrors.length) {\n      prop(\"onLoadChildrenError\")?.({ nodes: nodeWithErrors });\n    }\n  });\n}\n\n// src/utils/visit-skip.ts\nfunction skipFn(params) {\n  const { prop, context } = params;\n  return function skip({ indexPath }) {\n    const paths = prop(\"collection\").getValuePath(indexPath).slice(0, -1);\n    return paths.some((value) => !context.get(\"expandedValue\").includes(value));\n  };\n}\n\n// src/tree-view.machine.ts\nvar { and } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      selectionMode: \"single\",\n      collection: collection.empty(),\n      typeahead: true,\n      expandOnClick: true,\n      defaultExpandedValue: [],\n      defaultSelectedValue: [],\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      expandedValue: bindable(() => ({\n        defaultValue: prop(\"defaultExpandedValue\"),\n        value: prop(\"expandedValue\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(expandedValue) {\n          const ctx = getContext();\n          const focusedValue = ctx.get(\"focusedValue\");\n          prop(\"onExpandedChange\")?.({\n            expandedValue,\n            focusedValue,\n            get expandedNodes() {\n              return prop(\"collection\").findNodes(expandedValue);\n            }\n          });\n        }\n      })),\n      selectedValue: bindable(() => ({\n        defaultValue: prop(\"defaultSelectedValue\"),\n        value: prop(\"selectedValue\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(selectedValue) {\n          const ctx = getContext();\n          const focusedValue = ctx.get(\"focusedValue\");\n          prop(\"onSelectionChange\")?.({\n            selectedValue,\n            focusedValue,\n            get selectedNodes() {\n              return prop(\"collection\").findNodes(selectedValue);\n            }\n          });\n        }\n      })),\n      focusedValue: bindable(() => ({\n        defaultValue: prop(\"defaultFocusedValue\") || null,\n        value: prop(\"focusedValue\"),\n        onChange(focusedValue) {\n          prop(\"onFocusChange\")?.({\n            focusedValue,\n            get focusedNode() {\n              return focusedValue ? prop(\"collection\").findNode(focusedValue) : null;\n            }\n          });\n        }\n      })),\n      loadingStatus: bindable(() => ({\n        defaultValue: {}\n      })),\n      checkedValue: bindable(() => ({\n        defaultValue: prop(\"defaultCheckedValue\") || [],\n        value: prop(\"checkedValue\"),\n        isEqual: _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual,\n        onChange(value) {\n          prop(\"onCheckedChange\")?.({ checkedValue: value });\n        }\n      }))\n    };\n  },\n  refs() {\n    return {\n      typeaheadState: { ..._zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.defaultOptions },\n      pendingAborts: /* @__PURE__ */ new Map()\n    };\n  },\n  computed: {\n    isMultipleSelection: ({ prop }) => prop(\"selectionMode\") === \"multiple\",\n    isTypingAhead: ({ refs }) => refs.get(\"typeaheadState\").keysSoFar.length > 0,\n    visibleNodes: ({ prop, context }) => {\n      const nodes = [];\n      prop(\"collection\").visit({\n        skip: skipFn({ prop, context }),\n        onEnter: (node, indexPath) => {\n          nodes.push({ node, indexPath });\n        }\n      });\n      return nodes;\n    }\n  },\n  on: {\n    \"EXPANDED.SET\": {\n      actions: [\"setExpanded\"]\n    },\n    \"EXPANDED.CLEAR\": {\n      actions: [\"clearExpanded\"]\n    },\n    \"EXPANDED.ALL\": {\n      actions: [\"expandAllBranches\"]\n    },\n    \"BRANCH.EXPAND\": {\n      actions: [\"expandBranches\"]\n    },\n    \"BRANCH.COLLAPSE\": {\n      actions: [\"collapseBranches\"]\n    },\n    \"SELECTED.SET\": {\n      actions: [\"setSelected\"]\n    },\n    \"SELECTED.ALL\": [\n      {\n        guard: and(\"isMultipleSelection\", \"moveFocus\"),\n        actions: [\"selectAllNodes\", \"focusTreeLastNode\"]\n      },\n      {\n        guard: \"isMultipleSelection\",\n        actions: [\"selectAllNodes\"]\n      }\n    ],\n    \"SELECTED.CLEAR\": {\n      actions: [\"clearSelected\"]\n    },\n    \"NODE.SELECT\": {\n      actions: [\"selectNode\"]\n    },\n    \"NODE.DESELECT\": {\n      actions: [\"deselectNode\"]\n    },\n    \"CHECKED.TOGGLE\": {\n      actions: [\"toggleChecked\"]\n    },\n    \"CHECKED.SET\": {\n      actions: [\"setChecked\"]\n    },\n    \"CHECKED.CLEAR\": {\n      actions: [\"clearChecked\"]\n    }\n  },\n  exit: [\"clearPendingAborts\"],\n  states: {\n    idle: {\n      on: {\n        \"NODE.FOCUS\": {\n          actions: [\"setFocusedNode\"]\n        },\n        \"NODE.ARROW_DOWN\": [\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"focusTreeNextNode\", \"extendSelectionToNextNode\"]\n          },\n          {\n            actions: [\"focusTreeNextNode\"]\n          }\n        ],\n        \"NODE.ARROW_UP\": [\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"focusTreePrevNode\", \"extendSelectionToPrevNode\"]\n          },\n          {\n            actions: [\"focusTreePrevNode\"]\n          }\n        ],\n        \"NODE.ARROW_LEFT\": {\n          actions: [\"focusBranchNode\"]\n        },\n        \"BRANCH_NODE.ARROW_LEFT\": [\n          {\n            guard: \"isBranchExpanded\",\n            actions: [\"collapseBranch\"]\n          },\n          {\n            actions: [\"focusBranchNode\"]\n          }\n        ],\n        \"BRANCH_NODE.ARROW_RIGHT\": [\n          {\n            guard: and(\"isBranchFocused\", \"isBranchExpanded\"),\n            actions: [\"focusBranchFirstNode\"]\n          },\n          {\n            actions: [\"expandBranch\"]\n          }\n        ],\n        \"SIBLINGS.EXPAND\": {\n          actions: [\"expandSiblingBranches\"]\n        },\n        \"NODE.HOME\": [\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"extendSelectionToFirstNode\", \"focusTreeFirstNode\"]\n          },\n          {\n            actions: [\"focusTreeFirstNode\"]\n          }\n        ],\n        \"NODE.END\": [\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"extendSelectionToLastNode\", \"focusTreeLastNode\"]\n          },\n          {\n            actions: [\"focusTreeLastNode\"]\n          }\n        ],\n        \"NODE.CLICK\": [\n          {\n            guard: and(\"isCtrlKey\", \"isMultipleSelection\"),\n            actions: [\"toggleNodeSelection\"]\n          },\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"extendSelectionToNode\"]\n          },\n          {\n            actions: [\"selectNode\"]\n          }\n        ],\n        \"BRANCH_NODE.CLICK\": [\n          {\n            guard: and(\"isCtrlKey\", \"isMultipleSelection\"),\n            actions: [\"toggleNodeSelection\"]\n          },\n          {\n            guard: and(\"isShiftKey\", \"isMultipleSelection\"),\n            actions: [\"extendSelectionToNode\"]\n          },\n          {\n            guard: \"expandOnClick\",\n            actions: [\"selectNode\", \"toggleBranchNode\"]\n          },\n          {\n            actions: [\"selectNode\"]\n          }\n        ],\n        \"BRANCH_TOGGLE.CLICK\": {\n          actions: [\"toggleBranchNode\"]\n        },\n        \"TREE.TYPEAHEAD\": {\n          actions: [\"focusMatchedNode\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isBranchFocused: ({ context, event }) => context.get(\"focusedValue\") === event.id,\n      isBranchExpanded: ({ context, event }) => context.get(\"expandedValue\").includes(event.id),\n      isShiftKey: ({ event }) => event.shiftKey,\n      isCtrlKey: ({ event }) => event.ctrlKey,\n      hasSelectedItems: ({ context }) => context.get(\"selectedValue\").length > 0,\n      isMultipleSelection: ({ prop }) => prop(\"selectionMode\") === \"multiple\",\n      moveFocus: ({ event }) => !!event.moveFocus,\n      expandOnClick: ({ prop }) => !!prop(\"expandOnClick\")\n    },\n    actions: {\n      selectNode({ context, event }) {\n        const value = event.id || event.value;\n        context.set(\"selectedValue\", (prev) => {\n          if (value == null) return prev;\n          if (!event.isTrusted && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isArray)(value)) return prev.concat(...value);\n          return [(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isArray)(value) ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(value) : value].filter(Boolean);\n        });\n      },\n      deselectNode({ context, event }) {\n        const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(event.id || event.value);\n        context.set(\"selectedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(prev, ...value));\n      },\n      setFocusedNode({ context, event }) {\n        context.set(\"focusedValue\", event.id);\n      },\n      clearFocusedNode({ context }) {\n        context.set(\"focusedValue\", null);\n      },\n      clearSelectedItem({ context }) {\n        context.set(\"selectedValue\", []);\n      },\n      toggleBranchNode({ context, event, action }) {\n        const isExpanded = context.get(\"expandedValue\").includes(event.id);\n        action(isExpanded ? [\"collapseBranch\"] : [\"expandBranch\"]);\n      },\n      expandBranch(params) {\n        const { event } = params;\n        expandBranches(params, [event.id]);\n      },\n      expandBranches(params) {\n        const { context, event } = params;\n        const valuesToExpand = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(event.value);\n        expandBranches(params, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.diff)(valuesToExpand, context.get(\"expandedValue\")));\n      },\n      collapseBranch({ context, event }) {\n        context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(prev, event.id));\n      },\n      collapseBranches(params) {\n        const { context, event } = params;\n        const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.toArray)(event.value);\n        context.set(\"expandedValue\", (prev) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(prev, ...value));\n      },\n      setExpanded({ context, event }) {\n        if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isArray)(event.value)) return;\n        context.set(\"expandedValue\", event.value);\n      },\n      clearExpanded({ context }) {\n        context.set(\"expandedValue\", []);\n      },\n      setSelected({ context, event }) {\n        if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isArray)(event.value)) return;\n        context.set(\"selectedValue\", event.value);\n      },\n      clearSelected({ context }) {\n        context.set(\"selectedValue\", []);\n      },\n      focusTreeFirstNode({ prop, scope }) {\n        const collection2 = prop(\"collection\");\n        const firstNode = collection2.getFirstNode();\n        const firstValue = collection2.getNodeValue(firstNode);\n        focusNode(scope, firstValue);\n      },\n      focusTreeLastNode(params) {\n        const { prop, scope } = params;\n        const collection2 = prop(\"collection\");\n        const lastNode = collection2.getLastNode(void 0, { skip: skipFn(params) });\n        const lastValue = collection2.getNodeValue(lastNode);\n        focusNode(scope, lastValue);\n      },\n      focusBranchFirstNode({ event, prop, scope }) {\n        const collection2 = prop(\"collection\");\n        const branchNode = collection2.findNode(event.id);\n        const firstNode = collection2.getFirstNode(branchNode);\n        const firstValue = collection2.getNodeValue(firstNode);\n        focusNode(scope, firstValue);\n      },\n      focusTreeNextNode(params) {\n        const { event, prop, scope } = params;\n        const collection2 = prop(\"collection\");\n        const nextNode = collection2.getNextNode(event.id, { skip: skipFn(params) });\n        if (!nextNode) return;\n        const nextValue = collection2.getNodeValue(nextNode);\n        focusNode(scope, nextValue);\n      },\n      focusTreePrevNode(params) {\n        const { event, prop, scope } = params;\n        const collection2 = prop(\"collection\");\n        const prevNode = collection2.getPreviousNode(event.id, { skip: skipFn(params) });\n        if (!prevNode) return;\n        const prevValue = collection2.getNodeValue(prevNode);\n        focusNode(scope, prevValue);\n      },\n      focusBranchNode({ event, prop, scope }) {\n        const collection2 = prop(\"collection\");\n        const parentNode = collection2.getParentNode(event.id);\n        const parentValue = parentNode ? collection2.getNodeValue(parentNode) : void 0;\n        focusNode(scope, parentValue);\n      },\n      selectAllNodes({ context, prop }) {\n        context.set(\"selectedValue\", prop(\"collection\").getValues());\n      },\n      focusMatchedNode(params) {\n        const { context, prop, refs, event, scope, computed } = params;\n        const nodes = computed(\"visibleNodes\");\n        const elements = nodes.map(({ node: node2 }) => ({\n          textContent: prop(\"collection\").stringifyNode(node2),\n          id: prop(\"collection\").getNodeValue(node2)\n        }));\n        const node = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead)(elements, {\n          state: refs.get(\"typeaheadState\"),\n          activeId: context.get(\"focusedValue\"),\n          key: event.key\n        });\n        focusNode(scope, node?.id);\n      },\n      toggleNodeSelection({ context, event }) {\n        const selectedValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(context.get(\"selectedValue\"), event.id);\n        context.set(\"selectedValue\", selectedValue);\n      },\n      expandAllBranches(params) {\n        const { context, prop } = params;\n        const branchValues = prop(\"collection\").getBranchValues();\n        const valuesToExpand = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.diff)(branchValues, context.get(\"expandedValue\"));\n        expandBranches(params, valuesToExpand);\n      },\n      expandSiblingBranches(params) {\n        const { context, event, prop } = params;\n        const collection2 = prop(\"collection\");\n        const indexPath = collection2.getIndexPath(event.id);\n        if (!indexPath) return;\n        const nodes = collection2.getSiblingNodes(indexPath);\n        const values = nodes.map((node) => collection2.getNodeValue(node));\n        const valuesToExpand = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.diff)(values, context.get(\"expandedValue\"));\n        expandBranches(params, valuesToExpand);\n      },\n      extendSelectionToNode(params) {\n        const { context, event, prop, computed } = params;\n        const collection2 = prop(\"collection\");\n        const anchorValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(context.get(\"selectedValue\")) || collection2.getNodeValue(collection2.getFirstNode());\n        const targetValue = event.id;\n        let values = [anchorValue, targetValue];\n        let hits = 0;\n        const visibleNodes = computed(\"visibleNodes\");\n        visibleNodes.forEach(({ node }) => {\n          const nodeValue = collection2.getNodeValue(node);\n          if (hits === 1) values.push(nodeValue);\n          if (nodeValue === anchorValue || nodeValue === targetValue) hits++;\n        });\n        context.set(\"selectedValue\", (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.uniq)(values));\n      },\n      extendSelectionToNextNode(params) {\n        const { context, event, prop } = params;\n        const collection2 = prop(\"collection\");\n        const nextNode = collection2.getNextNode(event.id, { skip: skipFn(params) });\n        if (!nextNode) return;\n        const values = new Set(context.get(\"selectedValue\"));\n        const nextValue = collection2.getNodeValue(nextNode);\n        if (nextValue == null) return;\n        if (values.has(event.id) && values.has(nextValue)) {\n          values.delete(event.id);\n        } else if (!values.has(nextValue)) {\n          values.add(nextValue);\n        }\n        context.set(\"selectedValue\", Array.from(values));\n      },\n      extendSelectionToPrevNode(params) {\n        const { context, event, prop } = params;\n        const collection2 = prop(\"collection\");\n        const prevNode = collection2.getPreviousNode(event.id, { skip: skipFn(params) });\n        if (!prevNode) return;\n        const values = new Set(context.get(\"selectedValue\"));\n        const prevValue = collection2.getNodeValue(prevNode);\n        if (prevValue == null) return;\n        if (values.has(event.id) && values.has(prevValue)) {\n          values.delete(event.id);\n        } else if (!values.has(prevValue)) {\n          values.add(prevValue);\n        }\n        context.set(\"selectedValue\", Array.from(values));\n      },\n      extendSelectionToFirstNode(params) {\n        const { context, prop } = params;\n        const collection2 = prop(\"collection\");\n        const currentSelection = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(context.get(\"selectedValue\"));\n        const values = [];\n        collection2.visit({\n          skip: skipFn(params),\n          onEnter: (node) => {\n            const nodeValue = collection2.getNodeValue(node);\n            values.push(nodeValue);\n            if (nodeValue === currentSelection) {\n              return \"stop\";\n            }\n          }\n        });\n        context.set(\"selectedValue\", values);\n      },\n      extendSelectionToLastNode(params) {\n        const { context, prop } = params;\n        const collection2 = prop(\"collection\");\n        const currentSelection = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(context.get(\"selectedValue\"));\n        const values = [];\n        let current = false;\n        collection2.visit({\n          skip: skipFn(params),\n          onEnter: (node) => {\n            const nodeValue = collection2.getNodeValue(node);\n            if (nodeValue === currentSelection) current = true;\n            if (current) values.push(nodeValue);\n          }\n        });\n        context.set(\"selectedValue\", values);\n      },\n      clearPendingAborts({ refs }) {\n        const aborts = refs.get(\"pendingAborts\");\n        aborts.forEach((abort) => abort.abort());\n        aborts.clear();\n      },\n      toggleChecked({ context, event, prop }) {\n        const collection2 = prop(\"collection\");\n        context.set(\n          \"checkedValue\",\n          (prev) => event.isBranch ? toggleBranchChecked(collection2, event.value, prev) : (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.addOrRemove)(prev, event.value)\n        );\n      },\n      setChecked({ context, event }) {\n        context.set(\"checkedValue\", event.value);\n      },\n      clearChecked({ context }) {\n        context.set(\"checkedValue\", []);\n      }\n    }\n  }\n});\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"ids\",\n  \"collection\",\n  \"dir\",\n  \"expandedValue\",\n  \"expandOnClick\",\n  \"defaultFocusedValue\",\n  \"focusedValue\",\n  \"getRootNode\",\n  \"id\",\n  \"onExpandedChange\",\n  \"onFocusChange\",\n  \"onSelectionChange\",\n  \"checkedValue\",\n  \"selectedValue\",\n  \"selectionMode\",\n  \"typeahead\",\n  \"defaultExpandedValue\",\n  \"defaultSelectedValue\",\n  \"defaultCheckedValue\",\n  \"onCheckedChange\",\n  \"onLoadChildrenComplete\",\n  \"onLoadChildrenError\",\n  \"loadChildren\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\"node\", \"indexPath\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90cmVlLXZpZXcvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ29CO0FBQ2tIO0FBQ3BDO0FBQ3ZGO0FBQ2Y7O0FBRTVDO0FBQ0EsY0FBYyw4REFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4REFBYztBQUMzQjtBQUNBO0FBQ0EsYUFBYSw4REFBYyxHQUFHLFlBQVksZ0JBQWdCO0FBQzFEO0FBQ0E7QUFDQSxTQUFTLGtFQUFjO0FBQ3ZCOztBQUVBO0FBQ0Esa0RBQWtELE9BQU87QUFDekQsb0RBQW9ELE9BQU87QUFDM0Qsa0VBQWtFLE9BQU8sUUFBUSxNQUFNO0FBQ3ZGLGtEQUFrRCxPQUFPO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG1EQUFJLGNBQWMscURBQU0saUNBQWlDLGtEQUFHO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSx1Q0FBdUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0JBQWtCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlDQUF5QztBQUN0RCxLQUFLO0FBQ0w7QUFDQSxhQUFhLDRCQUE0QjtBQUN6QyxLQUFLO0FBQ0w7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsdURBQXVEO0FBQ3BFLEtBQUs7QUFDTDtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFLEtBQUs7QUFDTDtBQUNBLGFBQWEseURBQXlEO0FBQ3RFLEtBQUs7QUFDTDtBQUNBLGFBQWEsdUVBQXVFO0FBQ3BGLEtBQUs7QUFDTDtBQUNBLDZDQUE2QyxNQUFNO0FBQ25ELEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrREFBRztBQUNoQyxhQUFhLG1FQUFtRTtBQUNoRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGtEQUFHO0FBQ2hDLGFBQWEsbUVBQW1FO0FBQ2hGLEtBQUs7QUFDTDtBQUNBLDZCQUE2QixtREFBSTtBQUNqQyxhQUFhLDZDQUE2QztBQUMxRCxLQUFLO0FBQ0w7QUFDQSw2QkFBNkIsbURBQUk7QUFDakMsYUFBYSw2Q0FBNkM7QUFDMUQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUVBQWdCO0FBQzlCLHlCQUF5QixpRUFBYztBQUN2QyxjQUFjLG9FQUFpQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnRUFBYTtBQUMvQjtBQUNBLHFCQUFxQixnRUFBZ0U7QUFDckYsYUFBYTtBQUNiO0FBQ0Esa0JBQWtCLGdFQUFhO0FBQy9CO0FBQ0EscUJBQXFCLDhEQUE4RDtBQUNuRixhQUFhO0FBQ2I7QUFDQSxrQkFBa0IsZ0VBQWE7QUFDL0I7QUFDQSxxQkFBcUIsK0VBQStFO0FBQ3BHLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNkNBQTZDO0FBQ2xFLGFBQWE7QUFDYjtBQUNBLGtCQUFrQixnRUFBYTtBQUMvQjtBQUNBLHFCQUFxQiwwREFBMEQ7QUFDL0UsYUFBYTtBQUNiO0FBQ0Esa0JBQWtCLGdFQUFhO0FBQy9CO0FBQ0EscUJBQXFCLHlEQUF5RDtBQUM5RSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlDQUF5QztBQUNoRSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0Esa0JBQWtCLGtFQUFlLFlBQVksZ0VBQWE7QUFDMUQscUJBQXFCLHNGQUFzRjtBQUMzRyxtQkFBbUIsa0VBQWU7QUFDbEM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscUNBQXFDO0FBQzFELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQSxzQkFBc0IsOERBQVcsVUFBVSxrQkFBa0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkRBQWM7QUFDN0IsaUJBQWlCLG9EQUFvRDtBQUNyRTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIseUNBQXlDO0FBQzFELFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSw4REFBVztBQUMxQixjQUFjLGtFQUFlLHlCQUF5QixnRUFBYTtBQUNuRTtBQUNBLGlCQUFpQix1RkFBdUY7QUFDeEc7QUFDQSxlQUFlLGtFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDLHNCQUFzQiwyREFBUTtBQUM5QixPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDLHNCQUFzQiwyREFBUTtBQUM5QjtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakM7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMsd0JBQXdCLDJEQUFRO0FBQ2hDLHFCQUFxQiwyREFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQyx5QkFBeUIsMkRBQVE7QUFDakMsc0JBQXNCLDJEQUFRO0FBQzlCLHdCQUF3QiwyREFBUTtBQUNoQyxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0Esd0JBQXdCLDJEQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrREFBa0Q7QUFDbkU7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVE7QUFDakMseUJBQXlCLDJEQUFRO0FBQ2pDLHNCQUFzQiwyREFBUTtBQUM5QjtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFRO0FBQ2hDLHFCQUFxQiwyREFBUTtBQUM3QjtBQUNBLGlCQUFpQix5Q0FBeUM7QUFDMUQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4REFBVztBQUMxQixjQUFjLGtFQUFlLHlCQUF5QixnRUFBYTtBQUNuRTtBQUNBLGlCQUFpQiw4RkFBOEY7QUFDL0c7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBLHdCQUF3QiwyREFBUTtBQUNoQyxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFXO0FBQzFCLGlCQUFpQiw4RUFBOEU7QUFDL0Y7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHNCQUFzQjtBQUNoQztBQUNBLDJDQUEyQyxtREFBSSxDQUFDLGtEQUFHO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx3REFBUztBQUNqRDtBQUNBLDJDQUEyQyxtREFBSSxDQUFDLGtEQUFHO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCx3REFBUztBQUMzRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsMkNBQTJDLG1EQUFJLENBQUMsa0RBQUc7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QseUJBQXlCLEtBQUs7QUFDaEYsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLEdBQUc7QUFDSDtBQUNBO0FBQ0EsRUFBRSxxREFBTTtBQUNSLG1DQUFtQyxnQ0FBZ0M7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlDQUFpQztBQUMvQztBQUNBO0FBQ0E7QUFDQSx1REFBdUQsaUNBQWlDO0FBQ3hGLFFBQVE7QUFDUjtBQUNBO0FBQ0EsOEJBQThCLGtEQUFrRDtBQUNoRjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsNkNBQTZDLG1EQUFJLENBQUMsa0RBQUc7QUFDckQseUNBQXlDLHlCQUF5QjtBQUNsRTtBQUNBO0FBQ0Esc0NBQXNDLHVCQUF1QjtBQUM3RDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0EsVUFBVSxnQkFBZ0I7QUFDMUIseUJBQXlCLFdBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLE1BQU0sRUFBRSwwREFBWTtBQUMxQixjQUFjLDJEQUFhO0FBQzNCLFVBQVUsZUFBZTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSCxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxzQ0FBc0MscUJBQXFCO0FBQzNEO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSx3QkFBd0IsR0FBRyw2REFBYyxpQkFBaUI7QUFDMUQ7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLDRCQUE0QixNQUFNO0FBQ2xDLHNCQUFzQixNQUFNO0FBQzVCLHFCQUFxQixlQUFlO0FBQ3BDO0FBQ0E7QUFDQSx1QkFBdUIsZUFBZTtBQUN0QztBQUNBLHVCQUF1QixpQkFBaUI7QUFDeEM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsMEJBQTBCLGdCQUFnQjtBQUMxQywyQkFBMkIsZ0JBQWdCO0FBQzNDLHFCQUFxQixPQUFPO0FBQzVCLG9CQUFvQixPQUFPO0FBQzNCLDJCQUEyQixTQUFTO0FBQ3BDLDhCQUE4QixNQUFNO0FBQ3BDLG9CQUFvQixPQUFPO0FBQzNCLHdCQUF3QixNQUFNO0FBQzlCLEtBQUs7QUFDTDtBQUNBLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHNEQUFPO0FBQ3pDLGtCQUFrQixzREFBTyxVQUFVLG1EQUFJO0FBQ3ZDLFNBQVM7QUFDVCxPQUFPO0FBQ1AscUJBQXFCLGdCQUFnQjtBQUNyQyxzQkFBc0Isc0RBQU87QUFDN0IsK0NBQStDLHFEQUFNO0FBQ3JELE9BQU87QUFDUCx1QkFBdUIsZ0JBQWdCO0FBQ3ZDO0FBQ0EsT0FBTztBQUNQLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0EsT0FBTztBQUNQLDBCQUEwQixTQUFTO0FBQ25DO0FBQ0EsT0FBTztBQUNQLHlCQUF5Qix3QkFBd0I7QUFDakQ7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQywrQkFBK0Isc0RBQU87QUFDdEMsK0JBQStCLG1EQUFJO0FBQ25DLE9BQU87QUFDUCx1QkFBdUIsZ0JBQWdCO0FBQ3ZDLCtDQUErQyxxREFBTTtBQUNyRCxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDLHNCQUFzQixzREFBTztBQUM3QiwrQ0FBK0MscURBQU07QUFDckQsT0FBTztBQUNQLG9CQUFvQixnQkFBZ0I7QUFDcEMsYUFBYSxzREFBTztBQUNwQjtBQUNBLE9BQU87QUFDUCxzQkFBc0IsU0FBUztBQUMvQjtBQUNBLE9BQU87QUFDUCxvQkFBb0IsZ0JBQWdCO0FBQ3BDLGFBQWEsc0RBQU87QUFDcEI7QUFDQSxPQUFPO0FBQ1Asc0JBQXNCLFNBQVM7QUFDL0I7QUFDQSxPQUFPO0FBQ1AsMkJBQTJCLGFBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBLDJEQUEyRCxzQkFBc0I7QUFDakY7QUFDQTtBQUNBLE9BQU87QUFDUCw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0EsNkRBQTZELHNCQUFzQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0EsaUVBQWlFLHNCQUFzQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asd0JBQXdCLG9CQUFvQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCx1QkFBdUIsZUFBZTtBQUN0QztBQUNBLE9BQU87QUFDUDtBQUNBLGdCQUFnQiw4Q0FBOEM7QUFDOUQ7QUFDQSxzQ0FBc0MsYUFBYTtBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNULHFCQUFxQixpRUFBYztBQUNuQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsNEJBQTRCLGdCQUFnQjtBQUM1Qyw4QkFBOEIsMERBQVc7QUFDekM7QUFDQSxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0EsK0JBQStCLG1EQUFJO0FBQ25DO0FBQ0EsT0FBTztBQUNQO0FBQ0EsZ0JBQWdCLHVCQUF1QjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG1EQUFJO0FBQ25DO0FBQ0EsT0FBTztBQUNQO0FBQ0EsZ0JBQWdCLGlDQUFpQztBQUNqRDtBQUNBLDRCQUE0QixvREFBSztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxNQUFNO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxxQ0FBcUMsbURBQUk7QUFDekMsT0FBTztBQUNQO0FBQ0EsZ0JBQWdCLHVCQUF1QjtBQUN2QztBQUNBLDZEQUE2RCxzQkFBc0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQSxpRUFBaUUsc0JBQXNCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0EsaUNBQWlDLG9EQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBLGlDQUFpQyxvREFBSztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsMkJBQTJCLE1BQU07QUFDakM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLHNCQUFzQixzQkFBc0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGLDBEQUFXO0FBQ3RHO0FBQ0EsT0FBTztBQUNQLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQSxPQUFPO0FBQ1AscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWSwwREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQWdCO0FBQ2pDLGdCQUFnQiwwREFBVztBQUMzQixxQkFBcUIsK0RBQWdCOztBQUU4RSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B6YWctanMvdHJlZS12aWV3L2Rpc3QvaW5kZXgubWpzPzY3YTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQW5hdG9teSB9IGZyb20gJ0B6YWctanMvYW5hdG9teSc7XG5pbXBvcnQgeyBUcmVlQ29sbGVjdGlvbiwgZmlsZVBhdGhUb1RyZWUgfSBmcm9tICdAemFnLWpzL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHsgZ2V0QnlUeXBlYWhlYWQsIGRhdGFBdHRyLCBpc0xlZnRDbGljaywgYXJpYUF0dHIsIGlzQW5jaG9yRWxlbWVudCwgaXNNb2RpZmllcktleSwgaXNDb21wb3NpbmdFdmVudCwgZ2V0RXZlbnRUYXJnZXQsIGlzRWRpdGFibGVFbGVtZW50LCBnZXRFdmVudEtleSB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IGFkZE9yUmVtb3ZlLCBmaXJzdCwgdW5pcSwgZGlmZiwgaXNBcnJheSwgdG9BcnJheSwgcmVtb3ZlLCBsYXN0LCBpc0VxdWFsLCBjcmVhdGVTcGxpdFByb3BzLCBhZGQsIHBhcnRpdGlvbiwgZW5zdXJlIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5pbXBvcnQgeyBjcmVhdGVHdWFyZHMsIGNyZWF0ZU1hY2hpbmUgfSBmcm9tICdAemFnLWpzL2NvcmUnO1xuaW1wb3J0IHsgY3JlYXRlUHJvcHMgfSBmcm9tICdAemFnLWpzL3R5cGVzJztcblxuLy8gc3JjL3RyZWUtdmlldy5hbmF0b215LnRzXG52YXIgYW5hdG9teSA9IGNyZWF0ZUFuYXRvbXkoXCJ0cmVlLXZpZXdcIikucGFydHMoXG4gIFwiYnJhbmNoXCIsXG4gIFwiYnJhbmNoQ29udGVudFwiLFxuICBcImJyYW5jaENvbnRyb2xcIixcbiAgXCJicmFuY2hJbmRlbnRHdWlkZVwiLFxuICBcImJyYW5jaEluZGljYXRvclwiLFxuICBcImJyYW5jaFRleHRcIixcbiAgXCJicmFuY2hUcmlnZ2VyXCIsXG4gIFwiaXRlbVwiLFxuICBcIml0ZW1JbmRpY2F0b3JcIixcbiAgXCJpdGVtVGV4dFwiLFxuICBcImxhYmVsXCIsXG4gIFwibm9kZUNoZWNrYm94XCIsXG4gIFwicm9vdFwiLFxuICBcInRyZWVcIlxuKTtcbnZhciBwYXJ0cyA9IGFuYXRvbXkuYnVpbGQoKTtcbnZhciBjb2xsZWN0aW9uID0gKG9wdGlvbnMpID0+IHtcbiAgcmV0dXJuIG5ldyBUcmVlQ29sbGVjdGlvbihvcHRpb25zKTtcbn07XG5jb2xsZWN0aW9uLmVtcHR5ID0gKCkgPT4ge1xuICByZXR1cm4gbmV3IFRyZWVDb2xsZWN0aW9uKHsgcm9vdE5vZGU6IHsgY2hpbGRyZW46IFtdIH0gfSk7XG59O1xuZnVuY3Rpb24gZmlsZVBhdGhDb2xsZWN0aW9uKHBhdGhzKSB7XG4gIHJldHVybiBmaWxlUGF0aFRvVHJlZShwYXRocyk7XG59XG5cbi8vIHNyYy90cmVlLXZpZXcuZG9tLnRzXG52YXIgZ2V0Um9vdElkID0gKGN0eCkgPT4gY3R4Lmlkcz8ucm9vdCA/PyBgdHJlZToke2N0eC5pZH06cm9vdGA7XG52YXIgZ2V0TGFiZWxJZCA9IChjdHgpID0+IGN0eC5pZHM/LmxhYmVsID8/IGB0cmVlOiR7Y3R4LmlkfTpsYWJlbGA7XG52YXIgZ2V0Tm9kZUlkID0gKGN0eCwgdmFsdWUpID0+IGN0eC5pZHM/Lm5vZGU/Lih2YWx1ZSkgPz8gYHRyZWU6JHtjdHguaWR9Om5vZGU6JHt2YWx1ZX1gO1xudmFyIGdldFRyZWVJZCA9IChjdHgpID0+IGN0eC5pZHM/LnRyZWUgPz8gYHRyZWU6JHtjdHguaWR9OnRyZWVgO1xudmFyIGZvY3VzTm9kZSA9IChjdHgsIHZhbHVlKSA9PiB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm47XG4gIGN0eC5nZXRCeUlkKGdldE5vZGVJZChjdHgsIHZhbHVlKSk/LmZvY3VzKCk7XG59O1xuZnVuY3Rpb24gZ2V0Q2hlY2tlZFN0YXRlKGNvbGxlY3Rpb24yLCBub2RlLCBjaGVja2VkVmFsdWUpIHtcbiAgY29uc3QgdmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobm9kZSk7XG4gIGlmICghY29sbGVjdGlvbjIuaXNCcmFuY2hOb2RlKG5vZGUpKSB7XG4gICAgcmV0dXJuIGNoZWNrZWRWYWx1ZS5pbmNsdWRlcyh2YWx1ZSk7XG4gIH1cbiAgY29uc3QgY2hpbGRWYWx1ZXMgPSBjb2xsZWN0aW9uMi5nZXREZXNjZW5kYW50VmFsdWVzKHZhbHVlKTtcbiAgY29uc3QgYWxsQ2hlY2tlZCA9IGNoaWxkVmFsdWVzLmV2ZXJ5KCh2KSA9PiBjaGVja2VkVmFsdWUuaW5jbHVkZXModikpO1xuICBjb25zdCBzb21lQ2hlY2tlZCA9IGNoaWxkVmFsdWVzLnNvbWUoKHYpID0+IGNoZWNrZWRWYWx1ZS5pbmNsdWRlcyh2KSk7XG4gIHJldHVybiBhbGxDaGVja2VkID8gdHJ1ZSA6IHNvbWVDaGVja2VkID8gXCJpbmRldGVybWluYXRlXCIgOiBmYWxzZTtcbn1cbmZ1bmN0aW9uIHRvZ2dsZUJyYW5jaENoZWNrZWQoY29sbGVjdGlvbjIsIHZhbHVlLCBjaGVja2VkVmFsdWUpIHtcbiAgY29uc3QgY2hpbGRWYWx1ZXMgPSBjb2xsZWN0aW9uMi5nZXREZXNjZW5kYW50VmFsdWVzKHZhbHVlKTtcbiAgY29uc3QgYWxsQ2hlY2tlZCA9IGNoaWxkVmFsdWVzLmV2ZXJ5KChjaGlsZCkgPT4gY2hlY2tlZFZhbHVlLmluY2x1ZGVzKGNoaWxkKSk7XG4gIHJldHVybiB1bmlxKGFsbENoZWNrZWQgPyByZW1vdmUoY2hlY2tlZFZhbHVlLCAuLi5jaGlsZFZhbHVlcykgOiBhZGQoY2hlY2tlZFZhbHVlLCAuLi5jaGlsZFZhbHVlcykpO1xufVxuZnVuY3Rpb24gZ2V0Q2hlY2tlZFZhbHVlTWFwKGNvbGxlY3Rpb24yLCBjaGVja2VkVmFsdWUpIHtcbiAgY29uc3QgbWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgY29sbGVjdGlvbjIudmlzaXQoe1xuICAgIG9uRW50ZXI6IChub2RlKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGNvbGxlY3Rpb24yLmdldE5vZGVWYWx1ZShub2RlKTtcbiAgICAgIGNvbnN0IGlzQnJhbmNoID0gY29sbGVjdGlvbjIuaXNCcmFuY2hOb2RlKG5vZGUpO1xuICAgICAgY29uc3QgY2hlY2tlZCA9IGdldENoZWNrZWRTdGF0ZShjb2xsZWN0aW9uMiwgbm9kZSwgY2hlY2tlZFZhbHVlKTtcbiAgICAgIG1hcC5zZXQodmFsdWUsIHtcbiAgICAgICAgdHlwZTogaXNCcmFuY2ggPyBcImJyYW5jaFwiIDogXCJsZWFmXCIsXG4gICAgICAgIGNoZWNrZWRcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBtYXA7XG59XG5cbi8vIHNyYy90cmVlLXZpZXcuY29ubmVjdC50c1xuZnVuY3Rpb24gY29ubmVjdChzZXJ2aWNlLCBub3JtYWxpemUpIHtcbiAgY29uc3QgeyBjb250ZXh0LCBzY29wZSwgY29tcHV0ZWQsIHByb3AsIHNlbmQgfSA9IHNlcnZpY2U7XG4gIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gIGNvbnN0IGV4cGFuZGVkVmFsdWUgPSBBcnJheS5mcm9tKGNvbnRleHQuZ2V0KFwiZXhwYW5kZWRWYWx1ZVwiKSk7XG4gIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBBcnJheS5mcm9tKGNvbnRleHQuZ2V0KFwic2VsZWN0ZWRWYWx1ZVwiKSk7XG4gIGNvbnN0IGNoZWNrZWRWYWx1ZSA9IEFycmF5LmZyb20oY29udGV4dC5nZXQoXCJjaGVja2VkVmFsdWVcIikpO1xuICBjb25zdCBpc1R5cGluZ0FoZWFkID0gY29tcHV0ZWQoXCJpc1R5cGluZ0FoZWFkXCIpO1xuICBjb25zdCBmb2N1c2VkVmFsdWUgPSBjb250ZXh0LmdldChcImZvY3VzZWRWYWx1ZVwiKTtcbiAgY29uc3QgbG9hZGluZ1N0YXR1cyA9IGNvbnRleHQuZ2V0KFwibG9hZGluZ1N0YXR1c1wiKTtcbiAgZnVuY3Rpb24gZ2V0Tm9kZVN0YXRlKHByb3BzMikge1xuICAgIGNvbnN0IHsgbm9kZSwgaW5kZXhQYXRoIH0gPSBwcm9wczI7XG4gICAgY29uc3QgdmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobm9kZSk7XG4gICAgY29uc3QgZmlyc3ROb2RlID0gY29sbGVjdGlvbjIuZ2V0Rmlyc3ROb2RlKCk7XG4gICAgY29uc3QgZmlyc3ROb2RlVmFsdWUgPSBmaXJzdE5vZGUgPyBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUoZmlyc3ROb2RlKSA6IG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBnZXROb2RlSWQoc2NvcGUsIHZhbHVlKSxcbiAgICAgIHZhbHVlLFxuICAgICAgaW5kZXhQYXRoLFxuICAgICAgdmFsdWVQYXRoOiBjb2xsZWN0aW9uMi5nZXRWYWx1ZVBhdGgoaW5kZXhQYXRoKSxcbiAgICAgIGRpc2FibGVkOiBCb29sZWFuKG5vZGUuZGlzYWJsZWQpLFxuICAgICAgZm9jdXNlZDogZm9jdXNlZFZhbHVlID09IG51bGwgPyBmaXJzdE5vZGVWYWx1ZSA9PSB2YWx1ZSA6IGZvY3VzZWRWYWx1ZSA9PT0gdmFsdWUsXG4gICAgICBzZWxlY3RlZDogc2VsZWN0ZWRWYWx1ZS5pbmNsdWRlcyh2YWx1ZSksXG4gICAgICBleHBhbmRlZDogZXhwYW5kZWRWYWx1ZS5pbmNsdWRlcyh2YWx1ZSksXG4gICAgICBsb2FkaW5nOiBsb2FkaW5nU3RhdHVzW3ZhbHVlXSA9PT0gXCJsb2FkaW5nXCIsXG4gICAgICBkZXB0aDogaW5kZXhQYXRoLmxlbmd0aCxcbiAgICAgIGlzQnJhbmNoOiBjb2xsZWN0aW9uMi5pc0JyYW5jaE5vZGUobm9kZSksXG4gICAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIGdldENoZWNrZWRTdGF0ZShjb2xsZWN0aW9uMiwgbm9kZSwgY2hlY2tlZFZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgY29sbGVjdGlvbjogY29sbGVjdGlvbjIsXG4gICAgZXhwYW5kZWRWYWx1ZSxcbiAgICBzZWxlY3RlZFZhbHVlLFxuICAgIGNoZWNrZWRWYWx1ZSxcbiAgICB0b2dnbGVDaGVja2VkKHZhbHVlLCBpc0JyYW5jaCkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiQ0hFQ0tFRC5UT0dHTEVcIiwgdmFsdWUsIGlzQnJhbmNoIH0pO1xuICAgIH0sXG4gICAgc2V0Q2hlY2tlZCh2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiQ0hFQ0tFRC5TRVRcIiwgdmFsdWUgfSk7XG4gICAgfSxcbiAgICBjbGVhckNoZWNrZWQoKSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJDSEVDS0VELkNMRUFSXCIgfSk7XG4gICAgfSxcbiAgICBnZXRDaGVja2VkTWFwKCkge1xuICAgICAgcmV0dXJuIGdldENoZWNrZWRWYWx1ZU1hcChjb2xsZWN0aW9uMiwgY2hlY2tlZFZhbHVlKTtcbiAgICB9LFxuICAgIGV4cGFuZCh2YWx1ZSkge1xuICAgICAgc2VuZCh7IHR5cGU6IHZhbHVlID8gXCJCUkFOQ0guRVhQQU5EXCIgOiBcIkVYUEFOREVELkFMTFwiLCB2YWx1ZSB9KTtcbiAgICB9LFxuICAgIGNvbGxhcHNlKHZhbHVlKSB7XG4gICAgICBzZW5kKHsgdHlwZTogdmFsdWUgPyBcIkJSQU5DSC5DT0xMQVBTRVwiIDogXCJFWFBBTkRFRC5DTEVBUlwiLCB2YWx1ZSB9KTtcbiAgICB9LFxuICAgIGRlc2VsZWN0KHZhbHVlKSB7XG4gICAgICBzZW5kKHsgdHlwZTogdmFsdWUgPyBcIk5PREUuREVTRUxFQ1RcIiA6IFwiU0VMRUNURUQuQ0xFQVJcIiwgdmFsdWUgfSk7XG4gICAgfSxcbiAgICBzZWxlY3QodmFsdWUpIHtcbiAgICAgIHNlbmQoeyB0eXBlOiB2YWx1ZSA/IFwiTk9ERS5TRUxFQ1RcIiA6IFwiU0VMRUNURUQuQUxMXCIsIHZhbHVlLCBpc1RydXN0ZWQ6IGZhbHNlIH0pO1xuICAgIH0sXG4gICAgZ2V0VmlzaWJsZU5vZGVzKCkge1xuICAgICAgcmV0dXJuIGNvbXB1dGVkKFwidmlzaWJsZU5vZGVzXCIpLm1hcCgoeyBub2RlIH0pID0+IG5vZGUpO1xuICAgIH0sXG4gICAgZm9jdXModmFsdWUpIHtcbiAgICAgIGZvY3VzTm9kZShzY29wZSwgdmFsdWUpO1xuICAgIH0sXG4gICAgc2VsZWN0UGFyZW50KHZhbHVlKSB7XG4gICAgICBjb25zdCBwYXJlbnROb2RlID0gY29sbGVjdGlvbjIuZ2V0UGFyZW50Tm9kZSh2YWx1ZSk7XG4gICAgICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgICAgIGNvbnN0IF9zZWxlY3RlZFZhbHVlID0gYWRkKHNlbGVjdGVkVmFsdWUsIGNvbGxlY3Rpb24yLmdldE5vZGVWYWx1ZShwYXJlbnROb2RlKSk7XG4gICAgICBzZW5kKHsgdHlwZTogXCJTRUxFQ1RFRC5TRVRcIiwgdmFsdWU6IF9zZWxlY3RlZFZhbHVlLCBzcmM6IFwic2VsZWN0LnBhcmVudFwiIH0pO1xuICAgIH0sXG4gICAgZXhwYW5kUGFyZW50KHZhbHVlKSB7XG4gICAgICBjb25zdCBwYXJlbnROb2RlID0gY29sbGVjdGlvbjIuZ2V0UGFyZW50Tm9kZSh2YWx1ZSk7XG4gICAgICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgICAgIGNvbnN0IF9leHBhbmRlZFZhbHVlID0gYWRkKGV4cGFuZGVkVmFsdWUsIGNvbGxlY3Rpb24yLmdldE5vZGVWYWx1ZShwYXJlbnROb2RlKSk7XG4gICAgICBzZW5kKHsgdHlwZTogXCJFWFBBTkRFRC5TRVRcIiwgdmFsdWU6IF9leHBhbmRlZFZhbHVlLCBzcmM6IFwiZXhwYW5kLnBhcmVudFwiIH0pO1xuICAgIH0sXG4gICAgc2V0RXhwYW5kZWRWYWx1ZSh2YWx1ZSkge1xuICAgICAgY29uc3QgX2V4cGFuZGVkVmFsdWUgPSB1bmlxKHZhbHVlKTtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIkVYUEFOREVELlNFVFwiLCB2YWx1ZTogX2V4cGFuZGVkVmFsdWUgfSk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RlZFZhbHVlKHZhbHVlKSB7XG4gICAgICBjb25zdCBfc2VsZWN0ZWRWYWx1ZSA9IHVuaXEodmFsdWUpO1xuICAgICAgc2VuZCh7IHR5cGU6IFwiU0VMRUNURUQuU0VUXCIsIHZhbHVlOiBfc2VsZWN0ZWRWYWx1ZSB9KTtcbiAgICB9LFxuICAgIGdldFJvb3RQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIGlkOiBnZXRSb290SWQoc2NvcGUpLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIilcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0TGFiZWxQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmxhYmVsLmF0dHJzLFxuICAgICAgICBpZDogZ2V0TGFiZWxJZChzY29wZSksXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRUcmVlUHJvcHMoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy50cmVlLmF0dHJzLFxuICAgICAgICBpZDogZ2V0VHJlZUlkKHNjb3BlKSxcbiAgICAgICAgZGlyOiBwcm9wKFwiZGlyXCIpLFxuICAgICAgICByb2xlOiBcInRyZWVcIixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IFwiVHJlZSBWaWV3XCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IGdldExhYmVsSWQoc2NvcGUpLFxuICAgICAgICBcImFyaWEtbXVsdGlzZWxlY3RhYmxlXCI6IHByb3AoXCJzZWxlY3Rpb25Nb2RlXCIpID09PSBcIm11bHRpcGxlXCIgfHwgdm9pZCAwLFxuICAgICAgICB0YWJJbmRleDogLTEsXG4gICAgICAgIG9uS2V5RG93bihldmVudCkge1xuICAgICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGlzQ29tcG9zaW5nRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZXZlbnQpO1xuICAgICAgICAgIGlmIChpc0VkaXRhYmxlRWxlbWVudCh0YXJnZXQpKSByZXR1cm47XG4gICAgICAgICAgY29uc3Qgbm9kZSA9IHRhcmdldD8uY2xvc2VzdChcIltkYXRhLXBhcnQ9YnJhbmNoLWNvbnRyb2xdLCBbZGF0YS1wYXJ0PWl0ZW1dXCIpO1xuICAgICAgICAgIGlmICghbm9kZSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IG5vZGVJZCA9IG5vZGUuZGF0YXNldC52YWx1ZTtcbiAgICAgICAgICBpZiAobm9kZUlkID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgW3phZy1qcy90cmVlLXZpZXddIE5vZGUgaWQgbm90IGZvdW5kIGZvciBub2RlYCwgbm9kZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGlzQnJhbmNoTm9kZSA9IG5vZGUubWF0Y2hlcyhcIltkYXRhLXBhcnQ9YnJhbmNoLWNvbnRyb2xdXCIpO1xuICAgICAgICAgIGNvbnN0IGtleU1hcCA9IHtcbiAgICAgICAgICAgIEFycm93RG93bihldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKGlzTW9kaWZpZXJLZXkoZXZlbnQyKSkgcmV0dXJuO1xuICAgICAgICAgICAgICBldmVudDIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiTk9ERS5BUlJPV19ET1dOXCIsIGlkOiBub2RlSWQsIHNoaWZ0S2V5OiBldmVudDIuc2hpZnRLZXkgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dVcChldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKGlzTW9kaWZpZXJLZXkoZXZlbnQyKSkgcmV0dXJuO1xuICAgICAgICAgICAgICBldmVudDIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiTk9ERS5BUlJPV19VUFwiLCBpZDogbm9kZUlkLCBzaGlmdEtleTogZXZlbnQyLnNoaWZ0S2V5IH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEFycm93TGVmdChldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKGlzTW9kaWZpZXJLZXkoZXZlbnQyKSB8fCBub2RlLmRhdGFzZXQuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgZXZlbnQyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBpc0JyYW5jaE5vZGUgPyBcIkJSQU5DSF9OT0RFLkFSUk9XX0xFRlRcIiA6IFwiTk9ERS5BUlJPV19MRUZUXCIsIGlkOiBub2RlSWQgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgQXJyb3dSaWdodChldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKCFpc0JyYW5jaE5vZGUgfHwgbm9kZS5kYXRhc2V0LmRpc2FibGVkKSByZXR1cm47XG4gICAgICAgICAgICAgIGV2ZW50Mi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJCUkFOQ0hfTk9ERS5BUlJPV19SSUdIVFwiLCBpZDogbm9kZUlkIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEhvbWUoZXZlbnQyKSB7XG4gICAgICAgICAgICAgIGlmIChpc01vZGlmaWVyS2V5KGV2ZW50MikpIHJldHVybjtcbiAgICAgICAgICAgICAgZXZlbnQyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIk5PREUuSE9NRVwiLCBpZDogbm9kZUlkLCBzaGlmdEtleTogZXZlbnQyLnNoaWZ0S2V5IH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEVuZChldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKGlzTW9kaWZpZXJLZXkoZXZlbnQyKSkgcmV0dXJuO1xuICAgICAgICAgICAgICBldmVudDIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiTk9ERS5FTkRcIiwgaWQ6IG5vZGVJZCwgc2hpZnRLZXk6IGV2ZW50Mi5zaGlmdEtleSB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBTcGFjZShldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKG5vZGUuZGF0YXNldC5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICBpZiAoaXNUeXBpbmdBaGVhZCkge1xuICAgICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlRSRUUuVFlQRUFIRUFEXCIsIGtleTogZXZlbnQyLmtleSB9KTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBrZXlNYXAuRW50ZXI/LihldmVudDIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgRW50ZXIoZXZlbnQyKSB7XG4gICAgICAgICAgICAgIGlmIChub2RlLmRhdGFzZXQuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgaWYgKGlzQW5jaG9yRWxlbWVudCh0YXJnZXQpICYmIGlzTW9kaWZpZXJLZXkoZXZlbnQyKSkgcmV0dXJuO1xuICAgICAgICAgICAgICBzZW5kKHsgdHlwZTogaXNCcmFuY2hOb2RlID8gXCJCUkFOQ0hfTk9ERS5DTElDS1wiIDogXCJOT0RFLkNMSUNLXCIsIGlkOiBub2RlSWQsIHNyYzogXCJrZXlib2FyZFwiIH0pO1xuICAgICAgICAgICAgICBpZiAoIWlzQW5jaG9yRWxlbWVudCh0YXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIipcIihldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKG5vZGUuZGF0YXNldC5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICBldmVudDIucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiU0lCTElOR1MuRVhQQU5EXCIsIGlkOiBub2RlSWQgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYShldmVudDIpIHtcbiAgICAgICAgICAgICAgaWYgKCFldmVudDIubWV0YUtleSB8fCBub2RlLmRhdGFzZXQuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgZXZlbnQyLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlNFTEVDVEVELkFMTFwiLCBtb3ZlRm9jdXM6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgICBjb25zdCBrZXkgPSBnZXRFdmVudEtleShldmVudCwgeyBkaXI6IHByb3AoXCJkaXJcIikgfSk7XG4gICAgICAgICAgY29uc3QgZXhlYyA9IGtleU1hcFtrZXldO1xuICAgICAgICAgIGlmIChleGVjKSB7XG4gICAgICAgICAgICBleGVjKGV2ZW50KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFnZXRCeVR5cGVhaGVhZC5pc1ZhbGlkRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiVFJFRS5UWVBFQUhFQURcIiwga2V5OiBldmVudC5rZXksIGlkOiBub2RlSWQgfSk7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXROb2RlU3RhdGUsXG4gICAgZ2V0SXRlbVByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtLmF0dHJzLFxuICAgICAgICBpZDogbm9kZVN0YXRlLmlkLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIFwiZGF0YS1vd25lZGJ5XCI6IGdldFRyZWVJZChzY29wZSksXG4gICAgICAgIFwiZGF0YS1wYXRoXCI6IHByb3BzMi5pbmRleFBhdGguam9pbihcIi9cIiksXG4gICAgICAgIFwiZGF0YS12YWx1ZVwiOiBub2RlU3RhdGUudmFsdWUsXG4gICAgICAgIHRhYkluZGV4OiBub2RlU3RhdGUuZm9jdXNlZCA/IDAgOiAtMSxcbiAgICAgICAgXCJkYXRhLWZvY3VzXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5mb2N1c2VkKSxcbiAgICAgICAgcm9sZTogXCJ0cmVlaXRlbVwiLFxuICAgICAgICBcImFyaWEtY3VycmVudFwiOiBub2RlU3RhdGUuc2VsZWN0ZWQgPyBcInRydWVcIiA6IHZvaWQgMCxcbiAgICAgICAgXCJhcmlhLXNlbGVjdGVkXCI6IG5vZGVTdGF0ZS5kaXNhYmxlZCA/IHZvaWQgMCA6IG5vZGVTdGF0ZS5zZWxlY3RlZCxcbiAgICAgICAgXCJkYXRhLXNlbGVjdGVkXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5zZWxlY3RlZCksXG4gICAgICAgIFwiYXJpYS1kaXNhYmxlZFwiOiBhcmlhQXR0cihub2RlU3RhdGUuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIobm9kZVN0YXRlLmRpc2FibGVkKSxcbiAgICAgICAgXCJhcmlhLWxldmVsXCI6IG5vZGVTdGF0ZS5kZXB0aCxcbiAgICAgICAgXCJkYXRhLWRlcHRoXCI6IG5vZGVTdGF0ZS5kZXB0aCxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBcIi0tZGVwdGhcIjogbm9kZVN0YXRlLmRlcHRoXG4gICAgICAgIH0sXG4gICAgICAgIG9uRm9jdXMoZXZlbnQpIHtcbiAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJOT0RFLkZPQ1VTXCIsIGlkOiBub2RlU3RhdGUudmFsdWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAobm9kZVN0YXRlLmRpc2FibGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKCFpc0xlZnRDbGljayhldmVudCkpIHJldHVybjtcbiAgICAgICAgICBpZiAoaXNBbmNob3JFbGVtZW50KGV2ZW50LmN1cnJlbnRUYXJnZXQpICYmIGlzTW9kaWZpZXJLZXkoZXZlbnQpKSByZXR1cm47XG4gICAgICAgICAgY29uc3QgaXNNZXRhS2V5ID0gZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5O1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIk5PREUuQ0xJQ0tcIiwgaWQ6IG5vZGVTdGF0ZS52YWx1ZSwgc2hpZnRLZXk6IGV2ZW50LnNoaWZ0S2V5LCBjdHJsS2V5OiBpc01ldGFLZXkgfSk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgaWYgKCFpc0FuY2hvckVsZW1lbnQoZXZlbnQuY3VycmVudFRhcmdldCkpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEl0ZW1UZXh0UHJvcHMocHJvcHMyKSB7XG4gICAgICBjb25zdCBpdGVtU3RhdGUgPSBnZXROb2RlU3RhdGUocHJvcHMyKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLml0ZW1UZXh0LmF0dHJzLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLmRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLXNlbGVjdGVkXCI6IGRhdGFBdHRyKGl0ZW1TdGF0ZS5zZWxlY3RlZCksXG4gICAgICAgIFwiZGF0YS1mb2N1c1wiOiBkYXRhQXR0cihpdGVtU3RhdGUuZm9jdXNlZClcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SXRlbUluZGljYXRvclByb3BzKHByb3BzMikge1xuICAgICAgY29uc3QgaXRlbVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5pdGVtSW5kaWNhdG9yLmF0dHJzLFxuICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRydWUsXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihpdGVtU3RhdGUuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtc2VsZWN0ZWRcIjogZGF0YUF0dHIoaXRlbVN0YXRlLnNlbGVjdGVkKSxcbiAgICAgICAgXCJkYXRhLWZvY3VzXCI6IGRhdGFBdHRyKGl0ZW1TdGF0ZS5mb2N1c2VkKSxcbiAgICAgICAgaGlkZGVuOiAhaXRlbVN0YXRlLnNlbGVjdGVkXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEJyYW5jaFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2guYXR0cnMsXG4gICAgICAgIFwiZGF0YS1kZXB0aFwiOiBub2RlU3RhdGUuZGVwdGgsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgXCJkYXRhLWJyYW5jaFwiOiBub2RlU3RhdGUudmFsdWUsXG4gICAgICAgIHJvbGU6IFwidHJlZWl0ZW1cIixcbiAgICAgICAgXCJkYXRhLW93bmVkYnlcIjogZ2V0VHJlZUlkKHNjb3BlKSxcbiAgICAgICAgXCJkYXRhLXZhbHVlXCI6IG5vZGVTdGF0ZS52YWx1ZSxcbiAgICAgICAgXCJhcmlhLWxldmVsXCI6IG5vZGVTdGF0ZS5kZXB0aCxcbiAgICAgICAgXCJhcmlhLXNlbGVjdGVkXCI6IG5vZGVTdGF0ZS5kaXNhYmxlZCA/IHZvaWQgMCA6IG5vZGVTdGF0ZS5zZWxlY3RlZCxcbiAgICAgICAgXCJkYXRhLXBhdGhcIjogcHJvcHMyLmluZGV4UGF0aC5qb2luKFwiL1wiKSxcbiAgICAgICAgXCJkYXRhLXNlbGVjdGVkXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5zZWxlY3RlZCksXG4gICAgICAgIFwiYXJpYS1leHBhbmRlZFwiOiBub2RlU3RhdGUuZXhwYW5kZWQsXG4gICAgICAgIFwiZGF0YS1zdGF0ZVwiOiBub2RlU3RhdGUuZXhwYW5kZWQgPyBcIm9wZW5cIiA6IFwiY2xvc2VkXCIsXG4gICAgICAgIFwiYXJpYS1kaXNhYmxlZFwiOiBhcmlhQXR0cihub2RlU3RhdGUuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtZGlzYWJsZWRcIjogZGF0YUF0dHIobm9kZVN0YXRlLmRpc2FibGVkKSxcbiAgICAgICAgXCJkYXRhLWxvYWRpbmdcIjogZGF0YUF0dHIobm9kZVN0YXRlLmxvYWRpbmcpLFxuICAgICAgICBcImFyaWEtYnVzeVwiOiBhcmlhQXR0cihub2RlU3RhdGUubG9hZGluZyksXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgXCItLWRlcHRoXCI6IG5vZGVTdGF0ZS5kZXB0aFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEJyYW5jaEluZGljYXRvclByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2hJbmRpY2F0b3IuYXR0cnMsXG4gICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdHJ1ZSxcbiAgICAgICAgXCJkYXRhLXN0YXRlXCI6IG5vZGVTdGF0ZS5leHBhbmRlZCA/IFwib3BlblwiIDogXCJjbG9zZWRcIixcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5kaXNhYmxlZCksXG4gICAgICAgIFwiZGF0YS1zZWxlY3RlZFwiOiBkYXRhQXR0cihub2RlU3RhdGUuc2VsZWN0ZWQpLFxuICAgICAgICBcImRhdGEtZm9jdXNcIjogZGF0YUF0dHIobm9kZVN0YXRlLmZvY3VzZWQpLFxuICAgICAgICBcImRhdGEtbG9hZGluZ1wiOiBkYXRhQXR0cihub2RlU3RhdGUubG9hZGluZylcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QnJhbmNoVHJpZ2dlclByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2hUcmlnZ2VyLmF0dHJzLFxuICAgICAgICByb2xlOiBcImJ1dHRvblwiLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihub2RlU3RhdGUuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtc3RhdGVcIjogbm9kZVN0YXRlLmV4cGFuZGVkID8gXCJvcGVuXCIgOiBcImNsb3NlZFwiLFxuICAgICAgICBcImRhdGEtdmFsdWVcIjogbm9kZVN0YXRlLnZhbHVlLFxuICAgICAgICBcImRhdGEtbG9hZGluZ1wiOiBkYXRhQXR0cihub2RlU3RhdGUubG9hZGluZyksXG4gICAgICAgIGRpc2FibGVkOiBub2RlU3RhdGUubG9hZGluZyxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChub2RlU3RhdGUuZGlzYWJsZWQgfHwgbm9kZVN0YXRlLmxvYWRpbmcpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJCUkFOQ0hfVE9HR0xFLkNMSUNLXCIsIGlkOiBub2RlU3RhdGUudmFsdWUgfSk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QnJhbmNoQ29udHJvbFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2hDb250cm9sLmF0dHJzLFxuICAgICAgICByb2xlOiBcImJ1dHRvblwiLFxuICAgICAgICBpZDogbm9kZVN0YXRlLmlkLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIHRhYkluZGV4OiBub2RlU3RhdGUuZm9jdXNlZCA/IDAgOiAtMSxcbiAgICAgICAgXCJkYXRhLXBhdGhcIjogcHJvcHMyLmluZGV4UGF0aC5qb2luKFwiL1wiKSxcbiAgICAgICAgXCJkYXRhLXN0YXRlXCI6IG5vZGVTdGF0ZS5leHBhbmRlZCA/IFwib3BlblwiIDogXCJjbG9zZWRcIixcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5kaXNhYmxlZCksXG4gICAgICAgIFwiZGF0YS1zZWxlY3RlZFwiOiBkYXRhQXR0cihub2RlU3RhdGUuc2VsZWN0ZWQpLFxuICAgICAgICBcImRhdGEtZm9jdXNcIjogZGF0YUF0dHIobm9kZVN0YXRlLmZvY3VzZWQpLFxuICAgICAgICBcImRhdGEtdmFsdWVcIjogbm9kZVN0YXRlLnZhbHVlLFxuICAgICAgICBcImRhdGEtZGVwdGhcIjogbm9kZVN0YXRlLmRlcHRoLFxuICAgICAgICBcImRhdGEtbG9hZGluZ1wiOiBkYXRhQXR0cihub2RlU3RhdGUubG9hZGluZyksXG4gICAgICAgIFwiYXJpYS1idXN5XCI6IGFyaWFBdHRyKG5vZGVTdGF0ZS5sb2FkaW5nKSxcbiAgICAgICAgb25Gb2N1cyhldmVudCkge1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIk5PREUuRk9DVVNcIiwgaWQ6IG5vZGVTdGF0ZS52YWx1ZSB9KTtcbiAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25DbGljayhldmVudCkge1xuICAgICAgICAgIGlmIChub2RlU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAobm9kZVN0YXRlLmxvYWRpbmcpIHJldHVybjtcbiAgICAgICAgICBpZiAoIWlzTGVmdENsaWNrKGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChpc0FuY2hvckVsZW1lbnQoZXZlbnQuY3VycmVudFRhcmdldCkgJiYgaXNNb2RpZmllcktleShldmVudCkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBpc01ldGFLZXkgPSBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXk7XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiQlJBTkNIX05PREUuQ0xJQ0tcIiwgaWQ6IG5vZGVTdGF0ZS52YWx1ZSwgc2hpZnRLZXk6IGV2ZW50LnNoaWZ0S2V5LCBjdHJsS2V5OiBpc01ldGFLZXkgfSk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QnJhbmNoVGV4dFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2hUZXh0LmF0dHJzLFxuICAgICAgICBkaXI6IHByb3AoXCJkaXJcIiksXG4gICAgICAgIFwiZGF0YS1kaXNhYmxlZFwiOiBkYXRhQXR0cihub2RlU3RhdGUuZGlzYWJsZWQpLFxuICAgICAgICBcImRhdGEtc3RhdGVcIjogbm9kZVN0YXRlLmV4cGFuZGVkID8gXCJvcGVuXCIgOiBcImNsb3NlZFwiLFxuICAgICAgICBcImRhdGEtbG9hZGluZ1wiOiBkYXRhQXR0cihub2RlU3RhdGUubG9hZGluZylcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0QnJhbmNoQ29udGVudFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICByZXR1cm4gbm9ybWFsaXplLmVsZW1lbnQoe1xuICAgICAgICAuLi5wYXJ0cy5icmFuY2hDb250ZW50LmF0dHJzLFxuICAgICAgICByb2xlOiBcImdyb3VwXCIsXG4gICAgICAgIGRpcjogcHJvcChcImRpclwiKSxcbiAgICAgICAgXCJkYXRhLXN0YXRlXCI6IG5vZGVTdGF0ZS5leHBhbmRlZCA/IFwib3BlblwiIDogXCJjbG9zZWRcIixcbiAgICAgICAgXCJkYXRhLWRlcHRoXCI6IG5vZGVTdGF0ZS5kZXB0aCxcbiAgICAgICAgXCJkYXRhLXBhdGhcIjogcHJvcHMyLmluZGV4UGF0aC5qb2luKFwiL1wiKSxcbiAgICAgICAgXCJkYXRhLXZhbHVlXCI6IG5vZGVTdGF0ZS52YWx1ZSxcbiAgICAgICAgaGlkZGVuOiAhbm9kZVN0YXRlLmV4cGFuZGVkXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldEJyYW5jaEluZGVudEd1aWRlUHJvcHMocHJvcHMyKSB7XG4gICAgICBjb25zdCBub2RlU3RhdGUgPSBnZXROb2RlU3RhdGUocHJvcHMyKTtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmJyYW5jaEluZGVudEd1aWRlLmF0dHJzLFxuICAgICAgICBcImRhdGEtZGVwdGhcIjogbm9kZVN0YXRlLmRlcHRoXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldE5vZGVDaGVja2JveFByb3BzKHByb3BzMikge1xuICAgICAgY29uc3Qgbm9kZVN0YXRlID0gZ2V0Tm9kZVN0YXRlKHByb3BzMik7XG4gICAgICBjb25zdCBjaGVja2VkU3RhdGUgPSBub2RlU3RhdGUuY2hlY2tlZDtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLm5vZGVDaGVja2JveC5hdHRycyxcbiAgICAgICAgdGFiSW5kZXg6IC0xLFxuICAgICAgICByb2xlOiBcImNoZWNrYm94XCIsXG4gICAgICAgIFwiZGF0YS1zdGF0ZVwiOiBjaGVja2VkU3RhdGUgPT09IHRydWUgPyBcImNoZWNrZWRcIiA6IGNoZWNrZWRTdGF0ZSA9PT0gZmFsc2UgPyBcInVuY2hlY2tlZFwiIDogXCJpbmRldGVybWluYXRlXCIsXG4gICAgICAgIFwiYXJpYS1jaGVja2VkXCI6IGNoZWNrZWRTdGF0ZSA9PT0gdHJ1ZSA/IFwidHJ1ZVwiIDogY2hlY2tlZFN0YXRlID09PSBmYWxzZSA/IFwiZmFsc2VcIiA6IFwibWl4ZWRcIixcbiAgICAgICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKG5vZGVTdGF0ZS5kaXNhYmxlZCksXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChub2RlU3RhdGUuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoIWlzTGVmdENsaWNrKGV2ZW50KSkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkNIRUNLRUQuVE9HR0xFXCIsIHZhbHVlOiBub2RlU3RhdGUudmFsdWUsIGlzQnJhbmNoOiBub2RlU3RhdGUuaXNCcmFuY2ggfSk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgY29uc3Qgbm9kZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xvc2VzdChcIltyb2xlPXRyZWVpdGVtXVwiKTtcbiAgICAgICAgICBub2RlPy5mb2N1cyh7IHByZXZlbnRTY3JvbGw6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGV4cGFuZEJyYW5jaGVzKHBhcmFtcywgdmFsdWVzKSB7XG4gIGNvbnN0IHsgY29udGV4dCwgcHJvcCwgcmVmcyB9ID0gcGFyYW1zO1xuICBpZiAoIXByb3AoXCJsb2FkQ2hpbGRyZW5cIikpIHtcbiAgICBjb250ZXh0LnNldChcImV4cGFuZGVkVmFsdWVcIiwgKHByZXYpID0+IHVuaXEoYWRkKHByZXYsIC4uLnZhbHVlcykpKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgbG9hZGluZ1N0YXR1cyA9IGNvbnRleHQuZ2V0KFwibG9hZGluZ1N0YXR1c1wiKTtcbiAgY29uc3QgW2xvYWRlZFZhbHVlcywgbG9hZGluZ1ZhbHVlc10gPSBwYXJ0aXRpb24odmFsdWVzLCAodmFsdWUpID0+IGxvYWRpbmdTdGF0dXNbdmFsdWVdID09PSBcImxvYWRlZFwiKTtcbiAgaWYgKGxvYWRlZFZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgY29udGV4dC5zZXQoXCJleHBhbmRlZFZhbHVlXCIsIChwcmV2KSA9PiB1bmlxKGFkZChwcmV2LCAuLi5sb2FkZWRWYWx1ZXMpKSk7XG4gIH1cbiAgaWYgKGxvYWRpbmdWYWx1ZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gIGNvbnN0IFtub2RlV2l0aENoaWxkcmVuLCBub2RlV2l0aG91dENoaWxkcmVuXSA9IHBhcnRpdGlvbihsb2FkaW5nVmFsdWVzLCAoaWQpID0+IHtcbiAgICBjb25zdCBub2RlID0gY29sbGVjdGlvbjIuZmluZE5vZGUoaWQpO1xuICAgIHJldHVybiBjb2xsZWN0aW9uMi5nZXROb2RlQ2hpbGRyZW4obm9kZSkubGVuZ3RoID4gMDtcbiAgfSk7XG4gIGlmIChub2RlV2l0aENoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICBjb250ZXh0LnNldChcImV4cGFuZGVkVmFsdWVcIiwgKHByZXYpID0+IHVuaXEoYWRkKHByZXYsIC4uLm5vZGVXaXRoQ2hpbGRyZW4pKSk7XG4gIH1cbiAgaWYgKG5vZGVXaXRob3V0Q2hpbGRyZW4ubGVuZ3RoID09PSAwKSByZXR1cm47XG4gIGNvbnRleHQuc2V0KFwibG9hZGluZ1N0YXR1c1wiLCAocHJldikgPT4gKHtcbiAgICAuLi5wcmV2LFxuICAgIC4uLm5vZGVXaXRob3V0Q2hpbGRyZW4ucmVkdWNlKChhY2MsIGlkKSA9PiAoeyAuLi5hY2MsIFtpZF06IFwibG9hZGluZ1wiIH0pLCB7fSlcbiAgfSkpO1xuICBjb25zdCBub2Rlc1RvTG9hZCA9IG5vZGVXaXRob3V0Q2hpbGRyZW4ubWFwKChpZCkgPT4ge1xuICAgIGNvbnN0IGluZGV4UGF0aCA9IGNvbGxlY3Rpb24yLmdldEluZGV4UGF0aChpZCk7XG4gICAgY29uc3QgdmFsdWVQYXRoID0gY29sbGVjdGlvbjIuZ2V0VmFsdWVQYXRoKGluZGV4UGF0aCk7XG4gICAgY29uc3Qgbm9kZSA9IGNvbGxlY3Rpb24yLmZpbmROb2RlKGlkKTtcbiAgICByZXR1cm4geyBpZCwgaW5kZXhQYXRoLCB2YWx1ZVBhdGgsIG5vZGUgfTtcbiAgfSk7XG4gIGNvbnN0IHBlbmRpbmdBYm9ydHMgPSByZWZzLmdldChcInBlbmRpbmdBYm9ydHNcIik7XG4gIGNvbnN0IGxvYWRDaGlsZHJlbiA9IHByb3AoXCJsb2FkQ2hpbGRyZW5cIik7XG4gIGVuc3VyZShsb2FkQ2hpbGRyZW4sICgpID0+IFwiW3phZy1qcy90cmVlLXZpZXddIGBsb2FkQ2hpbGRyZW5gIGlzIHJlcXVpcmVkIGZvciBhc3luYyBleHBhbnNpb25cIik7XG4gIGNvbnN0IHByb21zID0gbm9kZXNUb0xvYWQubWFwKCh7IGlkLCBpbmRleFBhdGgsIHZhbHVlUGF0aCwgbm9kZSB9KSA9PiB7XG4gICAgY29uc3QgZXhpc3RpbmdBYm9ydCA9IHBlbmRpbmdBYm9ydHMuZ2V0KGlkKTtcbiAgICBpZiAoZXhpc3RpbmdBYm9ydCkge1xuICAgICAgZXhpc3RpbmdBYm9ydC5hYm9ydCgpO1xuICAgICAgcGVuZGluZ0Fib3J0cy5kZWxldGUoaWQpO1xuICAgIH1cbiAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgcGVuZGluZ0Fib3J0cy5zZXQoaWQsIGFib3J0Q29udHJvbGxlcik7XG4gICAgcmV0dXJuIGxvYWRDaGlsZHJlbih7XG4gICAgICB2YWx1ZVBhdGgsXG4gICAgICBpbmRleFBhdGgsXG4gICAgICBub2RlLFxuICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgfSk7XG4gIH0pO1xuICBQcm9taXNlLmFsbFNldHRsZWQocHJvbXMpLnRoZW4oKHJlc3VsdHMpID0+IHtcbiAgICBjb25zdCBsb2FkZWRWYWx1ZXMyID0gW107XG4gICAgY29uc3Qgbm9kZVdpdGhFcnJvcnMgPSBbXTtcbiAgICBjb25zdCBuZXh0TG9hZGluZ1N0YXR1cyA9IGNvbnRleHQuZ2V0KFwibG9hZGluZ1N0YXR1c1wiKTtcbiAgICBsZXQgY29sbGVjdGlvbjMgPSBwcm9wKFwiY29sbGVjdGlvblwiKTtcbiAgICByZXN1bHRzLmZvckVhY2goKHJlc3VsdCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHsgaWQsIGluZGV4UGF0aCwgbm9kZSwgdmFsdWVQYXRoIH0gPSBub2Rlc1RvTG9hZFtpbmRleF07XG4gICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJmdWxmaWxsZWRcIikge1xuICAgICAgICBuZXh0TG9hZGluZ1N0YXR1c1tpZF0gPSBcImxvYWRlZFwiO1xuICAgICAgICBsb2FkZWRWYWx1ZXMyLnB1c2goaWQpO1xuICAgICAgICBjb2xsZWN0aW9uMyA9IGNvbGxlY3Rpb24zLnJlcGxhY2UoaW5kZXhQYXRoLCB7IC4uLm5vZGUsIGNoaWxkcmVuOiByZXN1bHQudmFsdWUgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwZW5kaW5nQWJvcnRzLmRlbGV0ZShpZCk7XG4gICAgICAgIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkobmV4dExvYWRpbmdTdGF0dXMsIGlkKTtcbiAgICAgICAgbm9kZVdpdGhFcnJvcnMucHVzaCh7IG5vZGUsIGVycm9yOiByZXN1bHQucmVhc29uLCBpbmRleFBhdGgsIHZhbHVlUGF0aCB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb250ZXh0LnNldChcImxvYWRpbmdTdGF0dXNcIiwgbmV4dExvYWRpbmdTdGF0dXMpO1xuICAgIGlmIChsb2FkZWRWYWx1ZXMyLmxlbmd0aCkge1xuICAgICAgY29udGV4dC5zZXQoXCJleHBhbmRlZFZhbHVlXCIsIChwcmV2KSA9PiB1bmlxKGFkZChwcmV2LCAuLi5sb2FkZWRWYWx1ZXMyKSkpO1xuICAgICAgcHJvcChcIm9uTG9hZENoaWxkcmVuQ29tcGxldGVcIik/Lih7IGNvbGxlY3Rpb246IGNvbGxlY3Rpb24zIH0pO1xuICAgIH1cbiAgICBpZiAobm9kZVdpdGhFcnJvcnMubGVuZ3RoKSB7XG4gICAgICBwcm9wKFwib25Mb2FkQ2hpbGRyZW5FcnJvclwiKT8uKHsgbm9kZXM6IG5vZGVXaXRoRXJyb3JzIH0pO1xuICAgIH1cbiAgfSk7XG59XG5cbi8vIHNyYy91dGlscy92aXNpdC1za2lwLnRzXG5mdW5jdGlvbiBza2lwRm4ocGFyYW1zKSB7XG4gIGNvbnN0IHsgcHJvcCwgY29udGV4dCB9ID0gcGFyYW1zO1xuICByZXR1cm4gZnVuY3Rpb24gc2tpcCh7IGluZGV4UGF0aCB9KSB7XG4gICAgY29uc3QgcGF0aHMgPSBwcm9wKFwiY29sbGVjdGlvblwiKS5nZXRWYWx1ZVBhdGgoaW5kZXhQYXRoKS5zbGljZSgwLCAtMSk7XG4gICAgcmV0dXJuIHBhdGhzLnNvbWUoKHZhbHVlKSA9PiAhY29udGV4dC5nZXQoXCJleHBhbmRlZFZhbHVlXCIpLmluY2x1ZGVzKHZhbHVlKSk7XG4gIH07XG59XG5cbi8vIHNyYy90cmVlLXZpZXcubWFjaGluZS50c1xudmFyIHsgYW5kIH0gPSBjcmVhdGVHdWFyZHMoKTtcbnZhciBtYWNoaW5lID0gY3JlYXRlTWFjaGluZSh7XG4gIHByb3BzKHsgcHJvcHM6IHByb3BzMiB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbGVjdGlvbk1vZGU6IFwic2luZ2xlXCIsXG4gICAgICBjb2xsZWN0aW9uOiBjb2xsZWN0aW9uLmVtcHR5KCksXG4gICAgICB0eXBlYWhlYWQ6IHRydWUsXG4gICAgICBleHBhbmRPbkNsaWNrOiB0cnVlLFxuICAgICAgZGVmYXVsdEV4cGFuZGVkVmFsdWU6IFtdLFxuICAgICAgZGVmYXVsdFNlbGVjdGVkVmFsdWU6IFtdLFxuICAgICAgLi4ucHJvcHMyXG4gICAgfTtcbiAgfSxcbiAgaW5pdGlhbFN0YXRlKCkge1xuICAgIHJldHVybiBcImlkbGVcIjtcbiAgfSxcbiAgY29udGV4dCh7IHByb3AsIGJpbmRhYmxlLCBnZXRDb250ZXh0IH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXhwYW5kZWRWYWx1ZTogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBwcm9wKFwiZGVmYXVsdEV4cGFuZGVkVmFsdWVcIiksXG4gICAgICAgIHZhbHVlOiBwcm9wKFwiZXhwYW5kZWRWYWx1ZVwiKSxcbiAgICAgICAgaXNFcXVhbCxcbiAgICAgICAgb25DaGFuZ2UoZXhwYW5kZWRWYWx1ZSkge1xuICAgICAgICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQoKTtcbiAgICAgICAgICBjb25zdCBmb2N1c2VkVmFsdWUgPSBjdHguZ2V0KFwiZm9jdXNlZFZhbHVlXCIpO1xuICAgICAgICAgIHByb3AoXCJvbkV4cGFuZGVkQ2hhbmdlXCIpPy4oe1xuICAgICAgICAgICAgZXhwYW5kZWRWYWx1ZSxcbiAgICAgICAgICAgIGZvY3VzZWRWYWx1ZSxcbiAgICAgICAgICAgIGdldCBleHBhbmRlZE5vZGVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcChcImNvbGxlY3Rpb25cIikuZmluZE5vZGVzKGV4cGFuZGVkVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSksXG4gICAgICBzZWxlY3RlZFZhbHVlOiBiaW5kYWJsZSgoKSA9PiAoe1xuICAgICAgICBkZWZhdWx0VmFsdWU6IHByb3AoXCJkZWZhdWx0U2VsZWN0ZWRWYWx1ZVwiKSxcbiAgICAgICAgdmFsdWU6IHByb3AoXCJzZWxlY3RlZFZhbHVlXCIpLFxuICAgICAgICBpc0VxdWFsLFxuICAgICAgICBvbkNoYW5nZShzZWxlY3RlZFZhbHVlKSB7XG4gICAgICAgICAgY29uc3QgY3R4ID0gZ2V0Q29udGV4dCgpO1xuICAgICAgICAgIGNvbnN0IGZvY3VzZWRWYWx1ZSA9IGN0eC5nZXQoXCJmb2N1c2VkVmFsdWVcIik7XG4gICAgICAgICAgcHJvcChcIm9uU2VsZWN0aW9uQ2hhbmdlXCIpPy4oe1xuICAgICAgICAgICAgc2VsZWN0ZWRWYWx1ZSxcbiAgICAgICAgICAgIGZvY3VzZWRWYWx1ZSxcbiAgICAgICAgICAgIGdldCBzZWxlY3RlZE5vZGVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcChcImNvbGxlY3Rpb25cIikuZmluZE5vZGVzKHNlbGVjdGVkVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSksXG4gICAgICBmb2N1c2VkVmFsdWU6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZTogcHJvcChcImRlZmF1bHRGb2N1c2VkVmFsdWVcIikgfHwgbnVsbCxcbiAgICAgICAgdmFsdWU6IHByb3AoXCJmb2N1c2VkVmFsdWVcIiksXG4gICAgICAgIG9uQ2hhbmdlKGZvY3VzZWRWYWx1ZSkge1xuICAgICAgICAgIHByb3AoXCJvbkZvY3VzQ2hhbmdlXCIpPy4oe1xuICAgICAgICAgICAgZm9jdXNlZFZhbHVlLFxuICAgICAgICAgICAgZ2V0IGZvY3VzZWROb2RlKCkge1xuICAgICAgICAgICAgICByZXR1cm4gZm9jdXNlZFZhbHVlID8gcHJvcChcImNvbGxlY3Rpb25cIikuZmluZE5vZGUoZm9jdXNlZFZhbHVlKSA6IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pKSxcbiAgICAgIGxvYWRpbmdTdGF0dXM6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIGRlZmF1bHRWYWx1ZToge31cbiAgICAgIH0pKSxcbiAgICAgIGNoZWNrZWRWYWx1ZTogYmluZGFibGUoKCkgPT4gKHtcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBwcm9wKFwiZGVmYXVsdENoZWNrZWRWYWx1ZVwiKSB8fCBbXSxcbiAgICAgICAgdmFsdWU6IHByb3AoXCJjaGVja2VkVmFsdWVcIiksXG4gICAgICAgIGlzRXF1YWwsXG4gICAgICAgIG9uQ2hhbmdlKHZhbHVlKSB7XG4gICAgICAgICAgcHJvcChcIm9uQ2hlY2tlZENoYW5nZVwiKT8uKHsgY2hlY2tlZFZhbHVlOiB2YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSkpXG4gICAgfTtcbiAgfSxcbiAgcmVmcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZWFoZWFkU3RhdGU6IHsgLi4uZ2V0QnlUeXBlYWhlYWQuZGVmYXVsdE9wdGlvbnMgfSxcbiAgICAgIHBlbmRpbmdBYm9ydHM6IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKClcbiAgICB9O1xuICB9LFxuICBjb21wdXRlZDoge1xuICAgIGlzTXVsdGlwbGVTZWxlY3Rpb246ICh7IHByb3AgfSkgPT4gcHJvcChcInNlbGVjdGlvbk1vZGVcIikgPT09IFwibXVsdGlwbGVcIixcbiAgICBpc1R5cGluZ0FoZWFkOiAoeyByZWZzIH0pID0+IHJlZnMuZ2V0KFwidHlwZWFoZWFkU3RhdGVcIikua2V5c1NvRmFyLmxlbmd0aCA+IDAsXG4gICAgdmlzaWJsZU5vZGVzOiAoeyBwcm9wLCBjb250ZXh0IH0pID0+IHtcbiAgICAgIGNvbnN0IG5vZGVzID0gW107XG4gICAgICBwcm9wKFwiY29sbGVjdGlvblwiKS52aXNpdCh7XG4gICAgICAgIHNraXA6IHNraXBGbih7IHByb3AsIGNvbnRleHQgfSksXG4gICAgICAgIG9uRW50ZXI6IChub2RlLCBpbmRleFBhdGgpID0+IHtcbiAgICAgICAgICBub2Rlcy5wdXNoKHsgbm9kZSwgaW5kZXhQYXRoIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gIH0sXG4gIG9uOiB7XG4gICAgXCJFWFBBTkRFRC5TRVRcIjoge1xuICAgICAgYWN0aW9uczogW1wic2V0RXhwYW5kZWRcIl1cbiAgICB9LFxuICAgIFwiRVhQQU5ERUQuQ0xFQVJcIjoge1xuICAgICAgYWN0aW9uczogW1wiY2xlYXJFeHBhbmRlZFwiXVxuICAgIH0sXG4gICAgXCJFWFBBTkRFRC5BTExcIjoge1xuICAgICAgYWN0aW9uczogW1wiZXhwYW5kQWxsQnJhbmNoZXNcIl1cbiAgICB9LFxuICAgIFwiQlJBTkNILkVYUEFORFwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJleHBhbmRCcmFuY2hlc1wiXVxuICAgIH0sXG4gICAgXCJCUkFOQ0guQ09MTEFQU0VcIjoge1xuICAgICAgYWN0aW9uczogW1wiY29sbGFwc2VCcmFuY2hlc1wiXVxuICAgIH0sXG4gICAgXCJTRUxFQ1RFRC5TRVRcIjoge1xuICAgICAgYWN0aW9uczogW1wic2V0U2VsZWN0ZWRcIl1cbiAgICB9LFxuICAgIFwiU0VMRUNURUQuQUxMXCI6IFtcbiAgICAgIHtcbiAgICAgICAgZ3VhcmQ6IGFuZChcImlzTXVsdGlwbGVTZWxlY3Rpb25cIiwgXCJtb3ZlRm9jdXNcIiksXG4gICAgICAgIGFjdGlvbnM6IFtcInNlbGVjdEFsbE5vZGVzXCIsIFwiZm9jdXNUcmVlTGFzdE5vZGVcIl1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGd1YXJkOiBcImlzTXVsdGlwbGVTZWxlY3Rpb25cIixcbiAgICAgICAgYWN0aW9uczogW1wic2VsZWN0QWxsTm9kZXNcIl1cbiAgICAgIH1cbiAgICBdLFxuICAgIFwiU0VMRUNURUQuQ0xFQVJcIjoge1xuICAgICAgYWN0aW9uczogW1wiY2xlYXJTZWxlY3RlZFwiXVxuICAgIH0sXG4gICAgXCJOT0RFLlNFTEVDVFwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJzZWxlY3ROb2RlXCJdXG4gICAgfSxcbiAgICBcIk5PREUuREVTRUxFQ1RcIjoge1xuICAgICAgYWN0aW9uczogW1wiZGVzZWxlY3ROb2RlXCJdXG4gICAgfSxcbiAgICBcIkNIRUNLRUQuVE9HR0xFXCI6IHtcbiAgICAgIGFjdGlvbnM6IFtcInRvZ2dsZUNoZWNrZWRcIl1cbiAgICB9LFxuICAgIFwiQ0hFQ0tFRC5TRVRcIjoge1xuICAgICAgYWN0aW9uczogW1wic2V0Q2hlY2tlZFwiXVxuICAgIH0sXG4gICAgXCJDSEVDS0VELkNMRUFSXCI6IHtcbiAgICAgIGFjdGlvbnM6IFtcImNsZWFyQ2hlY2tlZFwiXVxuICAgIH1cbiAgfSxcbiAgZXhpdDogW1wiY2xlYXJQZW5kaW5nQWJvcnRzXCJdLFxuICBzdGF0ZXM6IHtcbiAgICBpZGxlOiB7XG4gICAgICBvbjoge1xuICAgICAgICBcIk5PREUuRk9DVVNcIjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldEZvY3VzZWROb2RlXCJdXG4gICAgICAgIH0sXG4gICAgICAgIFwiTk9ERS5BUlJPV19ET1dOXCI6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogYW5kKFwiaXNTaGlmdEtleVwiLCBcImlzTXVsdGlwbGVTZWxlY3Rpb25cIiksXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJmb2N1c1RyZWVOZXh0Tm9kZVwiLCBcImV4dGVuZFNlbGVjdGlvblRvTmV4dE5vZGVcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImZvY3VzVHJlZU5leHROb2RlXCJdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBcIk5PREUuQVJST1dfVVBcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBhbmQoXCJpc1NoaWZ0S2V5XCIsIFwiaXNNdWx0aXBsZVNlbGVjdGlvblwiKSxcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImZvY3VzVHJlZVByZXZOb2RlXCIsIFwiZXh0ZW5kU2VsZWN0aW9uVG9QcmV2Tm9kZVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aW9uczogW1wiZm9jdXNUcmVlUHJldk5vZGVcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiTk9ERS5BUlJPV19MRUZUXCI6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJmb2N1c0JyYW5jaE5vZGVcIl1cbiAgICAgICAgfSxcbiAgICAgICAgXCJCUkFOQ0hfTk9ERS5BUlJPV19MRUZUXCI6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogXCJpc0JyYW5jaEV4cGFuZGVkXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJjb2xsYXBzZUJyYW5jaFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aW9uczogW1wiZm9jdXNCcmFuY2hOb2RlXCJdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBcIkJSQU5DSF9OT0RFLkFSUk9XX1JJR0hUXCI6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogYW5kKFwiaXNCcmFuY2hGb2N1c2VkXCIsIFwiaXNCcmFuY2hFeHBhbmRlZFwiKSxcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImZvY3VzQnJhbmNoRmlyc3ROb2RlXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJleHBhbmRCcmFuY2hcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiU0lCTElOR1MuRVhQQU5EXCI6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJleHBhbmRTaWJsaW5nQnJhbmNoZXNcIl1cbiAgICAgICAgfSxcbiAgICAgICAgXCJOT0RFLkhPTUVcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBhbmQoXCJpc1NoaWZ0S2V5XCIsIFwiaXNNdWx0aXBsZVNlbGVjdGlvblwiKSxcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImV4dGVuZFNlbGVjdGlvblRvRmlyc3ROb2RlXCIsIFwiZm9jdXNUcmVlRmlyc3ROb2RlXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJmb2N1c1RyZWVGaXJzdE5vZGVcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiTk9ERS5FTkRcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBhbmQoXCJpc1NoaWZ0S2V5XCIsIFwiaXNNdWx0aXBsZVNlbGVjdGlvblwiKSxcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcImV4dGVuZFNlbGVjdGlvblRvTGFzdE5vZGVcIiwgXCJmb2N1c1RyZWVMYXN0Tm9kZVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aW9uczogW1wiZm9jdXNUcmVlTGFzdE5vZGVcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiTk9ERS5DTElDS1wiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IGFuZChcImlzQ3RybEtleVwiLCBcImlzTXVsdGlwbGVTZWxlY3Rpb25cIiksXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJ0b2dnbGVOb2RlU2VsZWN0aW9uXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogYW5kKFwiaXNTaGlmdEtleVwiLCBcImlzTXVsdGlwbGVTZWxlY3Rpb25cIiksXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJleHRlbmRTZWxlY3Rpb25Ub05vZGVcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNlbGVjdE5vZGVcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiQlJBTkNIX05PREUuQ0xJQ0tcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBhbmQoXCJpc0N0cmxLZXlcIiwgXCJpc011bHRpcGxlU2VsZWN0aW9uXCIpLFxuICAgICAgICAgICAgYWN0aW9uczogW1widG9nZ2xlTm9kZVNlbGVjdGlvblwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IGFuZChcImlzU2hpZnRLZXlcIiwgXCJpc011bHRpcGxlU2VsZWN0aW9uXCIpLFxuICAgICAgICAgICAgYWN0aW9uczogW1wiZXh0ZW5kU2VsZWN0aW9uVG9Ob2RlXCJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogXCJleHBhbmRPbkNsaWNrXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJzZWxlY3ROb2RlXCIsIFwidG9nZ2xlQnJhbmNoTm9kZVwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aW9uczogW1wic2VsZWN0Tm9kZVwiXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgXCJCUkFOQ0hfVE9HR0xFLkNMSUNLXCI6IHtcbiAgICAgICAgICBhY3Rpb25zOiBbXCJ0b2dnbGVCcmFuY2hOb2RlXCJdXG4gICAgICAgIH0sXG4gICAgICAgIFwiVFJFRS5UWVBFQUhFQURcIjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcImZvY3VzTWF0Y2hlZE5vZGVcIl1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgaW1wbGVtZW50YXRpb25zOiB7XG4gICAgZ3VhcmRzOiB7XG4gICAgICBpc0JyYW5jaEZvY3VzZWQ6ICh7IGNvbnRleHQsIGV2ZW50IH0pID0+IGNvbnRleHQuZ2V0KFwiZm9jdXNlZFZhbHVlXCIpID09PSBldmVudC5pZCxcbiAgICAgIGlzQnJhbmNoRXhwYW5kZWQ6ICh7IGNvbnRleHQsIGV2ZW50IH0pID0+IGNvbnRleHQuZ2V0KFwiZXhwYW5kZWRWYWx1ZVwiKS5pbmNsdWRlcyhldmVudC5pZCksXG4gICAgICBpc1NoaWZ0S2V5OiAoeyBldmVudCB9KSA9PiBldmVudC5zaGlmdEtleSxcbiAgICAgIGlzQ3RybEtleTogKHsgZXZlbnQgfSkgPT4gZXZlbnQuY3RybEtleSxcbiAgICAgIGhhc1NlbGVjdGVkSXRlbXM6ICh7IGNvbnRleHQgfSkgPT4gY29udGV4dC5nZXQoXCJzZWxlY3RlZFZhbHVlXCIpLmxlbmd0aCA+IDAsXG4gICAgICBpc011bHRpcGxlU2VsZWN0aW9uOiAoeyBwcm9wIH0pID0+IHByb3AoXCJzZWxlY3Rpb25Nb2RlXCIpID09PSBcIm11bHRpcGxlXCIsXG4gICAgICBtb3ZlRm9jdXM6ICh7IGV2ZW50IH0pID0+ICEhZXZlbnQubW92ZUZvY3VzLFxuICAgICAgZXhwYW5kT25DbGljazogKHsgcHJvcCB9KSA9PiAhIXByb3AoXCJleHBhbmRPbkNsaWNrXCIpXG4gICAgfSxcbiAgICBhY3Rpb25zOiB7XG4gICAgICBzZWxlY3ROb2RlKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGV2ZW50LmlkIHx8IGV2ZW50LnZhbHVlO1xuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgKHByZXYpID0+IHtcbiAgICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHByZXY7XG4gICAgICAgICAgaWYgKCFldmVudC5pc1RydXN0ZWQgJiYgaXNBcnJheSh2YWx1ZSkpIHJldHVybiBwcmV2LmNvbmNhdCguLi52YWx1ZSk7XG4gICAgICAgICAgcmV0dXJuIFtpc0FycmF5KHZhbHVlKSA/IGxhc3QodmFsdWUpIDogdmFsdWVdLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgZGVzZWxlY3ROb2RlKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRvQXJyYXkoZXZlbnQuaWQgfHwgZXZlbnQudmFsdWUpO1xuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgKHByZXYpID0+IHJlbW92ZShwcmV2LCAuLi52YWx1ZSkpO1xuICAgICAgfSxcbiAgICAgIHNldEZvY3VzZWROb2RlKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcImZvY3VzZWRWYWx1ZVwiLCBldmVudC5pZCk7XG4gICAgICB9LFxuICAgICAgY2xlYXJGb2N1c2VkTm9kZSh7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcImZvY3VzZWRWYWx1ZVwiLCBudWxsKTtcbiAgICAgIH0sXG4gICAgICBjbGVhclNlbGVjdGVkSXRlbSh7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgW10pO1xuICAgICAgfSxcbiAgICAgIHRvZ2dsZUJyYW5jaE5vZGUoeyBjb250ZXh0LCBldmVudCwgYWN0aW9uIH0pIHtcbiAgICAgICAgY29uc3QgaXNFeHBhbmRlZCA9IGNvbnRleHQuZ2V0KFwiZXhwYW5kZWRWYWx1ZVwiKS5pbmNsdWRlcyhldmVudC5pZCk7XG4gICAgICAgIGFjdGlvbihpc0V4cGFuZGVkID8gW1wiY29sbGFwc2VCcmFuY2hcIl0gOiBbXCJleHBhbmRCcmFuY2hcIl0pO1xuICAgICAgfSxcbiAgICAgIGV4cGFuZEJyYW5jaChwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBldmVudCB9ID0gcGFyYW1zO1xuICAgICAgICBleHBhbmRCcmFuY2hlcyhwYXJhbXMsIFtldmVudC5pZF0pO1xuICAgICAgfSxcbiAgICAgIGV4cGFuZEJyYW5jaGVzKHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IGNvbnRleHQsIGV2ZW50IH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IHZhbHVlc1RvRXhwYW5kID0gdG9BcnJheShldmVudC52YWx1ZSk7XG4gICAgICAgIGV4cGFuZEJyYW5jaGVzKHBhcmFtcywgZGlmZih2YWx1ZXNUb0V4cGFuZCwgY29udGV4dC5nZXQoXCJleHBhbmRlZFZhbHVlXCIpKSk7XG4gICAgICB9LFxuICAgICAgY29sbGFwc2VCcmFuY2goeyBjb250ZXh0LCBldmVudCB9KSB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwiZXhwYW5kZWRWYWx1ZVwiLCAocHJldikgPT4gcmVtb3ZlKHByZXYsIGV2ZW50LmlkKSk7XG4gICAgICB9LFxuICAgICAgY29sbGFwc2VCcmFuY2hlcyhwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBldmVudCB9ID0gcGFyYW1zO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRvQXJyYXkoZXZlbnQudmFsdWUpO1xuICAgICAgICBjb250ZXh0LnNldChcImV4cGFuZGVkVmFsdWVcIiwgKHByZXYpID0+IHJlbW92ZShwcmV2LCAuLi52YWx1ZSkpO1xuICAgICAgfSxcbiAgICAgIHNldEV4cGFuZGVkKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBpZiAoIWlzQXJyYXkoZXZlbnQudmFsdWUpKSByZXR1cm47XG4gICAgICAgIGNvbnRleHQuc2V0KFwiZXhwYW5kZWRWYWx1ZVwiLCBldmVudC52YWx1ZSk7XG4gICAgICB9LFxuICAgICAgY2xlYXJFeHBhbmRlZCh7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcImV4cGFuZGVkVmFsdWVcIiwgW10pO1xuICAgICAgfSxcbiAgICAgIHNldFNlbGVjdGVkKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBpZiAoIWlzQXJyYXkoZXZlbnQudmFsdWUpKSByZXR1cm47XG4gICAgICAgIGNvbnRleHQuc2V0KFwic2VsZWN0ZWRWYWx1ZVwiLCBldmVudC52YWx1ZSk7XG4gICAgICB9LFxuICAgICAgY2xlYXJTZWxlY3RlZCh7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgW10pO1xuICAgICAgfSxcbiAgICAgIGZvY3VzVHJlZUZpcnN0Tm9kZSh7IHByb3AsIHNjb3BlIH0pIHtcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbjIgPSBwcm9wKFwiY29sbGVjdGlvblwiKTtcbiAgICAgICAgY29uc3QgZmlyc3ROb2RlID0gY29sbGVjdGlvbjIuZ2V0Rmlyc3ROb2RlKCk7XG4gICAgICAgIGNvbnN0IGZpcnN0VmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUoZmlyc3ROb2RlKTtcbiAgICAgICAgZm9jdXNOb2RlKHNjb3BlLCBmaXJzdFZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBmb2N1c1RyZWVMYXN0Tm9kZShwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBwcm9wLCBzY29wZSB9ID0gcGFyYW1zO1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uMiA9IHByb3AoXCJjb2xsZWN0aW9uXCIpO1xuICAgICAgICBjb25zdCBsYXN0Tm9kZSA9IGNvbGxlY3Rpb24yLmdldExhc3ROb2RlKHZvaWQgMCwgeyBza2lwOiBza2lwRm4ocGFyYW1zKSB9KTtcbiAgICAgICAgY29uc3QgbGFzdFZhbHVlID0gY29sbGVjdGlvbjIuZ2V0Tm9kZVZhbHVlKGxhc3ROb2RlKTtcbiAgICAgICAgZm9jdXNOb2RlKHNjb3BlLCBsYXN0VmFsdWUpO1xuICAgICAgfSxcbiAgICAgIGZvY3VzQnJhbmNoRmlyc3ROb2RlKHsgZXZlbnQsIHByb3AsIHNjb3BlIH0pIHtcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbjIgPSBwcm9wKFwiY29sbGVjdGlvblwiKTtcbiAgICAgICAgY29uc3QgYnJhbmNoTm9kZSA9IGNvbGxlY3Rpb24yLmZpbmROb2RlKGV2ZW50LmlkKTtcbiAgICAgICAgY29uc3QgZmlyc3ROb2RlID0gY29sbGVjdGlvbjIuZ2V0Rmlyc3ROb2RlKGJyYW5jaE5vZGUpO1xuICAgICAgICBjb25zdCBmaXJzdFZhbHVlID0gY29sbGVjdGlvbjIuZ2V0Tm9kZVZhbHVlKGZpcnN0Tm9kZSk7XG4gICAgICAgIGZvY3VzTm9kZShzY29wZSwgZmlyc3RWYWx1ZSk7XG4gICAgICB9LFxuICAgICAgZm9jdXNUcmVlTmV4dE5vZGUocGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZlbnQsIHByb3AsIHNjb3BlIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnN0IG5leHROb2RlID0gY29sbGVjdGlvbjIuZ2V0TmV4dE5vZGUoZXZlbnQuaWQsIHsgc2tpcDogc2tpcEZuKHBhcmFtcykgfSk7XG4gICAgICAgIGlmICghbmV4dE5vZGUpIHJldHVybjtcbiAgICAgICAgY29uc3QgbmV4dFZhbHVlID0gY29sbGVjdGlvbjIuZ2V0Tm9kZVZhbHVlKG5leHROb2RlKTtcbiAgICAgICAgZm9jdXNOb2RlKHNjb3BlLCBuZXh0VmFsdWUpO1xuICAgICAgfSxcbiAgICAgIGZvY3VzVHJlZVByZXZOb2RlKHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IGV2ZW50LCBwcm9wLCBzY29wZSB9ID0gcGFyYW1zO1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uMiA9IHByb3AoXCJjb2xsZWN0aW9uXCIpO1xuICAgICAgICBjb25zdCBwcmV2Tm9kZSA9IGNvbGxlY3Rpb24yLmdldFByZXZpb3VzTm9kZShldmVudC5pZCwgeyBza2lwOiBza2lwRm4ocGFyYW1zKSB9KTtcbiAgICAgICAgaWYgKCFwcmV2Tm9kZSkgcmV0dXJuO1xuICAgICAgICBjb25zdCBwcmV2VmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUocHJldk5vZGUpO1xuICAgICAgICBmb2N1c05vZGUoc2NvcGUsIHByZXZWYWx1ZSk7XG4gICAgICB9LFxuICAgICAgZm9jdXNCcmFuY2hOb2RlKHsgZXZlbnQsIHByb3AsIHNjb3BlIH0pIHtcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbjIgPSBwcm9wKFwiY29sbGVjdGlvblwiKTtcbiAgICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IGNvbGxlY3Rpb24yLmdldFBhcmVudE5vZGUoZXZlbnQuaWQpO1xuICAgICAgICBjb25zdCBwYXJlbnRWYWx1ZSA9IHBhcmVudE5vZGUgPyBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUocGFyZW50Tm9kZSkgOiB2b2lkIDA7XG4gICAgICAgIGZvY3VzTm9kZShzY29wZSwgcGFyZW50VmFsdWUpO1xuICAgICAgfSxcbiAgICAgIHNlbGVjdEFsbE5vZGVzKHsgY29udGV4dCwgcHJvcCB9KSB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwic2VsZWN0ZWRWYWx1ZVwiLCBwcm9wKFwiY29sbGVjdGlvblwiKS5nZXRWYWx1ZXMoKSk7XG4gICAgICB9LFxuICAgICAgZm9jdXNNYXRjaGVkTm9kZShwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBwcm9wLCByZWZzLCBldmVudCwgc2NvcGUsIGNvbXB1dGVkIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IG5vZGVzID0gY29tcHV0ZWQoXCJ2aXNpYmxlTm9kZXNcIik7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gbm9kZXMubWFwKCh7IG5vZGU6IG5vZGUyIH0pID0+ICh7XG4gICAgICAgICAgdGV4dENvbnRlbnQ6IHByb3AoXCJjb2xsZWN0aW9uXCIpLnN0cmluZ2lmeU5vZGUobm9kZTIpLFxuICAgICAgICAgIGlkOiBwcm9wKFwiY29sbGVjdGlvblwiKS5nZXROb2RlVmFsdWUobm9kZTIpXG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc3Qgbm9kZSA9IGdldEJ5VHlwZWFoZWFkKGVsZW1lbnRzLCB7XG4gICAgICAgICAgc3RhdGU6IHJlZnMuZ2V0KFwidHlwZWFoZWFkU3RhdGVcIiksXG4gICAgICAgICAgYWN0aXZlSWQ6IGNvbnRleHQuZ2V0KFwiZm9jdXNlZFZhbHVlXCIpLFxuICAgICAgICAgIGtleTogZXZlbnQua2V5XG4gICAgICAgIH0pO1xuICAgICAgICBmb2N1c05vZGUoc2NvcGUsIG5vZGU/LmlkKTtcbiAgICAgIH0sXG4gICAgICB0b2dnbGVOb2RlU2VsZWN0aW9uKHsgY29udGV4dCwgZXZlbnQgfSkge1xuICAgICAgICBjb25zdCBzZWxlY3RlZFZhbHVlID0gYWRkT3JSZW1vdmUoY29udGV4dC5nZXQoXCJzZWxlY3RlZFZhbHVlXCIpLCBldmVudC5pZCk7XG4gICAgICAgIGNvbnRleHQuc2V0KFwic2VsZWN0ZWRWYWx1ZVwiLCBzZWxlY3RlZFZhbHVlKTtcbiAgICAgIH0sXG4gICAgICBleHBhbmRBbGxCcmFuY2hlcyhwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBwcm9wIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGJyYW5jaFZhbHVlcyA9IHByb3AoXCJjb2xsZWN0aW9uXCIpLmdldEJyYW5jaFZhbHVlcygpO1xuICAgICAgICBjb25zdCB2YWx1ZXNUb0V4cGFuZCA9IGRpZmYoYnJhbmNoVmFsdWVzLCBjb250ZXh0LmdldChcImV4cGFuZGVkVmFsdWVcIikpO1xuICAgICAgICBleHBhbmRCcmFuY2hlcyhwYXJhbXMsIHZhbHVlc1RvRXhwYW5kKTtcbiAgICAgIH0sXG4gICAgICBleHBhbmRTaWJsaW5nQnJhbmNoZXMocGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IHsgY29udGV4dCwgZXZlbnQsIHByb3AgfSA9IHBhcmFtcztcbiAgICAgICAgY29uc3QgY29sbGVjdGlvbjIgPSBwcm9wKFwiY29sbGVjdGlvblwiKTtcbiAgICAgICAgY29uc3QgaW5kZXhQYXRoID0gY29sbGVjdGlvbjIuZ2V0SW5kZXhQYXRoKGV2ZW50LmlkKTtcbiAgICAgICAgaWYgKCFpbmRleFBhdGgpIHJldHVybjtcbiAgICAgICAgY29uc3Qgbm9kZXMgPSBjb2xsZWN0aW9uMi5nZXRTaWJsaW5nTm9kZXMoaW5kZXhQYXRoKTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gbm9kZXMubWFwKChub2RlKSA9PiBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobm9kZSkpO1xuICAgICAgICBjb25zdCB2YWx1ZXNUb0V4cGFuZCA9IGRpZmYodmFsdWVzLCBjb250ZXh0LmdldChcImV4cGFuZGVkVmFsdWVcIikpO1xuICAgICAgICBleHBhbmRCcmFuY2hlcyhwYXJhbXMsIHZhbHVlc1RvRXhwYW5kKTtcbiAgICAgIH0sXG4gICAgICBleHRlbmRTZWxlY3Rpb25Ub05vZGUocGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IHsgY29udGV4dCwgZXZlbnQsIHByb3AsIGNvbXB1dGVkIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnN0IGFuY2hvclZhbHVlID0gZmlyc3QoY29udGV4dC5nZXQoXCJzZWxlY3RlZFZhbHVlXCIpKSB8fCBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUoY29sbGVjdGlvbjIuZ2V0Rmlyc3ROb2RlKCkpO1xuICAgICAgICBjb25zdCB0YXJnZXRWYWx1ZSA9IGV2ZW50LmlkO1xuICAgICAgICBsZXQgdmFsdWVzID0gW2FuY2hvclZhbHVlLCB0YXJnZXRWYWx1ZV07XG4gICAgICAgIGxldCBoaXRzID0gMDtcbiAgICAgICAgY29uc3QgdmlzaWJsZU5vZGVzID0gY29tcHV0ZWQoXCJ2aXNpYmxlTm9kZXNcIik7XG4gICAgICAgIHZpc2libGVOb2Rlcy5mb3JFYWNoKCh7IG5vZGUgfSkgPT4ge1xuICAgICAgICAgIGNvbnN0IG5vZGVWYWx1ZSA9IGNvbGxlY3Rpb24yLmdldE5vZGVWYWx1ZShub2RlKTtcbiAgICAgICAgICBpZiAoaGl0cyA9PT0gMSkgdmFsdWVzLnB1c2gobm9kZVZhbHVlKTtcbiAgICAgICAgICBpZiAobm9kZVZhbHVlID09PSBhbmNob3JWYWx1ZSB8fCBub2RlVmFsdWUgPT09IHRhcmdldFZhbHVlKSBoaXRzKys7XG4gICAgICAgIH0pO1xuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgdW5pcSh2YWx1ZXMpKTtcbiAgICAgIH0sXG4gICAgICBleHRlbmRTZWxlY3Rpb25Ub05leHROb2RlKHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IGNvbnRleHQsIGV2ZW50LCBwcm9wIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnN0IG5leHROb2RlID0gY29sbGVjdGlvbjIuZ2V0TmV4dE5vZGUoZXZlbnQuaWQsIHsgc2tpcDogc2tpcEZuKHBhcmFtcykgfSk7XG4gICAgICAgIGlmICghbmV4dE5vZGUpIHJldHVybjtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gbmV3IFNldChjb250ZXh0LmdldChcInNlbGVjdGVkVmFsdWVcIikpO1xuICAgICAgICBjb25zdCBuZXh0VmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobmV4dE5vZGUpO1xuICAgICAgICBpZiAobmV4dFZhbHVlID09IG51bGwpIHJldHVybjtcbiAgICAgICAgaWYgKHZhbHVlcy5oYXMoZXZlbnQuaWQpICYmIHZhbHVlcy5oYXMobmV4dFZhbHVlKSkge1xuICAgICAgICAgIHZhbHVlcy5kZWxldGUoZXZlbnQuaWQpO1xuICAgICAgICB9IGVsc2UgaWYgKCF2YWx1ZXMuaGFzKG5leHRWYWx1ZSkpIHtcbiAgICAgICAgICB2YWx1ZXMuYWRkKG5leHRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGV4dC5zZXQoXCJzZWxlY3RlZFZhbHVlXCIsIEFycmF5LmZyb20odmFsdWVzKSk7XG4gICAgICB9LFxuICAgICAgZXh0ZW5kU2VsZWN0aW9uVG9QcmV2Tm9kZShwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBldmVudCwgcHJvcCB9ID0gcGFyYW1zO1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uMiA9IHByb3AoXCJjb2xsZWN0aW9uXCIpO1xuICAgICAgICBjb25zdCBwcmV2Tm9kZSA9IGNvbGxlY3Rpb24yLmdldFByZXZpb3VzTm9kZShldmVudC5pZCwgeyBza2lwOiBza2lwRm4ocGFyYW1zKSB9KTtcbiAgICAgICAgaWYgKCFwcmV2Tm9kZSkgcmV0dXJuO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBuZXcgU2V0KGNvbnRleHQuZ2V0KFwic2VsZWN0ZWRWYWx1ZVwiKSk7XG4gICAgICAgIGNvbnN0IHByZXZWYWx1ZSA9IGNvbGxlY3Rpb24yLmdldE5vZGVWYWx1ZShwcmV2Tm9kZSk7XG4gICAgICAgIGlmIChwcmV2VmFsdWUgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBpZiAodmFsdWVzLmhhcyhldmVudC5pZCkgJiYgdmFsdWVzLmhhcyhwcmV2VmFsdWUpKSB7XG4gICAgICAgICAgdmFsdWVzLmRlbGV0ZShldmVudC5pZCk7XG4gICAgICAgIH0gZWxzZSBpZiAoIXZhbHVlcy5oYXMocHJldlZhbHVlKSkge1xuICAgICAgICAgIHZhbHVlcy5hZGQocHJldlZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LnNldChcInNlbGVjdGVkVmFsdWVcIiwgQXJyYXkuZnJvbSh2YWx1ZXMpKTtcbiAgICAgIH0sXG4gICAgICBleHRlbmRTZWxlY3Rpb25Ub0ZpcnN0Tm9kZShwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBwcm9wIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTZWxlY3Rpb24gPSBmaXJzdChjb250ZXh0LmdldChcInNlbGVjdGVkVmFsdWVcIikpO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICAgICAgY29sbGVjdGlvbjIudmlzaXQoe1xuICAgICAgICAgIHNraXA6IHNraXBGbihwYXJhbXMpLFxuICAgICAgICAgIG9uRW50ZXI6IChub2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobm9kZSk7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChub2RlVmFsdWUpO1xuICAgICAgICAgICAgaWYgKG5vZGVWYWx1ZSA9PT0gY3VycmVudFNlbGVjdGlvbikge1xuICAgICAgICAgICAgICByZXR1cm4gXCJzdG9wXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgY29udGV4dC5zZXQoXCJzZWxlY3RlZFZhbHVlXCIsIHZhbHVlcyk7XG4gICAgICB9LFxuICAgICAgZXh0ZW5kU2VsZWN0aW9uVG9MYXN0Tm9kZShwYXJhbXMpIHtcbiAgICAgICAgY29uc3QgeyBjb250ZXh0LCBwcm9wIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTZWxlY3Rpb24gPSBmaXJzdChjb250ZXh0LmdldChcInNlbGVjdGVkVmFsdWVcIikpO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICAgICAgbGV0IGN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgY29sbGVjdGlvbjIudmlzaXQoe1xuICAgICAgICAgIHNraXA6IHNraXBGbihwYXJhbXMpLFxuICAgICAgICAgIG9uRW50ZXI6IChub2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSBjb2xsZWN0aW9uMi5nZXROb2RlVmFsdWUobm9kZSk7XG4gICAgICAgICAgICBpZiAobm9kZVZhbHVlID09PSBjdXJyZW50U2VsZWN0aW9uKSBjdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChjdXJyZW50KSB2YWx1ZXMucHVzaChub2RlVmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRleHQuc2V0KFwic2VsZWN0ZWRWYWx1ZVwiLCB2YWx1ZXMpO1xuICAgICAgfSxcbiAgICAgIGNsZWFyUGVuZGluZ0Fib3J0cyh7IHJlZnMgfSkge1xuICAgICAgICBjb25zdCBhYm9ydHMgPSByZWZzLmdldChcInBlbmRpbmdBYm9ydHNcIik7XG4gICAgICAgIGFib3J0cy5mb3JFYWNoKChhYm9ydCkgPT4gYWJvcnQuYWJvcnQoKSk7XG4gICAgICAgIGFib3J0cy5jbGVhcigpO1xuICAgICAgfSxcbiAgICAgIHRvZ2dsZUNoZWNrZWQoeyBjb250ZXh0LCBldmVudCwgcHJvcCB9KSB7XG4gICAgICAgIGNvbnN0IGNvbGxlY3Rpb24yID0gcHJvcChcImNvbGxlY3Rpb25cIik7XG4gICAgICAgIGNvbnRleHQuc2V0KFxuICAgICAgICAgIFwiY2hlY2tlZFZhbHVlXCIsXG4gICAgICAgICAgKHByZXYpID0+IGV2ZW50LmlzQnJhbmNoID8gdG9nZ2xlQnJhbmNoQ2hlY2tlZChjb2xsZWN0aW9uMiwgZXZlbnQudmFsdWUsIHByZXYpIDogYWRkT3JSZW1vdmUocHJldiwgZXZlbnQudmFsdWUpXG4gICAgICAgICk7XG4gICAgICB9LFxuICAgICAgc2V0Q2hlY2tlZCh7IGNvbnRleHQsIGV2ZW50IH0pIHtcbiAgICAgICAgY29udGV4dC5zZXQoXCJjaGVja2VkVmFsdWVcIiwgZXZlbnQudmFsdWUpO1xuICAgICAgfSxcbiAgICAgIGNsZWFyQ2hlY2tlZCh7IGNvbnRleHQgfSkge1xuICAgICAgICBjb250ZXh0LnNldChcImNoZWNrZWRWYWx1ZVwiLCBbXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbnZhciBwcm9wcyA9IGNyZWF0ZVByb3BzKCkoW1xuICBcImlkc1wiLFxuICBcImNvbGxlY3Rpb25cIixcbiAgXCJkaXJcIixcbiAgXCJleHBhbmRlZFZhbHVlXCIsXG4gIFwiZXhwYW5kT25DbGlja1wiLFxuICBcImRlZmF1bHRGb2N1c2VkVmFsdWVcIixcbiAgXCJmb2N1c2VkVmFsdWVcIixcbiAgXCJnZXRSb290Tm9kZVwiLFxuICBcImlkXCIsXG4gIFwib25FeHBhbmRlZENoYW5nZVwiLFxuICBcIm9uRm9jdXNDaGFuZ2VcIixcbiAgXCJvblNlbGVjdGlvbkNoYW5nZVwiLFxuICBcImNoZWNrZWRWYWx1ZVwiLFxuICBcInNlbGVjdGVkVmFsdWVcIixcbiAgXCJzZWxlY3Rpb25Nb2RlXCIsXG4gIFwidHlwZWFoZWFkXCIsXG4gIFwiZGVmYXVsdEV4cGFuZGVkVmFsdWVcIixcbiAgXCJkZWZhdWx0U2VsZWN0ZWRWYWx1ZVwiLFxuICBcImRlZmF1bHRDaGVja2VkVmFsdWVcIixcbiAgXCJvbkNoZWNrZWRDaGFuZ2VcIixcbiAgXCJvbkxvYWRDaGlsZHJlbkNvbXBsZXRlXCIsXG4gIFwib25Mb2FkQ2hpbGRyZW5FcnJvclwiLFxuICBcImxvYWRDaGlsZHJlblwiXG5dKTtcbnZhciBzcGxpdFByb3BzID0gY3JlYXRlU3BsaXRQcm9wcyhwcm9wcyk7XG52YXIgaXRlbVByb3BzID0gY3JlYXRlUHJvcHMoKShbXCJub2RlXCIsIFwiaW5kZXhQYXRoXCJdKTtcbnZhciBzcGxpdEl0ZW1Qcm9wcyA9IGNyZWF0ZVNwbGl0UHJvcHMoaXRlbVByb3BzKTtcblxuZXhwb3J0IHsgYW5hdG9teSwgY29sbGVjdGlvbiwgY29ubmVjdCwgZmlsZVBhdGhDb2xsZWN0aW9uLCBpdGVtUHJvcHMsIG1hY2hpbmUsIHByb3BzLCBzcGxpdEl0ZW1Qcm9wcywgc3BsaXRQcm9wcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tree-view/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/types/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/types/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNormalizer: () => (/* binding */ createNormalizer),\n/* harmony export */   createProps: () => (/* binding */ createProps)\n/* harmony export */ });\n// src/prop-types.ts\nfunction createNormalizer(fn) {\n  return new Proxy({}, {\n    get(_target, key) {\n      if (key === \"style\")\n        return (props) => {\n          return fn({ style: props }).style;\n        };\n      return fn;\n    }\n  });\n}\n\n// src/create-props.ts\nvar createProps = () => (props) => Array.from(new Set(props));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcz8yMTUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wcm9wLXR5cGVzLnRzXG5mdW5jdGlvbiBjcmVhdGVOb3JtYWxpemVyKGZuKSB7XG4gIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICBnZXQoX3RhcmdldCwga2V5KSB7XG4gICAgICBpZiAoa2V5ID09PSBcInN0eWxlXCIpXG4gICAgICAgIHJldHVybiAocHJvcHMpID0+IHtcbiAgICAgICAgICByZXR1cm4gZm4oeyBzdHlsZTogcHJvcHMgfSkuc3R5bGU7XG4gICAgICAgIH07XG4gICAgICByZXR1cm4gZm47XG4gICAgfVxuICB9KTtcbn1cblxuLy8gc3JjL2NyZWF0ZS1wcm9wcy50c1xudmFyIGNyZWF0ZVByb3BzID0gKCkgPT4gKHByb3BzKSA9PiBBcnJheS5mcm9tKG5ldyBTZXQocHJvcHMpKTtcblxuZXhwb3J0IHsgY3JlYXRlTm9ybWFsaXplciwgY3JlYXRlUHJvcHMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/types/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/utils/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/utils/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   addOrRemove: () => (/* binding */ addOrRemove),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   cast: () => (/* binding */ cast),\n/* harmony export */   chunk: () => (/* binding */ chunk),\n/* harmony export */   clampPercent: () => (/* binding */ clampPercent),\n/* harmony export */   clampValue: () => (/* binding */ clampValue),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   createSplitProps: () => (/* binding */ createSplitProps),\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   decrementValue: () => (/* binding */ decrementValue),\n/* harmony export */   diff: () => (/* binding */ diff),\n/* harmony export */   ensure: () => (/* binding */ ensure),\n/* harmony export */   ensureProps: () => (/* binding */ ensureProps),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   flatArray: () => (/* binding */ flatArray),\n/* harmony export */   fromLength: () => (/* binding */ fromLength),\n/* harmony export */   getClosestValue: () => (/* binding */ getClosestValue),\n/* harmony export */   getClosestValueIndex: () => (/* binding */ getClosestValueIndex),\n/* harmony export */   getMaxValueAtIndex: () => (/* binding */ getMaxValueAtIndex),\n/* harmony export */   getMinValueAtIndex: () => (/* binding */ getMinValueAtIndex),\n/* harmony export */   getNextStepValue: () => (/* binding */ getNextStepValue),\n/* harmony export */   getPercentValue: () => (/* binding */ getPercentValue),\n/* harmony export */   getPreviousStepValue: () => (/* binding */ getPreviousStepValue),\n/* harmony export */   getValuePercent: () => (/* binding */ getValuePercent),\n/* harmony export */   getValueRanges: () => (/* binding */ getValueRanges),\n/* harmony export */   getValueSetterAtIndex: () => (/* binding */ getValueSetterAtIndex),\n/* harmony export */   getValueTransformer: () => (/* binding */ getValueTransformer),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   hasProp: () => (/* binding */ hasProp),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   incrementValue: () => (/* binding */ incrementValue),\n/* harmony export */   insertAt: () => (/* binding */ insertAt),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isBoolean: () => (/* binding */ isBoolean),\n/* harmony export */   isDev: () => (/* binding */ isDev),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isValueAtMax: () => (/* binding */ isValueAtMax),\n/* harmony export */   isValueAtMin: () => (/* binding */ isValueAtMin),\n/* harmony export */   isValueWithinRange: () => (/* binding */ isValueWithinRange),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   nextIndex: () => (/* binding */ nextIndex),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   partition: () => (/* binding */ partition),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   prev: () => (/* binding */ prev),\n/* harmony export */   prevIndex: () => (/* binding */ prevIndex),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeAt: () => (/* binding */ removeAt),\n/* harmony export */   roundToDpr: () => (/* binding */ roundToDpr),\n/* harmony export */   roundToStepPrecision: () => (/* binding */ roundToStepPrecision),\n/* harmony export */   roundValue: () => (/* binding */ roundValue),\n/* harmony export */   runIfFn: () => (/* binding */ runIfFn),\n/* harmony export */   setRafInterval: () => (/* binding */ setRafInterval),\n/* harmony export */   setRafTimeout: () => (/* binding */ setRafTimeout),\n/* harmony export */   setValueAtIndex: () => (/* binding */ setValueAtIndex),\n/* harmony export */   snapValueToStep: () => (/* binding */ snapValueToStep),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   throttle: () => (/* binding */ throttle),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toFixedNumber: () => (/* binding */ toFixedNumber),\n/* harmony export */   toPx: () => (/* binding */ toPx),\n/* harmony export */   tryCatch: () => (/* binding */ tryCatch),\n/* harmony export */   uniq: () => (/* binding */ uniq),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   warn: () => (/* binding */ warn),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n// src/array.ts\nfunction toArray(v) {\n  if (v == null) return [];\n  return Array.isArray(v) ? v : [v];\n}\nvar fromLength = (length) => Array.from(Array(length).keys());\nvar first = (v) => v[0];\nvar last = (v) => v[v.length - 1];\nvar isEmpty = (v) => v.length === 0;\nvar has = (v, t) => v.indexOf(t) !== -1;\nvar add = (v, ...items) => v.concat(items);\nvar remove = (v, ...items) => v.filter((t) => !items.includes(t));\nvar removeAt = (v, i) => v.filter((_, idx) => idx !== i);\nvar insertAt = (v, i, ...items) => [...v.slice(0, i), ...items, ...v.slice(i)];\nvar uniq = (v) => Array.from(new Set(v));\nvar diff = (a, b) => {\n  const set = new Set(b);\n  return a.filter((t) => !set.has(t));\n};\nvar addOrRemove = (v, item) => has(v, item) ? remove(v, item) : add(v, item);\nfunction clear(v) {\n  while (v.length > 0) v.pop();\n  return v;\n}\nfunction nextIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  const next2 = idx + step;\n  const len = v.length;\n  const last2 = len - 1;\n  if (idx === -1) return step > 0 ? 0 : last2;\n  if (next2 < 0) return loop ? last2 : 0;\n  if (next2 >= len) return loop ? 0 : idx > len ? len : idx;\n  return next2;\n}\nfunction next(v, idx, opts = {}) {\n  return v[nextIndex(v, idx, opts)];\n}\nfunction prevIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  return nextIndex(v, idx, { step: -step, loop });\n}\nfunction prev(v, index, opts = {}) {\n  return v[prevIndex(v, index, opts)];\n}\nfunction chunk(v, size) {\n  return v.reduce((rows, value, index) => {\n    if (index % size === 0) rows.push([value]);\n    else last(rows)?.push(value);\n    return rows;\n  }, []);\n}\nfunction flatArray(arr) {\n  return arr.reduce((flat, item) => {\n    if (Array.isArray(item)) {\n      return flat.concat(flatArray(item));\n    }\n    return flat.concat(item);\n  }, []);\n}\nfunction partition(arr, fn) {\n  return arr.reduce(\n    ([pass, fail], value) => {\n      if (fn(value)) pass.push(value);\n      else fail.push(value);\n      return [pass, fail];\n    },\n    [[], []]\n  );\n}\n\n// src/equal.ts\nvar isArrayLike = (value) => value?.constructor.name === \"Array\";\nvar isArrayEqual = (a, b) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (!isEqual(a[i], b[i])) return false;\n  }\n  return true;\n};\nvar isEqual = (a, b) => {\n  if (Object.is(a, b)) return true;\n  if (a == null && b != null || a != null && b == null) return false;\n  if (typeof a?.isEqual === \"function\" && typeof b?.isEqual === \"function\") {\n    return a.isEqual(b);\n  }\n  if (typeof a === \"function\" && typeof b === \"function\") {\n    return a.toString() === b.toString();\n  }\n  if (isArrayLike(a) && isArrayLike(b)) {\n    return isArrayEqual(Array.from(a), Array.from(b));\n  }\n  if (!(typeof a === \"object\") || !(typeof b === \"object\")) return false;\n  const keys = Object.keys(b ?? /* @__PURE__ */ Object.create(null));\n  const length = keys.length;\n  for (let i = 0; i < length; i++) {\n    const hasKey = Reflect.has(a, keys[i]);\n    if (!hasKey) return false;\n  }\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (!isEqual(a[key], b[key])) return false;\n  }\n  return true;\n};\n\n// src/guard.ts\nvar isDev = () => \"development\" !== \"production\";\nvar isArray = (v) => Array.isArray(v);\nvar isBoolean = (v) => v === true || v === false;\nvar isObjectLike = (v) => v != null && typeof v === \"object\";\nvar isObject = (v) => isObjectLike(v) && !isArray(v);\nvar isNumber = (v) => typeof v === \"number\" && !Number.isNaN(v);\nvar isString = (v) => typeof v === \"string\";\nvar isFunction = (v) => typeof v === \"function\";\nvar isNull = (v) => v == null;\nvar hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nvar baseGetTag = (v) => Object.prototype.toString.call(v);\nvar fnToString = Function.prototype.toString;\nvar objectCtorString = fnToString.call(Object);\nvar isPlainObject = (v) => {\n  if (!isObjectLike(v) || baseGetTag(v) != \"[object Object]\" || isFrameworkElement(v)) return false;\n  const proto = Object.getPrototypeOf(v);\n  if (proto === null) return true;\n  const Ctor = hasProp(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor == \"function\" && Ctor instanceof Ctor && fnToString.call(Ctor) == objectCtorString;\n};\nvar isReactElement = (x) => typeof x === \"object\" && x !== null && \"$$typeof\" in x && \"props\" in x;\nvar isVueElement = (x) => typeof x === \"object\" && x !== null && \"__v_isVNode\" in x;\nvar isFrameworkElement = (x) => isReactElement(x) || isVueElement(x);\n\n// src/functions.ts\nvar runIfFn = (v, ...a) => {\n  const res = typeof v === \"function\" ? v(...a) : v;\n  return res ?? void 0;\n};\nvar cast = (v) => v;\nvar identity = (v) => v();\nvar noop = () => {\n};\nvar callAll = (...fns) => (...a) => {\n  fns.forEach(function(fn) {\n    fn?.(...a);\n  });\n};\nvar uuid = /* @__PURE__ */ (() => {\n  let id = 0;\n  return () => {\n    id++;\n    return id.toString(36);\n  };\n})();\nfunction match(key, record, ...args) {\n  if (key in record) {\n    const fn = record[key];\n    return isFunction(fn) ? fn(...args) : fn;\n  }\n  const error = new Error(`No matching key: ${JSON.stringify(key)} in ${JSON.stringify(Object.keys(record))}`);\n  Error.captureStackTrace?.(error, match);\n  throw error;\n}\nvar tryCatch = (fn, fallback) => {\n  try {\n    return fn();\n  } catch (error) {\n    if (error instanceof Error) {\n      Error.captureStackTrace?.(error, tryCatch);\n    }\n    return fallback?.();\n  }\n};\nfunction throttle(fn, wait = 0) {\n  let lastCall = 0;\n  let timeout = null;\n  return ((...args) => {\n    const now = Date.now();\n    const timeSinceLastCall = now - lastCall;\n    if (timeSinceLastCall >= wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      fn(...args);\n      lastCall = now;\n    } else if (!timeout) {\n      timeout = setTimeout(() => {\n        fn(...args);\n        lastCall = Date.now();\n        timeout = null;\n      }, wait - timeSinceLastCall);\n    }\n  });\n}\nfunction debounce(fn, wait = 0) {\n  let timeout = null;\n  return ((...args) => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    timeout = setTimeout(() => {\n      fn(...args);\n    }, wait);\n  });\n}\n\n// src/number.ts\nvar { floor, abs, round, min, max, pow, sign } = Math;\nvar isNaN = (v) => Number.isNaN(v);\nvar nan = (v) => isNaN(v) ? 0 : v;\nvar mod = (v, m) => (v % m + m) % m;\nvar wrap = (v, vmax) => (v % vmax + vmax) % vmax;\nvar getMinValueAtIndex = (i, v, vmin) => i === 0 ? vmin : v[i - 1];\nvar getMaxValueAtIndex = (i, v, vmax) => i === v.length - 1 ? vmax : v[i + 1];\nvar isValueAtMax = (v, vmax) => nan(v) >= vmax;\nvar isValueAtMin = (v, vmin) => nan(v) <= vmin;\nvar isValueWithinRange = (v, vmin, vmax) => {\n  const value = nan(v);\n  const minCheck = vmin == null || value >= vmin;\n  const maxCheck = vmax == null || value <= vmax;\n  return minCheck && maxCheck;\n};\nvar roundValue = (v, vmin, step) => round((nan(v) - vmin) / step) * step + vmin;\nvar clampValue = (v, vmin, vmax) => min(max(nan(v), vmin), vmax);\nvar clampPercent = (v) => clampValue(v, 0, 1);\nvar getValuePercent = (v, vmin, vmax) => (nan(v) - vmin) / (vmax - vmin);\nvar getPercentValue = (p, vmin, vmax, step) => clampValue(roundValue(p * (vmax - vmin) + vmin, vmin, step), vmin, vmax);\nvar roundToStepPrecision = (v, step) => {\n  let rv = v;\n  let ss = step.toString();\n  let pi = ss.indexOf(\".\");\n  let p = pi >= 0 ? ss.length - pi : 0;\n  if (p > 0) {\n    let pw = pow(10, p);\n    rv = round(rv * pw) / pw;\n  }\n  return rv;\n};\nvar roundToDpr = (v, dpr) => typeof dpr === \"number\" ? floor(v * dpr + 0.5) / dpr : round(v);\nvar snapValueToStep = (v, vmin, vmax, step) => {\n  const min2 = vmin != null ? Number(vmin) : 0;\n  const max2 = Number(vmax);\n  const remainder = (v - min2) % step;\n  let snapped = abs(remainder) * 2 >= step ? v + sign(remainder) * (step - abs(remainder)) : v - remainder;\n  snapped = roundToStepPrecision(snapped, step);\n  if (!isNaN(min2) && snapped < min2) {\n    snapped = min2;\n  } else if (!isNaN(max2) && snapped > max2) {\n    const stepsInRange = floor((max2 - min2) / step);\n    const largestValidStep = min2 + stepsInRange * step;\n    snapped = stepsInRange <= 0 || largestValidStep < min2 ? max2 : largestValidStep;\n  }\n  return roundToStepPrecision(snapped, step);\n};\nvar setValueAtIndex = (vs, i, v) => {\n  if (vs[i] === v) return vs;\n  return [...vs.slice(0, i), v, ...vs.slice(i + 1)];\n};\nfunction getValueSetterAtIndex(index, ctx) {\n  const minValueAtIndex = getMinValueAtIndex(index, ctx.values, ctx.min);\n  const maxValueAtIndex = getMaxValueAtIndex(index, ctx.values, ctx.max);\n  let nextValues = ctx.values.slice();\n  return function setValue(value) {\n    let nextValue = snapValueToStep(value, minValueAtIndex, maxValueAtIndex, ctx.step);\n    nextValues = setValueAtIndex(nextValues, index, value);\n    nextValues[index] = nextValue;\n    return nextValues;\n  };\n}\nfunction getNextStepValue(index, ctx) {\n  const nextValue = ctx.values[index] + ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nfunction getPreviousStepValue(index, ctx) {\n  const nextValue = ctx.values[index] - ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nvar getClosestValueIndex = (vs, t) => {\n  let i = vs.findIndex((v) => t - v < 0);\n  if (i === 0) return i;\n  if (i === -1) return vs.length - 1;\n  let vLeft = vs[i - 1];\n  let vRight = vs[i];\n  if (abs(vLeft - t) < abs(vRight - t)) return i - 1;\n  return i;\n};\nvar getClosestValue = (vs, t) => vs[getClosestValueIndex(vs, t)];\nvar getValueRanges = (vs, vmin, vmax, gap) => vs.map((v, i) => ({\n  min: i === 0 ? vmin : vs[i - 1] + gap,\n  max: i === vs.length - 1 ? vmax : vs[i + 1] - gap,\n  value: v\n}));\nvar getValueTransformer = (va, vb) => {\n  const [a, b] = va;\n  const [c, d] = vb;\n  return (v) => a === b || c === d ? c : c + (d - c) / (b - a) * (v - a);\n};\nvar toFixedNumber = (v, d = 0, b = 10) => {\n  const pow2 = Math.pow(b, d);\n  return round(v * pow2) / pow2;\n};\nvar countDecimals = (value) => {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n};\nvar decimalOp = (a, op, b) => {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n};\nvar incrementValue = (v, s) => decimalOp(nan(v), \"+\", s);\nvar decrementValue = (v, s) => decimalOp(nan(v), \"-\", s);\nvar toPx = (v) => v != null ? `${v}px` : void 0;\n\n// src/object.ts\nfunction compact(obj) {\n  if (!isPlainObject(obj) || obj === void 0) return obj;\n  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === \"string\");\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = compact(value);\n    }\n  }\n  return filtered;\n}\nvar json = (v) => JSON.parse(JSON.stringify(v));\nfunction pick(obj, keys) {\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = value;\n    }\n  }\n  return filtered;\n}\nfunction splitProps(props, keys) {\n  const rest = {};\n  const result = {};\n  const keySet = new Set(keys);\n  for (const key in props) {\n    if (keySet.has(key)) {\n      result[key] = props[key];\n    } else {\n      rest[key] = props[key];\n    }\n  }\n  return [result, rest];\n}\nvar createSplitProps = (keys) => {\n  return function split(props) {\n    return splitProps(props, keys);\n  };\n};\nfunction omit(obj, keys) {\n  return createSplitProps(keys)(obj)[1];\n}\n\n// src/store.ts\nfunction createStore(initialState, compare = Object.is) {\n  let state = { ...initialState };\n  const listeners = /* @__PURE__ */ new Set();\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const publish = () => {\n    listeners.forEach((listener) => listener());\n  };\n  const get = (key) => {\n    return state[key];\n  };\n  const set = (key, value) => {\n    if (!compare(state[key], value)) {\n      state[key] = value;\n      publish();\n    }\n  };\n  const update = (updates) => {\n    let hasChanges = false;\n    for (const key in updates) {\n      const value = updates[key];\n      if (value !== void 0 && !compare(state[key], value)) {\n        state[key] = value;\n        hasChanges = true;\n      }\n    }\n    if (hasChanges) {\n      publish();\n    }\n  };\n  const snapshot = () => ({ ...state });\n  return {\n    subscribe,\n    get,\n    set,\n    update,\n    snapshot\n  };\n}\n\n// src/timers.ts\nfunction setRafInterval(callback, interval) {\n  let start = performance.now();\n  let handle;\n  function loop(now) {\n    const delta = now - start;\n    if (delta >= interval) {\n      start = interval > 0 ? now - delta % interval : now;\n      callback({ startMs: start, deltaMs: delta });\n    }\n    handle = requestAnimationFrame(loop);\n  }\n  handle = requestAnimationFrame(loop);\n  return () => cancelAnimationFrame(handle);\n}\nfunction setRafTimeout(callback, delay) {\n  const start = performance.now();\n  let handle;\n  function loop(now) {\n    const delta = now - start;\n    if (delta >= delay) {\n      callback();\n      return;\n    }\n    handle = requestAnimationFrame(loop);\n  }\n  handle = requestAnimationFrame(loop);\n  return () => cancelAnimationFrame(handle);\n}\n\n// src/warning.ts\nfunction warn(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    console.warn(m);\n  }\n}\nfunction invariant(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    throw new Error(m);\n  }\n}\nfunction ensure(c, m) {\n  if (c == null) throw new Error(m());\n}\nfunction ensureProps(props, keys, scope) {\n  let missingKeys = [];\n  for (const key of keys) {\n    if (props[key] == null) missingKeys.push(key);\n  }\n  if (missingKeys.length > 0)\n    throw new Error(`[zag-js${scope ? ` > ${scope}` : \"\"}] missing required props: ${missingKeys.join(\", \")}`);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\n");

/***/ })

};
;